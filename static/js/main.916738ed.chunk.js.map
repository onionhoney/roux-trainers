{"version":3,"sources":["lib/Hooks.tsx","worker/index.ts","lib/Defs.tsx","lib/Math.ts","lib/three/OrbitControls.js","components/CubeSim.tsx","lib/CubeLib.tsx","components/SelectorViews.tsx","components/Input.tsx","components/CaseVisualizer.tsx","components/Dialog.tsx","theme.js","components/CaseSelectView.tsx","lib/Algs.tsx","components/CubeSim2D.tsx","components/CmllTrainerView.tsx","components/ScrambleInputView.tsx","components/Tooltip.tsx","components/BlockTrainerView.tsx","components/PanoramaView.tsx","lib/Pruner.tsx","lib/min2phase/min2phase-wrapper.ts","lib/Solver.tsx","lib/CachedSolver.tsx","components/FavListView.tsx","components/TopBarView.tsx","lib/Evaluator.tsx","lib/Analyzer.ts","components/AnalyzerView.tsx","components/AppView.tsx","Version.tsx","lib/Selector.tsx","Config.tsx","lib/LocalStorage.tsx","reducers/AbstractStateM.tsx","reducers/BlockTrainerStateM.tsx","reducers/SsStateM.tsx","reducers/LSETrainerStateM.tsx","reducers/CmllStateM.tsx","reducers/StateFactory.tsx","KeyMapping.tsx","reducers/InitialState.tsx","reducers/Reducer.tsx","app/App.tsx","serviceWorker.js","index.tsx","lib/min2phase/min2phase.js"],"names":["useAnalyzer","analyzerState","data","setData","useState","isRunning","solutions","undefined","workerApi","workerApiAndCleanup","useMemo","worker","Worker","name","type","wrap","cleanup","releaseProxy","terminate","makeWorkerApiAndCleanup","useEffect","useWorker","scramble","analyze","then","module","exports","Face","U","D","F","B","L","R","Typ","C","E","T","corners_coord","edges_coord","centers_coord","cstimer_corners_coord","cstimer_edges_coord","u","cpc","coc","epc","eoc","tpc","f","r","l","d","b","m","e","s","u_face","f_face","FBpairPosBackFS","FBpairPosFrontFS","color_map","rand_int","Math","floor","random","rand_incl","rand_choice","arr","length","cartesianProduct","_len","arguments","allEntries","Array","_key","reduce","results","entries","map","result","entry","concat","subResults","getParity","perm","visited","fill","follow","i","cnt","res","x","arrayEqual","arr1","arr2","OrbitControls","object","domElement","console","warn","document","error","this","enabled","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","listenToKeyEvents","addEventListener","onKeyDown","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","update","state","STATE","NONE","offset","quat","Quaternion","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","min","max","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onPointerDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","ownerDocument","onPointerMove","onPointerUp","startEvent","endEvent","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","y","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","subVectors","handleTouchMovePan","handleTouchMoveDolly","pointerType","mouseAction","preventDefault","focus","window","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","onMouseUp","stopPropagation","handleMouseWheel","needsUpdate","keyCode","handleKeyDown","handleTouchStartDollyPan","DOLLY_ROTATE","handleTouchStartDollyRotate","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","prototype","Object","create","EventDispatcher","constructor","MapControls","call","THREE","TAU","axesInfo","CameraState","roundedFace","rounded","cornerRadius","geo","cornerVertices","cornerCenter","squareCorner","degree","push","cos","sin","vertices","applyAxisAngle","faces","i1","setFromPoints","redraw_cube","cube","config","width","height","colorScheme","mode","theme","enableControl","hintDistance","bgColor","facesToReveal","scene","camera","renderer","antialias","setSize","setClearColor","setPixelRatio","devicePixelRatio","controls","angleScale","cameraState","HOME","cameraPositionRaw","cameraUp","cstate","cameraPosUFR","cameraPosUFL","cameraPosDFL","cameraPosDFR","cameraPosUBR","cameraPosUBL","upVecLookingDownUB","upVecLookingDownUBL","upVecDefault","PEEK_DFL","PEEK_DFR","PEEK_UFL","PEEK_UBL","getCameraPosFromState","cameraPosition","stickers_tmpl","stickerwrap_tmpl","obscured_stickers_tmpl","greyMaterial","aspect","geos","geo_border","materials_border","color","side","mesh","setRotationFromEuler","sticker_scale","corner_radius","hint_scale","fill_scale","widthSetting","getFillScale","obscureStickerWidth","rounded_patterns","drawCube","materials","_","mat","alphaTest","pattern","flat","colorIndex","group","fillGeo","fillMesh","borderGeo","borderMesh","hint_mesh","chroma","hex","obscured_hint_mesh","material","cubie","rot","makeRotationFromEuler","rot1","setRotationFromMatrix","multiply","z","idx","isLRColor","isCorner","shouldObscure","obscureNonLR","shouldMaskCorner","obscureCornerMask","effectiveColorIndex","sticker","stickerwrap","eps","indexOf","stickerhint","cubeG","render","frameID","animate","requestAnimationFrame","updateCubeAndColor","remove","clear","getRenderer","cleanupFunc","forEach","g","cancelAnimationFrame","renderControls","config_cache","painter","func","_painter","_painter2","_painter3","CubeSim","props","mount","React","useRef","setCameraState","cubePainter","useMediaQuery","useTheme","breakpoints","dom","downHandler","suppressLogging","key","PEEK_UBR","upHandler","current","appendChild","removeChild","_jsx","ref","style","zIndex","CubieCube","deserialize","obj","JSON","parse","serialize","cp","co","ep","eo","tp","stringify","Id","value","_apply_partial","o","p","oc","pc","mod","o_new","p_new","src","dst","_apply_partial_perm","apply_one","move","static","join","ori","Function","generate_apply_partial_func","generate_apply_partial_func_perm","apply","isArray","MoveSeq","moves","fs","last_face","first_face","_to_facelet_mapping","facelet_mapping","pos","piece","j","_rotate_coord","_from_facelet_mapping","fm","custom_corners_coord","custom_edges_coord","custom_centers_coord","match_pos_piece","coord","parity","expected","Map","toString","has","_backward_rotate_coord","get","coord_pair","newOri","newpos","newPerm","to_cstimer_cube","is_solveable","perm_correct","ori_correct","changeBasis","transformed_mapping","mapping","face_mapping","fromEntries","_ref","face_pos","face_target","_face_mapping$f","_face_mapping$f2","Move","arg","from_moves","from_cube","get_change","acc_p","acc_o","inv","slice","all","generate_base_moves","make_rot_set","us","rs","ls","ds","bs","ms","es","ss","rws","lws","uws","fws","xs","ys","zs","moves_dict","toQuarter","nm","k","quarterMap","move1","move2","getCnt","getStr","remove_setup","rotset","Set","shift","parse_line","str","tokens","token","comment_idx","search","ch","ord","charCodeAt","split","collapse","newMoves","nextMove","pop","combined","_combine","reverse","n","auf_moves","auf_move","useMetric","FaceletCube","mult_move","face","face_new","work","typ","mod_for_typ","p1","p2","p_curr","o_curr","typ_curr","color_of_c","o1","o2","color_of_e","color_of_t","color_of_sticker","Error","d_face","l_face","r_face","b_face","from_cubie","mask","facelet","from_cubie_partial_masked","_ref2","X","from_cubie_partial","to_unfolded_cube_str","faceletCube","face_count","str_face_map","color_cube","face_char","hasOwnProperty","count","as_actrm","fcube","uu_only","nmcll_faces","u_or_nmcll_faces","stickers","includes","fidx","as_kata","log","shape_maps","found","match_count","alert","lse_mask","CubeUtil","ext","a","c","find_pairs","edge_stickers","filter","corner_stickers","ep_stickers","cp_stickers","epcp_pairs","efs","cfs","match","get_color","connected_pairs","u_premove","m2_premove","oris","get_random_with_mask","_ref4","cp_rand","ep_rand","par","random_ori","ori_mask","sum","random_perm","perm_mask","undecided","tmp","rand_shuffle","is_cmll_solved","is_mask_solved2","_ref3","premove","cube1","solved","is_solved","co_","eo_","tp_","every","get_random_lse","is_cube_solved","id","rebase_to_edge","cube_rebased","ColorScheme","save","localStorage","setItem","load","item","getItem","_setDefault","suppressLoad","super","colors","toUserInput","newScheme","setWithDefault","default_colors","getColorsForOri","valid_schemes_map","valid_schemes","Mask","fs_back_mask","fs_front_mask","fbdr_mask","fb_mask","f2b_mask","sb_mask","cmll_mask","ss_front_mask","ss_back_mask","ssdp_front_mask","ssdp_back_mask","ssdp_both_mask","empty_mask","dl_solved_mask","bl_solved_mask","solved_mask","zhouheng_mask","lse_4c_mask","useStyles","makeStyles","container","paddingTop","spacing","paddingBottom","backgroundColor","palette","background","default","paper","padding","display","overflow","flexDirection","canvasPaper","infoColumn","scrambleColumn","paddingLeft","textColumn","minHeight","fixedHeight","title","flexGrow","select","text","primary","selectLabel","secondary","LevelSlider","styled","Slider","fontSize","SliderView","slider","classes","label","marks","suffix","extend_l","extend_r","_jsxs","Box","children","FormLabel","component","className","paddingX","track","onChange","handleChange","newValue","onFocus","evt","blur","SliderSelect","sliderName","sliderOpt","dispatch","content","SingleSelect","sel","radioValue","names","flags","FormControl","RadioGroup","new_flags","setFlags","row","FormControlLabel","control","Radio","labelPlacement","MultiSelectContent","options","checked","manipChecked","setManipChecked","manipulator_row","manipulators","FormGroup","manip","enableIdx","Checkbox","fillValue","makeManipulator","Fragment","makeBox","MultiSelect","open","setOpen","handleClose","noDialog","Button","variant","borderWidth","onClick","handleClickOpen","SettingsIcon","marginLeft","marginRight","Dialog","disableEscapeKeyDown","onClose","DialogTitle","DialogContent","DialogActions","ColorSetter","setText","TextField","helperText","fullWidth","size","handleClick","ColorPanel","reason","Divider","CaseVisualizer","args","view","algorithm","alg","cubeOptions","SRVisualizer","innerHTML","defaultOptions","components","MuiSlider","styleOverrides","root","createTheme","adaptV4Theme","main","red","A400","disabled","themeDark","overrides","MuiDivider","caseBoxOn","groupBox","makeDialog","Component","CaseSelectDialog","selector","groups","algs","visualizeMask","settings","algGroups","prefix","splitAlgIntoGroups","handleSelectGroup","groupname","newFlags","handleSelectAll","gt_sm","marginBottom","ButtonGroup","startIcon","CheckCircleIcon","CancelIcon","Typography","gutterBottom","toUpperCase","substr","alignItems","flexWrap","border","borderColor","caseIdx","transition","maxWidth","createAlg","kind","setup","empty_alg","cmll_algs_raw","nmcll_to_cmll_mapping","cmll_algs_raw_lookup","nmcll_algs","group_name","cases","cmll_name","nmcll_display_parity","cmll_algs","trigger_algs","u_auf_algs","ori_algs","lookup_algset","alg_generator_from_group","algSet","lookup","getActiveNames","next","alg_generator_from_cases_exact","activeNames","activeNamesSet","CubeSim2D","canvasRef","canvas","ratio","ctx","clearRect","uSize","uStickerSize","uStrokeWidth","sideStrokeWidth","lineWidth","resetTransform","translate","sStickerHeight","sStickerOuterShift","sStickerInnerShift","drawSideSticker","rotate","beginPath","topLeftX","topRightX","topY","bottomLeftX","bottomRightX","moveTo","lineTo","closePath","fillStyle","stroke","restore","drawUSticker","fillRect","strokeStyle","strokeRect","draw2D","getContext","CubeSimFlat3D","showL","uHeight","uWidth","UFMargin","URMargin","UFWidthShift","drawFlat3D","fontWeight","borderBottom","prompt","cmll_name_to_alg","nmcll_display_algs","NMCLLSelect","CmllTrainerView","clsx","_getMask","cmllCubeMaskSelector","getActiveName","cmll2D3DActiveName","cmll2D3DSelector","use3D","useFlat3D","kataMode","cmllKataSelector","flat3DShowLFace","cmllflat3DFaceSelector","_3DShowLFace","cmll3DFaceSelector","hyperori","hyperOriSelector","panel","setReveal","reveal","keyMapping","handle","case","desc","moves_c","colorSchemeColors","Grid","Paper","margin","elevation","lineHeight","whiteSpace","sm","md","handleNext","setupEdit","down","ScrambleInputView","editing","setEditing","setValue","scrambles","textField","onKeyPress","toggleEdit","_Fragment","EditIcon","marginTop","onKeyUp","inputRef","multiline","maxRows","rows","InputProps","autoFocus","handleInvert","inverted","handleSubmit","trim","CustomTooltip","Tooltip","popper","tooltipClasses","tooltip","borderRadius","condGap","fgap","flexShrink","flexBasis","minWidth","sourceIcon","sourceIconWrap","fab","configPanel","columnGap","rowGap","ConfigPanelGroup","DRManip","obscureNonLRSelector","select1","select2","select3","select4","select5","LPEdgeManip","pos1","pos3","BlockTrainerView","fsSelector","startsWith","fbssSsSelector","ssSelector","dpair","ssPairOnlySelector","getMask","spaceButtonText","showMoveCountHint","moveCountHint","algText","minMove","describe_hide","get_algs","describe_reveal","setFav","favSelected","canvas_wh","ADD_STR","levelSelectionSuccess","levelSuccess","scramblePanel","scrambleInput","handleFav","case_","solver","action","FavoriteIcon","alignSelf","justifyContent","showCube","obscureStickerWidthSelector","obscureCornerMaskSelector","handleSpace","sx","IconButton","ErrorOutlineIcon","gap","fontFamily","textAlign","gridList","VisualCube","stage","sch","template","alt","PanoramaTable","ImageList","ImageListItem","cols","PanoramaView","PrunerPiece","globalThis","$RefreshReg$","$RefreshSig$","S","I","htm_rwm","rrwmu","rrwmu_m_first","rrwmu_f","rrwmu_b","htm_rwm_uw","htm_rwm_fws","xyz","fbdrPrunerConfigGen","max_depth","encode","c1","c2","enc_c","e1","e2","e3","e4","solved_states","moveset","fbdrPrunerConfig","fbAtBLPrunerConfig","esize","csize","enc_e","t1","fbAtBLPrunerConfigGen","fbAtDLPrunerConfig","fbAtDLPrunerConfigGen","fbPrunerConfig","sbPrunerConfig","lpSbSbPrunerConfigGen","lp_front","lpSbDiagPrunerConfigGen","fbssPrunerConfigs","fbssPrunerConfigsManual","is_front","c3","lsePrunerConfig","edge_encode","enc","edge_enc","eodmPrunerConfig","edge_idx","centerPrunerConfig","solve","min2phaseSolve","toMin2Phase","Solver","MAX_STATE_COUNT","accum","min_depth","SState","pruners","state_count","prune_count","solve_depth","min_depth_","max_depth_","accum_","nextMoves","depth","solution","STOP","CONTINUE","capacity","flag","sol","try_push","query","availableMoves","seen_encodings","pruneSeenEncodings","BigInt","new_cube","_seen_encodings","st","expand","getAvailableMove","base","generateNextMoveTable","depth_l","depth_r","getPruners","solverFactory","prunerConfig","pruner","CachedPruner","init","solverFactory2","prunerConfigs","SsSolver","ssPrunerConfig","SsDpSolver","v0","v1","ssDpPrunerConfig","FbssSolver","LpsbSolver","FsSolver","v2","fsPrunerConfig","FsPseudoSolver","fsPseudoPrunerConfig","FELineP1Solver","fELineP1PrunerConfig","FsDrSolver","v3","fsDrPrunerConfig","EOLRSolver","center_flag","barbie_mode","moves_ac","moves_mc","barb_moves","eolrPrunerConfig","all_solvers","cache","pcs","dist","moveset_str","initialized","level_states","Uint8Array","frontier","total_expanded","new_frontier","newState","rev_lookup_depth","equal","cube2","Pruner","CachedSolver","min2phase_init","assert","transformed_cube","min2phase_solve","table","FavListView","favList","dialogID","setDialogID","dialogDelete","handleRemove","addDialogOpen","setAddDialogOpen","addString","setAddString","handleAddClose","dialogAdd","DialogContentText","handleAddSuccess","status","allSolvers","line","parseAddString","Table","TableHead","TableRow","TableCell","align","rowSpan","handleAdd","edge","AddIcon","TableBody","play","PlaylistPlayIcon","DeleteOutlineIcon","is_bright","page","icon","bar","TopBarView","DPGrip","toggleFav","toggleBright","handleInfoOpen","value_str","tab_modes","is_sm","boxShadow","Toolbar","wordWrap","Select","tab_idx","findIndex","MenuItem","mx","BookmarkIcon","Brightness6Icon","InfoIcon","Evaluator","SeqEvaluator","evaluate","moveCost","moveCost_gen","TwoGramEvaluator","moves_input","score","two_gram","curr_score","Number","parseFloat","meter","isNaN","two_gram_meter","DPEvaluator","HI","R_AWAY","R2_AWAY","Rp_AWAY","DEAD_END","evaluate_with_plan","cost","len","DP","DP_path","regripCost","moveTransition","prev_grip","shifted_grip","cur_scheme","cur_grip","optimal_cost","optimal_ending_grip","grip","current_grip","optimal_plan","previous_grip","previous_shifted_grip","grip_str","current_segment","g1","g2","moveTransition_gen","regripCost_gen","initialState","post_scramble","full_solution","orientation","pre_orientation","num_solution","fb_stage","show_mode","hide_solutions","paper2","title1","configItem","paddingRight","stageText","textTransform","formControl","menu","textOverflow","resetState","postScramble","ScrambleView","setState","isSmallScreen","inputProps","handleGen","handleBegin","ConfigView","menuProps","PaperProps","selectSx","fb_ori_str","display_mode_str","InputLabel","labelId","MenuProps","FormHelperText","parseInt","memoize","fn","String","get_shortened_rotation","rotation","rotation_inv","colorMap","ColorPair","get_orientation_fb_colors","dl_d","dl_l","color_lookup","StageSolutionView","fb_tag","tags","getTags","Boolean","isShortest","shortestLength","shortened_rotation","t","Chip","StageSolutionListView","num_to_display","isRevealed","setIsRevealed","shortestSolution","shortest","shortest_length","shortest_solutions","tag_full_name","shortest_tag_names","tag","fb_name","acc","curr","shortest_tag_names_str","fb_names","colorPairs","color1","color2","mb","cursor","mt","AnalyzerView","appState","cubieCube","analyzerData","solutions_to_display","num_solutions_to_display","sort","gt_md","TabPanel","index","other","role","hidden","_getInitialHashLocation","default_idx","location","hash","Intro","Markdown","AppView","useCallback","handleInfoClose","showFav","dividers","theme_flag","paddingY","Container","elements","el","version","Selector","annotation","ans","initialFavList","cmll_alg_names","ollcp_alg_names","EOLRMode","initialLevels","fbdrLevelSelector","fbssLevelSelector","fsLevelSelector","fbLevelSelector","ssLevelSelector","initialConfig","arr_ori_flag","evaluator","cmllSelector","nmcllSelector","cmllCaseSelector","cmllAufSelector","cmllBatchModeSelector","triggerSelector","ollcpCaseSelector","orientationSelector","fbBasisSelector","fbdrSelector","fbdrScrambleSelector","fbOnlySelector","fbPairSolvedSelector","fbdrPosSelector1","fbdrPosSelector2","fbdrPosSelector3","ssEOSelector","ssPosSelector","solutionNumSelector","fbPieceSolvedSelector","fbssLpSelector","lseMCSelector","lseBarSelector","lseStageSelector","lseEOSelector","lseEOLRMCSelector","lseBarbieSelector","lseEOLRScrambleSelector","favListManager","getFavList","setFavList","item1","serializeConfig","deserializeConfig","configManager","versionKey","getConfig","vers","item2","setConfig","partial","newConfig","assign","resetConfig","AbstractStateM","onReplay","StateFactory","BlockTrainerStateM","getLevelSelector","checkLevelConstraint","levelConstraintOkayWithUpperBound","getRandom","levelMaxAttempt","solvers","ssolver","getRandomAnyLevel","premoves","bound","pm","level","solverR","debug","failed","solverL","scrambleMargin","scrambleCount","algDescWithMoveCount","expansionFactor","orientations","_solve_with_solvers","solverNames","totalSolutionCap","selectedSolutionCap","solverName","pre","_solve","algDescs","updateSolutionOnly","scrambleSolver","_rand_choice","solutionLength","algDesc","_updateCase","inputScramble","_updateCap","onControl","onMove","movestr","onConfig","conf","FbdrStateM","edgePositionMap","allowed_pedge","allowed_dr","_get_pair_solved_front","_get_pair_solved_back","_edge_piece_in_pattern","dr_ep","dr_eo","find","_get_random_fs_back","_get_random_fs_front","fbOnly","pairSolved","active","_ref5","FbStateM","_find_center_connected_edges","is_l_only","centers","_get_random","basis","hard_str","g_hard_str","pairs","cc_edges","FsStateM","FsDrStateM","FbssStateM","lp_option","ss_option","lp_is_front","randomMask","SsStateM","_get_random_fb","allowed_dr_eo_ep","ep_","drOPPositionMap","allowed_dr_eo_ep_patterns","LSEStateM","bars","lse_premove","lseEODef","lseEODefLookup","def","EOLRStateM","_getEOType","eo_arr","targetEO","eolrMCMode","compare","useBarbie","eodmMode","useFullScramble","acSolver","mcSolver","acLength","mcLength","CmllStateM","_get2PhaseSolution","m2_away","_generateSingleCmllCase","batch_mode","isHyperOri","isHyperOriFB","lse_cube","generator","alg_generator_from_cases_contain","some","alg_generator_from_cases","trig_generator","u_auf_generator","trigger_alg","cmll_alg","u_auf_alg","post_auf_alg","alg_str","_generateCase","ori_generator","history","_generateBatch","batchSize","caseDesc","totalAlg","finalCaseDesc","batchMode","getBatchStateAtIndex","nextIndex","_state$batch","_state$batch2","batch","CmllSolvingStateM","CmllSolvedStateM","defaultKeyMapping","lseKeyMapping","DefaultKeyMapping","altKey","LSEKeyMapping","getInitialState","initialStateName","prev","reducer","code","stateM","reduceByKey","reduceByConfig","ReactGA","pageview","rem","reduceByFavlist","body","App","useReducer","appTheme","StyledEngineProvider","injectFirst","ThemeProvider","CssBaseline","hostname","initialize","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","createArray","bitCount","get8Parity","get12Parity","binarySearch","mid","val","fact","perm3","ud2std","std2ud","Cnk","length1","length2","createArrays","move2str","urfMove","ckmv","ckmv2","getFlip","getFlipSym","FlipR2S","EdgeConjugate","SymInv","temps","FlipS2R","setFlip","bitOdd","getTwist","getTwistSym","TwistR2S","CornConjugate","TwistS2R","setTwist","twst","getUDSlice","setUDSlice","getMPerm","setMPerm","getMid3","idxA","idxB","setMid3","getURtoUL","getDRtoDL","setEdgePerm","getEdgePerm","getCPermSym","EPermR2S","get8Perm","e2c","CPermS2R","getEPermSym","EPermS2R","URFConjugate","CornMult","urf2","urf1","EdgeMult","invCubieCube","corn","cperm","twist","eperm","flip","set8Perm","cctemp","prod","oriA","oriB","ed","CubeSym","moveCube","SymMult","SymMove","Sym8Mult","Sym8Move","Sym8MultInv","SymMoveUD","MtoEPerm","merge","UDSliceMove","TwistMove","FlipMove","UDSliceConj","UDSliceTwistPrun","UDSliceFlipPrun","TwistFlipPrun","Mid3Move","Mid32MPerm","CParity","CPermMove","EPermMove","MPermMove","MPermConj","MCPermPrun","MEPermPrun","urfidx","csym","mid3","tsym","fsym","corn0","csym0","mid30","e10","e20","prun","maxlength2","valid1","valid2","phase1","maxl","lm","cornx","ex","get4Parity","esym","phase2","sb","urf","init2","slicex","twistx","tsymx","flipx","fsymx","midx","edgex","esymx","csymx","mc","temp","f2","u4","lr2","occ","CubieInit","SymState","SymStateF","check","done","sym","symF","fsymxx","idxx","symx","CoordInit","cc","Solve","randomCube"],"mappings":"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","file":"static/js/main.916738ed.chunk.js","sourcesContent":["import { wrap, releaseProxy } from \"comlink\";\nimport { useEffect, useState, useMemo } from \"react\";\nimport { AnalyzerState, SolutionDesc } from \"./Analyzer\";\n\nexport function useAnalyzer(analyzerState: AnalyzerState) {\n    const [data, setData] = useState({\n        isRunning: false,\n        solutions: undefined as SolutionDesc[] | undefined\n    })\n    const { workerApi } = useWorker()\n\n    useEffect(() => {\n        setData({ isRunning: true, solutions: undefined})\n        if (analyzerState.scramble !== \"\") {\n            workerApi.analyze(analyzerState).then(solutions => setData({ isRunning: false, solutions})); \n        }\n    }, [workerApi, setData, analyzerState])\n\n    return data\n}\n\n// write a wrapper so that cleanup is taken care of for us\nfunction useWorker() {\n    // memoise a worker so it can be reused; create one worker up front\n    // and then reuse it subsequently; no creating new workers each time\n    const workerApiAndCleanup = useMemo(() => makeWorkerApiAndCleanup(), []);\n  \n    useEffect(() => {\n      const { cleanup } = workerApiAndCleanup;\n  \n      // cleanup our worker when we're done with it\n      return () => {\n        cleanup();\n      };\n    }, [workerApiAndCleanup]);\n  \n    return workerApiAndCleanup;\n}\n\nfunction makeWorkerApiAndCleanup() {\n    // Here we create our worker and wrap it with comlink so we can interact with it\n    const worker = new Worker(\"../worker/index\", {\n      name: \"analyzer-worker\",\n      type: \"module\"\n    });\n    const workerApi = wrap<import(\"../worker/index\").AnalyzerWorker>(worker);\n  \n    // A cleanup function that releases the comlink proxy and terminates the worker\n    const cleanup = () => {\n      workerApi[releaseProxy]();\n      worker.terminate();\n    };\n  \n    const workerApiAndCleanup = { workerApi, cleanup };\n  \n    return workerApiAndCleanup;\n}\n","module.exports = __webpack_public_path__ + \"static/js/analyzer-worker.ca439f15.chunk.worker.js\"","export enum Face {\n    U = 0, D, F, B, L, R, X\n}\n\nconst U = Face.U;\nconst D = Face.D;\nconst F = Face.F;\nconst B = Face.B;\nconst L = Face.L;\nconst R = Face.R;\nexport {U, D, F, B, L, R};\n\nexport enum Typ {\n    C = 0, E, T\n}\nconst C = Typ.C;\nconst E = Typ.E;\nconst T = Typ.T;\nexport {C, E, T}\n\nexport type CubieT = {\n    co: Array<number>,\n    cp: Array<number>,\n    eo: Array<number>,\n    ep: Array<number>,\n    tp: Array<number>\n}\n\nexport type FaceletCube = Array<string>\n\nexport type CornerCoord = [Face, Face, Face]\nlet corners_coord : Array<CornerCoord> = [\n    [U,F,L], [U,L,B], [U,B,R], [U,R,F],\n    [D,L,F], [D,B,L], [D,R,B], [D,F,R]\n]\n\nexport type EdgeCoord = [Face, Face]\nlet edges_coord : Array<EdgeCoord> = [\n    [U,F], [U,L], [U,B], [U,R],\n    [D,F], [D,L], [D,B], [D,R],\n    [F,L], [B,L], [B,R], [F,R],\n]\nexport type CenterCoord = [Face]\nlet centers_coord : Array<CenterCoord> = [\n    [U], [D], [F], [B], [L], [R]\n]\n\nlet cstimer_corners_coord : Array<CornerCoord> = [\n    [U,R,F],[U,F,L], [U,L,B], [U,B,R],\n    [D,F,R],[D,L,F], [D,B,L], [D,R,B]\n]\n\nlet cstimer_edges_coord : Array<EdgeCoord> = [\n    [U, R], [U,F], [U,L], [U,B],\n    [D, R], [D,F], [D,L], [D,B],\n    [F, R], [F,L], [B,L], [B,R]\n]\n\nexport {corners_coord, edges_coord, centers_coord, cstimer_corners_coord, cstimer_edges_coord }\n\nexport type FaceletMapping = [Face[], Face[]][]\n\nexport type PermChg = [number, number]\nexport type OriChg = number\n\nexport type MoveT = {\n    cpc: Array<PermChg>,\n    coc: Array<OriChg>,\n    epc: Array<PermChg>,\n    eoc: Array<OriChg>,\n    tpc: Array<PermChg>,\n    name: string\n}\n\nlet u : MoveT = {\n    cpc: [[0, 1], [1, 2], [2, 3], [3, 0]],\n    coc: [0, 0, 0, 0],\n    epc: [[0, 1], [1, 2], [2, 3], [3, 0]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"U\"\n}\n\nlet f : MoveT = {\n    cpc: [[0, 3], [3, 7], [7, 4], [4, 0]],\n    coc: [1, 2, 1, 2],\n    epc: [[0, 11], [11, 4], [4, 8], [8, 0]],\n    eoc: [1, 1, 1, 1],\n    tpc: [],\n    name: \"F\",\n}\n\nlet r : MoveT = {\n    cpc: [[3, 2], [2, 6], [6, 7], [7, 3]],\n    coc: [1, 2, 1, 2],\n    epc: [[3, 10], [10, 7], [7, 11], [11, 3]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"R\",\n}\n\nlet l : MoveT = {\n    cpc: [[0, 4], [4, 5], [5, 1], [1, 0]],\n    coc: [2, 1, 2, 1],\n    epc: [[1, 8], [8, 5], [5, 9], [9, 1]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"L\",\n}\n\nlet d : MoveT = {\n    cpc: [[4, 7], [7, 6], [6, 5], [5, 4]],\n    coc: [0, 0, 0, 0],\n    epc: [[4, 7], [7, 6], [6, 5], [5, 4]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"D\",\n}\n\nlet b : MoveT = {\n    cpc: [[1, 5], [5, 6], [6, 2], [2, 1]],\n    coc: [2, 1, 2, 1],\n    epc: [[2, 9], [9, 6], [6, 10], [10, 2]],\n    eoc: [1, 1, 1, 1],\n    tpc: [],\n    name: \"B\",\n}\n\nlet m : MoveT = {\n    cpc: [],\n    coc: [],\n    epc: [[0, 4], [4, 6], [6, 2], [2, 0]],\n    eoc: [1, 1, 1, 1],\n    tpc: [[0, 2], [2, 1], [1, 3], [3, 0]],\n    name: \"M\",\n}\n\nlet e : MoveT = {\n    cpc: [],\n    coc: [],\n    epc: [[8, 9], [9, 10], [10, 11], [11, 8]],\n    eoc: [1, 1, 1, 1],\n    tpc: [[2, 4], [4, 3], [3, 5], [5, 2]],\n    name: \"E\",\n}\n\nlet s : MoveT = {\n    cpc: [],\n    coc: [],\n    epc: [[1, 3], [3, 7], [7, 5], [5, 1]],\n    eoc: [1, 1, 1, 1],\n    tpc: [[0, 5], [5, 1], [1, 4], [4, 0] ],\n    name: \"S\",\n}\n\nexport {u, d, f, b, l, r, m, e, s}\n\nexport type StickerT = [number, number, Typ]\nexport type StickerExtT = [number, number, Typ, Face]\nexport type FaceletT = Array<StickerT>\n\nlet u_face : FaceletT = [\n    [1, 0, C], [2, 0, E], [2, 0, C],\n    [1, 0, E], [0, 0, T], [3, 0, E],\n    [0, 0, C], [0, 0, E], [3, 0, C]\n  ]\n\nlet f_face : FaceletT = [\n    [0, 1, C], [0, 1, E], [3, 2, C],\n    [8, 0, E], [2, 0, T], [11,0, E],\n    [4, 2, C], [4, 1, E], [7, 1, C]\n]\n\nexport {u_face, f_face}\n\n// for solved back-FS, ignore CP=5 and C=(1,0)\n// for solved front-FS, ignore CP=4 and C=(0,0)\nconst FBpairPosBackFS : [number, number, number, number][] = [\n    [0, 0, 8, 1], [0, 1, 1, 0], [ 0, 2 , 0, 1],\n    // [1, 0, 9, 1],\n    [1, 1, 2, 0], [1, 2, 1, 1],\n    [2, 0, 10, 1], [2, 1, 3, 0], [2, 2, 2, 1],\n    [3, 0, 11, 0], [3, 1, 0, 0], [3, 2, 3, 1],\n    //[4, 0, 8, 0], \n    [4, 1, 4, 0],\n    // [5, 0, 9, 0], [5, 2, 6, 0],\n    [6, 0, 10, 0], [6, 1, 6, 0], [6, 2, 7, 1],\n    [7, 0, 11, 1], [7, 1, 7, 0], [7, 2, 4, 1]\n]\n// Reason for failing: sampling the solved state would crash our solver, which refuses to expand solution on solved state\nconst FBpairPosFrontFS : [number, number, number, number][] = [\n    //[0, 0, 8, 0], \n    [0, 1, 1, 1], [0, 2, 0, 0],\n    [1, 0, 9, 1], [1, 1, 2, 1], [1, 2, 1, 0],\n    [2, 0, 10, 0], [2, 1, 3, 1], [2, 2, 2, 0],\n    [3, 0, 11, 1], [3, 1, 0, 1], [3, 2, 3, 0],\n    //[4, 0, 8, 1], [4, 1, 4, 1],\n    //[5, 0, 9, 0], \n    [5, 2, 6, 0],\n    [6, 0, 10, 1], [6, 1, 6, 1], [6, 2, 7, 0],\n    [7, 0, 11, 0], [7, 1, 7, 1], [7, 2, 4, 0]\n]\n\nexport {FBpairPosBackFS, FBpairPosFrontFS}\n\nexport type FaceletCubeT = Array<Array<Face>>\n\n// A Cube can be in two representations: cubieCube or faceletCube\n\nlet color_map =`\\\n   UUU\n   UUU\n   UUU\nLLLFFFRRRBBB\nLLLFFFRRRBBB\nLLLFFFRRRBBB\n   DDD\n   DDD\n   DDD`\n\nexport {color_map}\n","let rand_int = (r: number) => {\n    return Math.floor(Math.random() * r)\n}\n\nlet rand_incl = (l: number, r: number) => {\n    return rand_int(r - l + 1) + l;\n}\nlet rand_choice = function<T>(arr: T[]) {\n    return arr[rand_int(arr.length)]\n}\n\nlet rand_shuffle = function<T>(arr: T[]) {\n    for (let i = 0, l = arr.length; i < l - 1; i++) {\n        let j = rand_incl(i, l - 1)\n        let tmp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = tmp\n    }\n    return arr\n}\n\nfunction cartesianProduct<T>(...allEntries: T[][]): T[][] {\n    return allEntries.reduce<T[][]>(\n      (results, entries) =>\n        results\n          .map(result => entries.map(entry => result.concat([entry])))\n          .reduce((subResults, result) => subResults.concat(result), []),\n      [[]]\n    )\n  }\n\nlet getParity = (perm: number[]) => {\n    let visited = Array(perm.length).fill(false)\n    let follow = (i: number, cnt: number) : number => {\n        if (visited[i]) {\n            return 0\n        } else {\n            visited[i] = 1\n            if (visited[perm[i]]) {\n                return cnt;\n            } else\n                return follow(perm[i], cnt + 1)\n        }\n    }\n    let res = 0\n    for (let x of perm) {\n        res += follow(x, 0)\n    }\n    return res\n}\n\nlet arrayEqual = function<T>(arr1: T[], arr2: T[]) {\n    if (arr1.length !== arr2.length) return false;\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) return false;\n    }\n    return true;\n}\n\nlet encodeArr = function(base: number, rarr: number[]) {\n    let int = 0\n    for (let i = rarr.length - 1; i >= 0; i--)\n        int = rarr[i] + int * base\n    return int\n}\n\nexport {rand_int, rand_choice, rand_shuffle, getParity, arrayEqual, encodeArr, cartesianProduct}","import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from 'three';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nvar OrbitControls = function ( object, domElement ) {\n\n\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\tthis.object = object;\n\tthis.domElement = domElement;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.05;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.panSpeed = 1.0;\n\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t// Touch fingers\n\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t// the target DOM element for key events\n\tthis._domElementKeyEvents = null;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\tthis._domElementKeyEvents = domElement;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function () {\n\n\t\tvar offset = new Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().invert();\n\n\t\tvar lastPosition = new Vector3();\n\t\tvar lastQuaternion = new Quaternion();\n\n\t\tvar twoPI = 2 * Math.PI;\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t} else {\n\n\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t}\n\n\t\t\t// restrict theta to be between desired limits\n\n\t\t\tvar min = scope.minAzimuthAngle;\n\t\t\tvar max = scope.maxAzimuthAngle;\n\n\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t}\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove );\n\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove );\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\n\t\t}\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = {\n\t\tNONE: - 1,\n\t\tROTATE: 0,\n\t\tDOLLY: 1,\n\t\tPAN: 2,\n\t\tTOUCH_ROTATE: 3,\n\t\tTOUCH_PAN: 4,\n\t\tTOUCH_DOLLY_PAN: 5,\n\t\tTOUCH_DOLLY_ROTATE: 6\n\t};\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new Spherical();\n\tvar sphericalDelta = new Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new Vector2();\n\tvar rotateEnd = new Vector2();\n\tvar rotateDelta = new Vector2();\n\n\tvar panStart = new Vector2();\n\tvar panEnd = new Vector2();\n\tvar panDelta = new Vector2();\n\n\tvar dollyStart = new Vector2();\n\tvar dollyEnd = new Vector2();\n\tvar dollyDelta = new Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t}\n\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement;\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( /*event*/ ) {\n\n\t\t// no-op\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\tvar needsUpdate = false;\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.update();\n\n\t\t}\n\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\trotateStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartPan( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartDolly( event ) {\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyStart.set( 0, distance );\n\n\t}\n\n\tfunction handleTouchStartDollyPan( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\tif ( scope.enablePan ) handleTouchStartPan( event );\n\n\t}\n\n\tfunction handleTouchStartDollyRotate( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\tif ( scope.enableRotate ) handleTouchStartRotate( event );\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\trotateEnd.set( x, y );\n\n\t\t}\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t}\n\n\tfunction handleTouchMovePan( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanEnd.set( x, y );\n\n\t\t}\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t}\n\n\tfunction handleTouchMoveDolly( event ) {\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyEnd.set( 0, distance );\n\n\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\tdollyOut( dollyDelta.y );\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t}\n\n\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t}\n\n\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t}\n\n\tfunction handleTouchEnd( /*event*/ ) {\n\n\t\t// no-op\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onPointerDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tswitch ( event.pointerType ) {\n\n\t\t\tcase 'mouse':\n\t\t\tcase 'pen':\n\t\t\t\tonMouseDown( event );\n\t\t\t\tbreak;\n\n\t\t\t// TODO touch\n\n\t\t}\n\n\t}\n\n\tfunction onPointerMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tswitch ( event.pointerType ) {\n\n\t\t\tcase 'mouse':\n\t\t\tcase 'pen':\n\t\t\t\tonMouseMove( event );\n\t\t\t\tbreak;\n\n\t\t\t// TODO touch\n\n\t\t}\n\n\t}\n\n\tfunction onPointerUp( event ) {\n\n\t\tswitch ( event.pointerType ) {\n\n\t\t\tcase 'mouse':\n\t\t\tcase 'pen':\n\t\t\t\tonMouseUp( event );\n\t\t\t\tbreak;\n\n\t\t\t// TODO touch\n\n\t\t}\n\n\t}\n\n\tfunction onMouseDown( event ) {\n\n\t\t// Prevent the browser from scrolling.\n\t\tevent.preventDefault();\n\n\t\t// Manually set the focus since calling preventDefault above\n\t\t// prevents the browser from setting it automatically.\n\n\t\tscope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n\t\tvar mouseAction;\n\n\t\tswitch ( event.button ) {\n\n\t\t\tcase 0:\n\n\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\n\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\n\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tmouseAction = - 1;\n\n\t\t}\n\n\t\tswitch ( mouseAction ) {\n\n\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase MOUSE.PAN:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove );\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp );\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tscope.dispatchEvent( startEvent );\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault(); // prevent scrolling\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\n\n\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\n\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleTouchStartDollyRotate( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault(); // prevent scrolling\n\t\tevent.stopPropagation();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove );\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nOrbitControls.prototype = Object.create( EventDispatcher.prototype );\nOrbitControls.prototype.constructor = OrbitControls;\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nvar MapControls = function ( object, domElement ) {\n\n\tOrbitControls.call( this, object, domElement );\n\n\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\tthis.touches.ONE = TOUCH.PAN;\n\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n};\n\nMapControls.prototype = Object.create( EventDispatcher.prototype );\nMapControls.prototype.constructor = MapControls;\n\nexport { OrbitControls, MapControls };\n","import React, { useEffect } from 'react'\n\nimport { FaceletCubeT, Face } from \"../lib/Defs\";\nimport * as THREE from 'three';\nimport { arrayEqual } from '../lib/Math';\nimport * as chroma from 'chroma-js';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useTheme } from '@mui/material/styles';\nimport { OrbitControls } from '../lib/three/OrbitControls';\n\ntype Config = {\n    cube: FaceletCubeT, width: number, height: number, colorScheme: Array<string>, facesToReveal: Face[],\n    theme: string,\n    hintDistance?: number,\n    enableControl? : boolean,\n    obscureNonLR? : boolean,\n    obscureStickerWidth?: string,\n    obscureCornerMask?: boolean\n}\nlet { Vector3 } = THREE\n\n/*\nHow to propagate control of keypress ..? maybe not here, in the app.\n\nLet's look at click analogy: if a user click on sub-component,\nthat message should be propagated upwards to the parent.\n\nThat is, \"keydown\" should transform to some kind of message, e.g. the resulting cube state\nto be passed to the App, which then decides whether to trigger state change or let the cube keep being solved\n\n*/\n\ntype AxesInfo = [THREE.Vector3, THREE.Euler]\nconst TAU = Math.PI * 2;\nconst axesInfo: [THREE.Vector3, THREE.Euler][] = [\n    // UDFBLR\n    [new THREE.Vector3(0, 1, 0), new THREE.Euler(-TAU / 4, 0, 0)],\n    [new THREE.Vector3(0, -1, 0), new THREE.Euler(TAU / 4, 0, 0)],\n    [new THREE.Vector3(0, 0, 1), new THREE.Euler(0, 0, 0)],\n    [new THREE.Vector3(0, 0, -1), new THREE.Euler(0, TAU / 2, 0)],\n    [new THREE.Vector3(-1, 0, 0), new THREE.Euler(0, -TAU / 4, 0)],\n    [new THREE.Vector3(1, 0, 0), new THREE.Euler(0, TAU / 4, 0)],\n];\n\n\nenum CameraState {\n    HOME,\n    PEEK_UFL,\n    PEEK_DFL,\n    PEEK_DFR,\n    PEEK_UBR,\n    PEEK_UBL\n}\ntype ConfigT = {width: number, height: number, colorScheme: Array<string>, mode?: string,\n    faces?: Face[], theme?: string, hintDistance?: number,     enableControl? : boolean,\n    cameraState?: CameraState, obscureNonLR?: boolean, obscureStickerWidth?: string, obscureCornerMask?: boolean\n}\n\nconst roundedFace = ((rounded?: number[], cornerRadius?: number, ) => {\n    cornerRadius = cornerRadius || 0.1\n    rounded = rounded || [1, 1, 1, 1]\n    let geo = new THREE.BufferGeometry()\n    let cornerVertices = []\n    let cornerCenter = new THREE.Vector3(1 - cornerRadius, 1 - cornerRadius, 0)\n    let squareCorner = new THREE.Vector3(1, 1, 0)\n    for (let i = 0; i <= 90; i += 10) {\n        let degree = (i * Math.PI) / 180\n        cornerVertices.push(\n            cornerCenter.clone().add(new THREE.Vector3(Math.cos(degree), Math.sin(degree), 0).multiplyScalar(cornerRadius))\n        )\n    }\n    let vertices = []\n    for (let i = 0; i < 4; i++) {\n        if (rounded[i]) {\n            vertices.push(...cornerVertices)\n        } else {\n            vertices.push(squareCorner.clone())\n        }\n        cornerVertices = cornerVertices.map(x => x.clone().applyAxisAngle(new Vector3(0, 0, 1), 0.5 * Math.PI))\n        squareCorner.applyAxisAngle(new Vector3(0, 0, 1), 0.5 * Math.PI)\n    }\n    //vertices.push(new Vector3(0, 0, 0))\n\n    //let vertices_float32 = new Float32Array( vertices.length * 3)\n    //let vertices_attr = new THREE.BufferAttribute(vertices_float32, 3).copyVector3sArray( vertices)\n    // console.log(vertices_attr)\n    let faces = []\n    for (let i = 0; i< vertices.length; i++) {\n        let i1 = (i + 1) % vertices.length;\n        faces.push(vertices[vertices.length - 1])\n        faces.push(vertices[i])\n        faces.push(vertices[i1])\n    }\n    geo.setFromPoints(faces)\n\n    return geo\n})\n\nconst getCameraPosFromState = function (cstate: CameraState) : [number[], THREE.Vector3]{\n    const cameraPosUFR = [2.5, 3.5, 3]\n    const cameraPosUFL = [-2, 3.5, 3]\n    const cameraPosDFL = [-2, -3.5, 3]\n    const cameraPosDFR = [2, -3.5, 3]\n    const cameraPosUBR = [2.5, 3.5, -3]\n    const cameraPosUBL = [-2, 3.5, -3]\n\n    const upVecLookingDownUB = new THREE.Vector3(0, 0, -1)\n    const upVecLookingDownUBL = new THREE.Vector3(0, 0.1, -1)\n    const upVecDefault = new THREE.Vector3(0, 1, 0)\n    switch (cstate) {\n        case CameraState.HOME: return [cameraPosUFR, upVecDefault]\n        case CameraState.PEEK_DFL: return [cameraPosDFL, upVecDefault]\n        case CameraState.PEEK_DFR: return [cameraPosDFR, upVecDefault]\n        case CameraState.PEEK_UFL: return [cameraPosUFL, upVecDefault]\n        case CameraState.PEEK_UBL: return [cameraPosUBL, upVecLookingDownUBL]\n        default: return [cameraPosUBR, upVecLookingDownUB]\n    }\n}\nconst redraw_cube = function (cube: FaceletCubeT, config: ConfigT ) {\n    let { width, height, colorScheme, mode, faces, theme, enableControl} = config\n    let hintDistance = config.hintDistance || 3\n    const bgColor = theme === \"bright\" ? \"#eeeeef\" : '#252525'\n\n    mode = mode || \"FRU\"\n    let facesToReveal = faces || [Face.L, Face.B, Face.D]\n    //facesToReveal = [Face.L]\n\n    const scene = new THREE.Scene()\n    const angle = 50\n    const camera = new THREE.PerspectiveCamera(angle, width / height, 0.1, 1000)\n\n    const mag = 1.0\n    const alpha = 0.5\n    const enableBorder = true\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true })\n    renderer.setSize(width, height, true);\n    //renderer.setViewport( 0, 0, width * window.devicePixelRatio, height * window.devicePixelRatio);\n    renderer.setClearColor(bgColor) // #70788a') //#5a606e') // '#373B43') // '#eeeeee')\n    renderer.setPixelRatio(window.devicePixelRatio)\n    let controls = new OrbitControls( camera, renderer.domElement );\n    controls.enabled = !!config.enableControl\n\n    const angleScale = Math.sin(70 / 180 * Math.PI)  /  Math.sin(angle / 180 * Math.PI)\n    const scale = (hintDistance > 5) ? .96 * angleScale : .9 * angleScale\n\n    const cameraState = config.cameraState || CameraState.HOME\n    const [cameraPositionRaw, cameraUp] = getCameraPosFromState(cameraState)\n    const cameraPosition = (mode === \"FRU\") ?\n        new THREE.Vector3(cameraPositionRaw[0] * scale,\n                          cameraPositionRaw[1] * scale,\n                          cameraPositionRaw[2] * scale) :\n        new THREE.Vector3(0 / 1.1, 3 / 1.1, 3 / 1.1)\n\n    //console.log(\"Setting camera up \", cameraUp, \" camera pos\", cameraPosition)\n    camera.up.copy(cameraUp)\n    camera.position.copy(cameraPosition)\n    camera.aspect = width / height;\n    camera.lookAt(new THREE.Vector3(0, 0, 0))\n\n    let stickers_tmpl: THREE.Mesh[], stickerwrap_tmpl: THREE.Mesh\n    let obscured_stickers_tmpl: THREE.Group[]\n    let greyMaterial: THREE.MeshBasicMaterial\n\n    const geos : THREE.BufferGeometry[] = []; // new THREE.PlaneGeometry(0.89 * mag * 2, 0.89 * mag * 2)\n    const geo_border = new THREE.PlaneGeometry(2.0, 2.0)//1.0 * mag * 2, 1.0 * mag * 2)\n\n    let materials_border = new THREE.MeshBasicMaterial({ color: 0x000000, side: THREE.FrontSide })\n    stickerwrap_tmpl = (() => {\n        let mesh = new THREE.Mesh(geo_border, materials_border)\n        mesh.setRotationFromEuler(axesInfo[0][1])\n        return mesh\n    })()\n\n    const sticker_scale = 0.88\n    const corner_radius = 0.4\n    const hint_scale = 0.95\n\n    // Get fill scale based on sticker width setting\n    const getFillScale = (widthSetting?: string) => {\n        switch (widthSetting) {\n            case \"Thin\": return 0.96\n            case \"Medium\": return 0.92\n            case \"Thick\": return 0.88\n            default: return 0.92 // Default to Medium\n        }\n    }\n    const fill_scale = getFillScale(config.obscureStickerWidth)\n    const rounded_patterns = [\n        [0, 0, 0, 1],\n        [0, 0, 1, 1],\n        [0, 0, 1, 0],\n        [1, 0, 0, 1],\n        [1, 1, 1, 1],\n        [0, 1, 1, 0],\n        [1, 0, 0, 0],\n        [1, 1, 0, 0],\n        [0, 1, 0, 0]\n    ];\n\n    function drawCube(faces: FaceletCubeT, colorScheme: Array<string>): THREE.Group {\n        //console.log(\"update color scheme \", colorScheme_)\n        let materials = Array(7).fill(0).map((_, i) => {\n            let mat = new THREE.MeshBasicMaterial({ color: colorScheme[i], side: THREE.DoubleSide });\n            mat.alphaTest = alpha;\n            return mat\n        })\n\n        stickers_tmpl = materials.map((mat) => {\n            return rounded_patterns.map(pattern => {\n                let geo = roundedFace(pattern, corner_radius)\n                geos.push(geo)\n                let mesh = new THREE.Mesh(geo, mat)\n                mesh.scale.set(sticker_scale, sticker_scale, sticker_scale)\n                mesh.setRotationFromEuler(axesInfo[0][1])\n                return mesh\n            })\n        }).flat()\n\n        // Create obscured stickers with grey fill and colored border\n        greyMaterial = new THREE.MeshBasicMaterial({ color: colorScheme[6], side: THREE.DoubleSide, alphaTest: alpha })\n\n        obscured_stickers_tmpl = materials.map((mat, colorIndex) => {\n            return rounded_patterns.map(pattern => {\n                // Create a group for the obscured sticker\n                const group = new THREE.Group()\n\n                // Grey fill (slightly smaller and behind)\n                let fillGeo = roundedFace(pattern, corner_radius)\n                geos.push(fillGeo)\n                let fillMesh = new THREE.Mesh(fillGeo, greyMaterial)\n                fillMesh.scale.set(sticker_scale * fill_scale, sticker_scale * fill_scale, sticker_scale * fill_scale)\n                fillMesh.setRotationFromEuler(axesInfo[0][1])\n                fillMesh.position.y = 0.01 // Small offset to prevent z-fighting\n                group.add(fillMesh)\n\n                // Colored border (original size)\n                let borderGeo = roundedFace(pattern, corner_radius)\n                geos.push(borderGeo)\n                let borderMesh = new THREE.Mesh(borderGeo, mat)\n                borderMesh.scale.set(sticker_scale, sticker_scale, sticker_scale)\n                borderMesh.setRotationFromEuler(axesInfo[0][1])\n                group.add(borderMesh)\n\n                return group\n            })\n        }).flat()\n\n\n\n        let hint_mesh = Array(7).fill(0).map((_, i) => {\n            let color = (theme === \"bright\")\n                ? chroma.mix(colorScheme[i], 'white', 0.18).hex()\n                : chroma.mix(colorScheme[i], 'black', 0.35).hex()\n\n            let mat = new THREE.MeshBasicMaterial({ color, side: THREE.DoubleSide });\n\n            let geo = roundedFace([1,1,1,1], corner_radius)\n            geos.push(geo)\n            let mesh = new THREE.Mesh(geo, mat)\n            mesh.scale.set(hint_scale, hint_scale, hint_scale)\n            mesh.setRotationFromEuler(axesInfo[0][1])\n            return mesh\n        })\n\n        // Create obscured hint stickers with grey fill and colored border\n        let obscured_hint_mesh = Array(7).fill(0).map((_, i) => {\n            // Create a group for the obscured hint sticker\n            const group = new THREE.Group()\n\n            // Grey fill (slightly smaller)\n            let fillGeo = roundedFace([1,1,1,1], corner_radius)\n            geos.push(fillGeo)\n            let fillMesh = new THREE.Mesh(fillGeo, hint_mesh[6].material)\n            fillMesh.scale.set(hint_scale * fill_scale, hint_scale * fill_scale, hint_scale * fill_scale)\n            fillMesh.setRotationFromEuler(axesInfo[0][1])\n            fillMesh.position.y = -0.01 // Small offset to prevent z-fighting\n            group.add(fillMesh)\n\n            // Colored border (original size)\n            let borderGeo = roundedFace([1,1,1,1], corner_radius)\n            geos.push(borderGeo)\n            let borderMesh = new THREE.Mesh(borderGeo, hint_mesh[i].material)\n            borderMesh.scale.set(hint_scale, hint_scale, hint_scale)\n            borderMesh.setRotationFromEuler(axesInfo[0][1])\n            group.add(borderMesh)\n\n            return group\n        })\n\n\n        const cube = new THREE.Group();\n        for (let i = 0; i < 6; i++) {\n            const cubie = new THREE.Group();\n            const rot = new THREE.Matrix4().makeRotationFromEuler(axesInfo[i][1]);\n            const rot1 = new THREE.Matrix4().makeRotationFromEuler(axesInfo[1][1]);\n            cubie.setRotationFromMatrix(rot.multiply(rot1))\n            for (let z = -1; z <= 1; z++) {\n                for (let x = -1; x <= 1; x++) {\n                    let idx = (z + 1) * 3 + (x + 1)\n                    let colorIndex = faces[i][idx]\n                    let isLRColor = colorIndex === Face.L || colorIndex === Face.R\n                    let isCorner = (x === -1 || x === 1) && (z === -1 || z === 1)\n                    let shouldObscure = config.obscureNonLR && !isLRColor\n                    let shouldMaskCorner = config.obscureCornerMask && isCorner && !isLRColor\n\n                    // If corner masking is on, replace non-LR corner colors with grey\n                    let effectiveColorIndex = shouldMaskCorner ? 6 : colorIndex\n\n                    const curr_tmpl = (shouldObscure && !shouldMaskCorner) ? obscured_stickers_tmpl[colorIndex * 9 + idx] : stickers_tmpl[effectiveColorIndex * 9 + idx]\n                    const sticker = curr_tmpl.clone()\n                    const stickerwrap = stickerwrap_tmpl.clone()\n\n                    const eps = 0.05\n                    sticker.position.copy(new THREE.Vector3(x * 2, 3, z * 2))\n                    stickerwrap.position.copy(new THREE.Vector3(x * 2, 3 - eps, z * 2))\n\n                    if (facesToReveal.indexOf(i) > -1) { // (i === 5 && mode === \"UF\")) {\n                        let isLRColor = colorIndex === Face.L || colorIndex === Face.R\n                        let shouldObscureHint = config.obscureNonLR && !isLRColor\n                        const stickerhint = (shouldObscureHint && !shouldMaskCorner) ?\n                            obscured_hint_mesh[faces[i][idx]].clone() :\n                            hint_mesh[effectiveColorIndex].clone()\n                        stickerhint.position.copy(new THREE.Vector3(x * 2, 3 + hintDistance, z * 2))\n                        cubie.add(stickerhint)\n                    }\n                    if (enableBorder)\n                        cubie.add(stickerwrap)\n\n                    cubie.add(sticker)\n                }\n\n            }\n            cube.add(cubie)\n        }\n        cube.scale.set(1 / 3, 1 / 3, 1 / 3)\n        return cube\n    }\n\n    let cubeG = drawCube(cube, colorScheme)\n    scene.add(cubeG)\n\n    const render = () => {\n        controls.update();\n        renderer.render(scene, camera)\n    }\n    render()\n\n    let frameID = -1\n    const animate = () => {\n        frameID = requestAnimationFrame(animate)\n        renderer.render(scene, camera)\n    }\n    animate()\n\n    const updateCubeAndColor = (cube: FaceletCubeT, colorScheme: Array<string>) => {\n        scene.remove(cubeG)\n        cubeG.clear()\n        cubeG = drawCube(cube, colorScheme)\n        scene.add(cubeG)\n        renderer.render(scene, camera)\n        return renderer\n    }\n\n    const cleanup = () => {\n        geos.forEach(g => g.dispose())\n        materials_border.dispose()\n        geo_border.dispose()\n        greyMaterial.dispose()\n        scene.remove(cubeG)\n        cancelAnimationFrame(frameID)\n    }\n    return {\n        updateCubeAndColor,\n        getRenderer: () => renderer,\n        cleanupFunc: cleanup,\n        renderControls: render\n    }\n    //let defaultColorScheme = [ 0x00ff00, 0x0000ff, 0xff0000,0xff8800,0xffff00, 0xffffff]\n}\n\nlet drawCube = (function(){\n    let config_cache : ConfigT | null = null\n    let painter : Painter | null = null\n    let func = (cube: FaceletCubeT, config: ConfigT) => {\n        if (config_cache === null) {\n            painter?.cleanupFunc()\n\n            painter = redraw_cube(cube, config)\n            config_cache = config\n            return painter\n        }\n        else if (config.width === config_cache.width && config.height === config_cache.height &&\n            arrayEqual(config.faces || [], config_cache.faces || []) && config.theme === config_cache.theme &&\n            config.hintDistance === config_cache.hintDistance && config.enableControl === config_cache.enableControl\n            && config.cameraState === config_cache.cameraState && config.obscureNonLR === config_cache.obscureNonLR\n            && config.obscureStickerWidth === config_cache.obscureStickerWidth && config.obscureCornerMask === config_cache.obscureCornerMask) {\n\n            painter?.updateCubeAndColor(cube, config.colorScheme)\n            config_cache = config\n            return painter!\n        } else {\n            painter?.cleanupFunc()\n            painter = redraw_cube(cube, config)\n            config_cache = config\n            return painter!\n        }\n    }\n    return func\n})\n\ntype Painter = {\n    updateCubeAndColor: (cube: FaceletCubeT, scheme: Array<string>) => THREE.WebGLRenderer,\n    getRenderer: () => THREE.WebGLRenderer,\n    cleanupFunc: () => void,\n    renderControls: () => void\n\n}\n\nfunction CubeSim(props: Config) {\n    const mount = React.useRef<HTMLDivElement | null>(null)\n    const [cameraState, setCameraState] = React.useState<CameraState>(CameraState.HOME);\n    let { width, height, colorScheme, facesToReveal, hintDistance, theme, obscureNonLR, obscureStickerWidth, obscureCornerMask} = props\n    let cubePainter = React.useMemo(drawCube, [])\n    // obscureNonLR defaults to false for non-SS modes, true only for SS mode when enabled\n\n    const gt_xs = useMediaQuery(useTheme().breakpoints.up('sm'));\n    const enableControl = gt_xs\n\n    let painter = cubePainter(props.cube, {\n            width, height, colorScheme, faces: facesToReveal, theme, hintDistance, enableControl,\n            cameraState, obscureNonLR: obscureNonLR, obscureStickerWidth: obscureStickerWidth, obscureCornerMask: obscureCornerMask})\n\n    useEffect( () => {\n        let dom = window //painter.getRenderer().domElement\n        function downHandler ( event: KeyboardEvent){\n            let suppressLogging = 0\n            // intercept keyboard event for local control\n            if (event.key === \"1\") {\n                setCameraState(CameraState.PEEK_DFL);\n            }\n            if (event.key === \"2\") {\n                setCameraState(CameraState.PEEK_DFR);\n            }\n            if (event.key === \"3\") {\n                setCameraState(CameraState.PEEK_UFL);\n            }\n            if (event.key === \"9\") {\n                setCameraState(CameraState.PEEK_UBL);\n            }\n            if (event.key === \"0\") {\n                setCameraState(CameraState.PEEK_UBR);\n            }\n            else {\n                suppressLogging = 1\n            }\n            if (~suppressLogging) {\n                //console.log(\"CubeSim camera rotateion with key \", event.key)\n            }\n        }\n        function upHandler (event: KeyboardEvent) {\n            setCameraState(CameraState.HOME);\n        }\n        dom.addEventListener('keydown', downHandler);\n        dom.addEventListener('keyup', upHandler);\n        return () => {\n            dom.removeEventListener('keydown', downHandler);\n            dom.addEventListener('keyup', upHandler);\n        };\n    });\n\n    useEffect( () => {\n        let dom = mount.current!\n        dom.appendChild(painter.getRenderer().domElement) //renderer.domElement)\n        return () => {\n            dom.removeChild(painter.getRenderer().domElement)\n        }\n    })\n\n    return <div\n        ref={mount}\n        style={{ width: props.width, height: props.height, zIndex: 1 }}\n    />;\n}\n\nexport default CubeSim","import { MoveT, OriChg, PermChg, StickerT, StickerExtT, CornerCoord, EdgeCoord, cstimer_corners_coord, cstimer_edges_coord, CenterCoord, centers_coord } from \"./Defs\";\nimport { u, d, f, b, l, r, m, e, s} from \"./Defs\";\nimport { FaceletT, FaceletCubeT, corners_coord, edges_coord, u_face, f_face, color_map } from \"./Defs\";\nimport { Typ, Face, C, E, T, U, D, F, B, L, R } from \"./Defs\";\nimport { rand_int, rand_shuffle, getParity, rand_choice, arrayEqual } from \"./Math\";\n\nconst C_MOD = 3;\nconst E_MOD = 2;\nconst T_MOD = 1;\n\nexport class CubieCube {\n    cp: number[] = [];\n    co: number[] = [];\n    ep: number[] = [];\n    eo: number[] = [];\n    tp: number[] = [];\n    // The addition of tp is not necessary, but helps us deal with slice moves in Roux during search and simcube.\n    deserialize(s: string) {\n        let obj = JSON.parse(s)\n        this.set(obj);\n        return this\n    }\n    serialize() {\n        let {cp, co, ep, eo, tp} = this\n        return JSON.stringify({cp, co, ep, eo, tp});\n    }\n\n    Id() : CubieCube {\n        this.set({\n            cp: [0, 1, 2, 3, 4, 5, 6, 7],\n            co: [0, 0, 0, 0, 0, 0, 0, 0],\n            ep: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\n            eo: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            tp: [0, 1, 2, 3, 4, 5]\n        })\n        return this\n    }\n    clone() : CubieCube {\n        return new CubieCube({\n            cp: [...this.cp],\n            co: [...this.co],\n            ep: [...this.ep],\n            eo: [...this.eo],\n            tp: [...this.tp]\n        })\n    }\n    constructor(value?: {cp: number[], co: number[], ep: number[], eo: number[], tp?: number[]} | CubieCube) {\n        if (value instanceof CubieCube) {\n            this.set({\n                cp: value.cp, co: value.co, ep: value.ep, eo: value.eo, tp: value.tp\n            })\n        }\n        else if (value) {\n            this.cp = value.cp\n            this.co = value.co\n            this.ep = value.ep\n            this.eo = value.eo\n            this.tp = value.tp || [0, 1, 2, 3, 4, 5] // UD FB LR\n        } else {\n            this.Id()\n        }\n    }\n    set(value: {cp?: number[], co?: number[], ep?: number[], eo?: number[], tp?: number[]} | CubieCube) {\n        this.cp = value.cp || this.cp\n        this.co = value.co || this.co\n        this.ep = value.ep || this.ep\n        this.eo = value.eo || this.eo\n        this.tp = value.tp || this.tp\n    }\n    _apply_partial(o: Array<number>, p: Array<number>, oc: Array<OriChg>, pc: Array<PermChg>, mod: number) {\n        let o_new = [...o];\n        let p_new = [...p];\n\n        for (let i = 0; i < oc.length; i++) {\n            //let [src, dst] = pc[i];\n            let src = pc[i][0], dst = pc[i][1];\n            p_new[dst] = p[src];\n            o_new[dst] = (o[src] + oc[i]) % mod;\n        }\n        return [o_new, p_new]\n    }\n    _apply_partial_perm(p: Array<number>, pc: Array<PermChg>, mod: number) {\n        let p_new = [...p];\n\n        for (let i = 0; i < pc.length; i++) {\n            //let [src, dst] = pc[i];\n            let src = pc[i][0], dst = pc[i][1];\n            p_new[dst] = p[src];\n        }\n        return p_new\n    }\n\n    // all side-effect-less\n    apply_one(move: Move) {\n        let [co, cp] = this._apply_partial(this.co, this.cp, move.coc, move.cpc, C_MOD)\n        let [eo, ep] = this._apply_partial(this.eo, this.ep, move.eoc, move.epc, E_MOD)\n        let tp = this._apply_partial_perm(this.tp, move.tpc, T_MOD)\n        return new CubieCube({ co, cp, eo, ep, tp })\n    }\n\n    static generate_apply_partial_func_perm(pc: Array<PermChg>, mod: number, p: string) {\n        return `\n        let ${p}_new = [...${p}];\n        src = 0, dst = 0;\n        ${Array(pc.length).fill(0).map( (_, i) => {\n            let src = pc[i][0], dst = pc[i][1];\n            return `\n                ${p}_new[${dst}] =  ${p}[${src}];\n            `\n        }).join(\"\\n\")}\n        // return [ ${p}_new]\n        `\n    }\n    static generate_apply_partial_func(oc: Array<OriChg>, pc: Array<PermChg>, mod: number, o: string, p: string) {\n        return `\n        let ${o}_new = [...${o}];\n        let ${p}_new = [...${p}];\n        src = 0, dst = 0;\n        ${Array(oc.length).fill(0).map( (_, i) => {\n            let src = pc[i][0], dst = pc[i][1], ori = oc[i];\n            return `\n                ${p}_new[${dst}] =  ${p}[${src}];\n                ${o}_new[${dst}] = (${o}[${src}] + ${ori}) % ${mod};\n            `\n        }).join(\"\\n\")}\n        // return [${o}_new, ${p}_new]\n        `\n    }\n    static generate_apply_func(move: Move) : (c: CubieCube) => CubieCube {\n        // eslint-disable-next-line no-new-func\n        return new Function(\"cube\", `\n        let {co, cp, eo, ep, tp} = cube;\n        ${CubieCube.generate_apply_partial_func(move.coc, move.cpc, C_MOD, \"co\", \"cp\")}\n        ${CubieCube.generate_apply_partial_func(move.eoc, move.epc, E_MOD, \"eo\", \"ep\")}\n        ${CubieCube.generate_apply_partial_func_perm(move.tpc, T_MOD, \"tp\")}\n        return ({ co: co_new, cp: cp_new, eo: eo_new,\n            ep: ep_new, tp: tp_new })\n        `) as (c: CubieCube) => CubieCube\n    }\n\n    apply(move: Move | Array<Move> | MoveSeq | string): CubieCube {\n        if (Array.isArray(move) || move instanceof MoveSeq) {\n            let moves = Array.isArray(move) ? move : move.moves\n            let cube = this.clone()\n            for (let i = 0; i < moves.length; i++) {\n                cube = cube.apply_one(moves[i])\n            }\n            return cube\n        } else if (typeof move === \"string\") {\n            return this.apply(new MoveSeq(move))\n        }\n        else {\n            return this.apply_one(move)\n        }\n    }\n\n    static _rotate_coord(fs: Face[]) {\n        let faces = [...fs] as Face[]\n        let last_face = faces[faces.length - 1];\n        for (let i = faces.length - 1; i > 0; i--) {\n            faces[i] = faces[i - 1];\n        }\n        faces[0] = last_face\n        return faces\n    }\n    static _backward_rotate_coord(fs: Face[]){\n        let faces = [...fs] as Face[]\n        let first_face = faces[0]\n        for (let i = 0; i < faces.length - 1; i++) {\n            faces[i] = faces[i + 1];\n        }\n        faces[faces.length - 1] = first_face\n        return faces\n    }\n\n    // facelet mapping: from position to piece\n    _to_facelet_mapping(corners_coord: CornerCoord[], edges_coord: EdgeCoord[], centers_coord: CenterCoord[]) {\n        let facelet_mapping : [Face[], Face[]][]= []\n\n        for (let i = 0; i < 8; i++) {\n            let pos = corners_coord[i] as Face[]\n            let piece = corners_coord[this.cp[i]] as Face[]\n\n            for (let j = 0; j < this.co[i];j++) {\n                piece = CubieCube._rotate_coord(piece)\n            }\n            facelet_mapping.push([pos, piece])\n        }\n        for (let i = 0; i < 12; i++) {\n            let pos = edges_coord[i] as Face[]\n            let piece = edges_coord[this.ep[i]] as Face[]\n            for (let j = 0; j < this.eo[i];j++) {\n                piece = CubieCube._rotate_coord(piece)\n            }\n            facelet_mapping.push([pos, piece])\n        }\n        for (let i = 0; i<6;i++) {\n            let pos = centers_coord[i]\n            let piece = centers_coord[this.tp[i]] as Face[]\n            facelet_mapping.push([ pos, piece])\n        }\n        return facelet_mapping\n    }\n\n    _from_facelet_mapping (fm: [Face[], Face[]][], custom_corners_coord: CornerCoord[], custom_edges_coord: EdgeCoord[], custom_centers_coord: CenterCoord[] ) {\n        let cube = new CubieCube()\n\n        let match_pos_piece = (pos: Face[], piece: Face[], coord: Face[][], parity: number) : [number, number, number]=> {\n            let expected = new Map(coord.map( (x, i) => [x.toString(), i]))\n            let ori = 0\n            while (!expected.has(pos.toString())) {\n                pos = CubieCube._backward_rotate_coord(pos)\n                ori--;\n                if (ori <= -parity) break;\n            }\n            while (!expected.has(piece.toString())) {\n                piece = CubieCube._backward_rotate_coord(piece)\n\n                ori++;\n                if (ori >= 10) {\n                    console.warn(\"can't match piece\", piece, expected)\n                    break\n                }\n            }\n\n            ori = (ori + parity) % parity;\n            return [ori, expected.get(pos.toString())!, expected.get(piece.toString())! ]\n        }\n\n        for (let coord_pair of fm) {\n            let pos = coord_pair[0], piece = coord_pair[1]\n            let coord : Face[][] = (pos.length === 2) ? custom_edges_coord :\n                        (pos.length === 3) ? custom_corners_coord :\n                         custom_centers_coord ;\n            let [newOri,newpos,newPerm] = match_pos_piece(pos, piece, coord, pos.length);\n\n            //console.log( pp([pos, piece]), [newOri, newpos,newPerm])\n            if (pos.length === 2) {\n                cube.eo[newpos] = newOri;\n                cube.ep[newpos] = newPerm;\n            } else if (pos.length === 3){\n                cube.co[newpos] = newOri;\n                cube.cp[newpos] = newPerm;\n            } else {\n                cube.tp[newpos] = newPerm;\n            }\n        }\n        return cube\n    }\n\n    to_cstimer_cube() {\n        let facelet_mapping = this._to_facelet_mapping(corners_coord, edges_coord, centers_coord)\n        let cube = this._from_facelet_mapping(facelet_mapping, cstimer_corners_coord, cstimer_edges_coord, centers_coord)\n        return cube\n    }\n\n    is_solveable() {\n        if (this.tp[0] !== 0) {\n            this.apply(new MoveSeq(\"M2\")) // assuming lse\n        }\n        let perm_correct = (getParity(this.cp) + getParity(this.ep)) % 2 === 0\n        let ori_correct = (this.co.reduce((x, y) => x + y, 0) % 3 === 0) && (this.eo.reduce((x, y) => x + y, 0) % 2 === 0)\n        return perm_correct && ori_correct\n    }\n\n    changeBasis(s: MoveSeq) {\n        // only take x and y for now\n        let facelet_mapping = this._to_facelet_mapping(corners_coord, edges_coord, centers_coord)\n\n        let transformed_mapping = s.moves.reduce( (mapping, move) : [Face[], Face[]][] => {\n            let face_mapping = Object.fromEntries(move.tpc)\n            //console.log(\"applying face mapping for \", move.name, face_mapping)\n            //console.log(\"before\", pp(mapping))\n            let result = mapping.map( ([face_pos, face_target]) =>\n                [face_pos.map(f => face_mapping[f] ?? f ),\n                 face_target.map(f => face_mapping[f] ?? f) ]\n            )\n            //console.log('after', pp(result))\n            return result as any\n        } , facelet_mapping)\n        //console.log(s.toString(), facelet_mapping, transformed_mapping)\n        let cube = this._from_facelet_mapping(transformed_mapping, corners_coord, edges_coord, centers_coord)\n        return cube\n        //let cube = this._from_facelet_mapping(facelet_mapping, corners_coord, edges_coord, centers_coord)\n    }\n}\n\n\n/* Moves */\n/* We will generate all the moves based on the base moves and rotations, and return them in an array */\nexport class Move {\n    cpc: Array<PermChg> = [];\n    coc: Array<OriChg> = [];\n    epc: Array<PermChg> = [];\n    eoc: Array<OriChg> = [];\n    tpc: Array<PermChg> = [];\n    name: string = \"\";\n    constructor(arg?: Array<Move> | CubieCube | Move | MoveT, name?: string) {\n        if (Array.isArray(arg)) {\n            this.from_moves(arg, name!)\n        } else if (arg instanceof Move){\n            this.cpc = [...arg.cpc]\n            this.coc = [...arg.coc]\n            this.epc = [...arg.epc]\n            this.eoc = [...arg.eoc]\n            this.tpc = [...arg.tpc]\n            this.name = name!\n        } else if (arg instanceof CubieCube) {\n            this.from_cube(arg, name!)\n        } else if (arg) {\n            this.set(arg)\n        }\n    }\n    set(move: Move | MoveT) {\n        this.cpc = move.cpc\n        this.coc = move.coc\n        this.epc = move.epc\n        this.eoc = move.eoc\n        this.tpc = move.tpc\n        this.name = move.name\n    }\n    from_cube(cube: CubieCube, name: string) {\n        let get_change = (p: Array<number>, o: Array<number>, acc_p: Array<PermChg>, acc_o: Array<OriChg>) => {\n            for (let i = 0; i < p.length; i++) {\n                if (i === p[i] && o[i] === 0) {\n                } else {\n                    acc_p.push([p[i], i]);\n                    acc_o.push(o[i]);\n                }\n            }\n        }\n        get_change(cube.cp, cube.co, this.cpc, this.coc);\n        get_change(cube.ep, cube.eo, this.epc, this.eoc);\n        get_change(cube.tp, [0, 0, 0, 0, 0, 0], this.tpc, []);\n        this.name = name\n        return this\n    }\n    from_moves (moves: Move[], name: string) {\n        this.from_cube(new CubieCube().apply(moves), name)\n        return this\n    }\n    clone() {\n        return new Move(this, this.name)\n    }\n    static make_rot_set(move: Move): Array<Move> {\n        return [move,\n            new Move().from_moves([move, move], move.name + \"2\"),\n            new Move().from_moves([move, move, move], move.name + \"'\"),\n        ]\n    }\n\n    static generate_base_moves = () => {\n        let make_rot_set = Move.make_rot_set\n        let us = make_rot_set(new Move(u));\n        let fs = make_rot_set(new Move(f));\n        let rs = make_rot_set(new Move(r));\n        let ls = make_rot_set(new Move(l));\n        let ds = make_rot_set(new Move(d));\n        let bs = make_rot_set(new Move(b));\n        let ms = make_rot_set(new Move(m));\n        let es = make_rot_set(new Move(e));\n        let ss = make_rot_set(new Move(s));\n\n        let rw = new Move([new Move(r), ms[2]], \"r\")\n        let rws = make_rot_set(rw)\n        let lw = new Move([new Move(l), new Move(m)], \"l\")\n        let lws = make_rot_set(lw)\n        let uw = new Move([new Move(u), new Move(e)], \"u\")\n        let uws = make_rot_set(uw)\n        let fw = new Move([new Move(f), new Move(s)], \"f\")\n        let fws = make_rot_set(fw)\n\n        let x = new Move([new Move(r), ls[2], ms[2]], \"x\")\n        let xs = make_rot_set(x)\n        let y = new Move([new Move(u), new Move(e), ds[2]], \"y\")\n        let ys = make_rot_set(y)\n        let z = new Move([x, y, x, x, x], \"z\")\n        let zs = make_rot_set(z)\n\n        let id = new Move(new CubieCube(), \"id\")\n        let moves = [\n            id,\n            us, fs, rs, ls, ds, bs, ms, es, ss,\n            xs, ys, zs,\n            rws, lws, uws, fws\n        ].flat()\n        let moves_dict: { [key: string]: Move } = Object.create({})\n        moves.forEach(m => moves_dict[m.name] = m)\n        return moves_dict\n    }\n    static all: {[key: string]: Move} = Move.generate_base_moves();\n\n    inv(): Move {\n        let name: string\n        switch (this.name[this.name.length - 1]) {\n            case \"'\": name = this.name.slice(0, this.name.length - 1); break\n            case \"2\": name = this.name; break\n            default: name = this.name + \"'\"\n        }\n        return Move.all[name]\n    }\n\n    toString() {\n        return this.name\n    }\n}\n\n\nexport class MoveSeq {\n    moves: Move[] = [];\n\n    constructor(moves: Move[] | string) {\n        if (typeof moves === \"string\") {\n            this.parse(moves);\n        } else {\n            this.moves = moves\n        }\n    }\n\n    static quarterMap : {[key: string]: string} = ({\n        \"U2\": \"U'\",\n        \"R2\": \"R'\",\n        \"r2\": \"r'\",\n        \"M2\": \"M'\",\n        \"L2\": \"L\",\n    });\n    toQuarter() {\n        let nm : Move[] = []\n        for (let i = 0 ; i < this.moves.length; i++) {\n            let m = this.moves[i]\n            if (m.name[1] === \"2\") {\n                let k = MoveSeq.quarterMap[m.name] || m.name[0]\n                nm.push(Move.all[ k ])\n                nm.push(Move.all[ k ])\n            } else {\n                nm.push(m)\n            }\n        }\n        return new MoveSeq(nm)\n    }\n\n    static _combine(move1: Move, move2: Move) : MoveSeq {\n        const getCnt = (name : string) => {\n            if (name.length === 1) return 1\n            return name[1] === \"2\" ? 2 : 3\n        }\n        const getStr = (cnt : number) => {\n            return (cnt === 1) ? \"\" : (cnt === 2 ? \"2\" : \"'\")\n        }\n        if (move1.name[0] === move2.name[0]) {\n            let cnt = (getCnt(move1.name) + getCnt(move2.name)) % 4\n            if (cnt === 0) return new MoveSeq([])\n            else return new MoveSeq([ Move.all[move1.name[0] + getStr(cnt)] ])\n        } else {\n            return new MoveSeq([move1, move2])\n        }\n    }\n\n    remove_setup() {\n        let rotset = new Set([\"x\", \"x'\", \"x2\", \"y\", \"y'\", \"y2\", \"z\", \"z'\", \"z2\"]);\n        while (this.moves.length > 0 && rotset.has(this.moves[0].name)) {\n            this.moves.shift()\n        }\n        return this\n    }\n\n    parse_line(str: string) {\n        let tokens = []\n        let token = \"\"\n        let comment_idx = str.search(/\\/\\//)\n        if (comment_idx > -1) str = str.slice(0, comment_idx)\n        for (let i = 0; i < str.length; i++) {\n            let ch = str[i]\n            if (ch === '2' || ch === '\\'') {\n                if (token.length === 1) {\n                    token += str[i];\n                    tokens.push(token)\n                    token = \"\"\n                }\n            } else if (ch === ' ') {\n                if (token.length > 0) {\n                    tokens.push(token); token = \"\";\n                }\n            } else {\n                const ord = ch.charCodeAt(0)\n                if ( (65 <= ord && ord < 65 + 26) || (97 <= ord && ord < 97 + 26)) {\n                    if (token.length > 0) {\n                        tokens.push(token)\n                        token = \"\"\n                    }\n                    token += str[i]\n                }\n            }\n        }\n        let moves = []\n        if (token.length > 0) tokens.push(token);\n        for (let token of tokens) {\n            let move = Move.all[token]\n            if (move) {\n                moves.push(move)\n            }\n        }\n        return moves\n    }\n    parse(str: string) {\n        this.moves = str.split(\"\\n\").map(x => this.parse_line(x)).flat()\n        return this\n    }\n\n    collapse() : MoveSeq {\n        let newMoves : Move[] = []\n        let moves = this.moves\n        while (moves.length > 0) {\n            const nextMove = moves.shift()!\n            if (newMoves.length === 0) {\n                newMoves.push(nextMove)\n            } else {\n                const move = newMoves.pop()!\n                const combined = MoveSeq._combine(move, nextMove)\n                for (let m of combined.moves)\n                    newMoves.push(m)\n            }\n        }\n        return new MoveSeq(newMoves);\n    }\n\n    inv() {\n        let moves: Move[] = this.moves.slice(0).reverse().map(x => x.inv()).flat()\n        return new MoveSeq(moves)\n    }\n\n    slice(n: number) {\n        let moves: Move[] = this.moves.slice(0, n)\n        return new MoveSeq(moves)\n    }\n\n    length() {\n        return this.moves.length\n    }\n\n    static add_auf(moves: Array<Move>, auf_moves?: Array<Move | MoveSeq>) {\n        auf_moves = auf_moves || [ Move.all[\"id\"], Move.all[\"U\"], Move.all[\"U'\"], Move.all[\"U2\"]]\n        let auf_move = rand_choice(auf_moves)\n        if (auf_move instanceof MoveSeq) {\n            moves.concat(auf_move.moves)\n        } else {\n            moves.push(auf_move)\n        }\n    }\n\n    toString(useMetric?: string) {\n        return this.moves.map(m => m.toString()).join(\" \") + \" \" + (useMetric ? \"(\" + this.moves.length + \")\" : \"\")\n    }\n}\n\n/* Faces */\nlet FaceletCube = function () {\n    let mult_move = (face: FaceletT, move: Move): FaceletT => {\n        let face_new: FaceletT = [...face]\n        let mod_for_typ = (typ: Typ) => {\n            switch (typ) {\n                case C: return 3;\n                case E: return 2;\n                case T: return 1\n            }\n        }\n        let work = (p: PermChg, o: number, typ: Typ) => {\n            let mod = mod_for_typ(typ)\n            let [p1, p2] = p\n            for (let i = 0; i < face.length; i++) {\n                let [p_curr, o_curr, typ_curr] = face[i];\n                if (typ_curr === typ && p_curr === p1) {\n                    face_new[i] = [p2, (o_curr + o) % mod, typ]\n                }\n            }\n        }\n        for (let i = 0; i < move.cpc.length; i++) {\n            work(move.cpc[i], move.coc[i], C)\n        }\n        for (let i = 0; i < move.epc.length; i++) {\n            work(move.epc[i], move.eoc[i], E)\n        }\n        for (let i = 0; i < move.tpc.length; i++) {\n            work(move.tpc[i], 0, T)\n        }\n        return face_new\n    }\n    let color_of_c = (p: number, o1: number, o2: number) =>\n    corners_coord[p][(3 - o1 + o2) % 3];\n    let color_of_e = (p: number, o1: number, o2: number) =>\n        edges_coord[p][(2 - o1 + o2) % 2];\n    let color_of_t = (p: number) => [U, D, F, B, L, R][p]\n\n    let color_of_sticker = (cube: CubieCube, sticker: StickerT) => {\n        let [p, o, typ] = sticker\n        if (typ === C) {\n            return color_of_c(cube.cp[p], cube.co[p], o)\n        } else if (typ === E) {\n            return color_of_e(cube.ep[p], cube.eo[p], o)\n        } else if (typ === T) {\n            return color_of_t(cube.tp[p])\n        } else {\n            throw Error(\"unidentified type \" + typ)\n        }\n    }\n\n    let from_cubie_partial = (cube: CubieCube, facelet: FaceletT) => {\n        return facelet.map(s => color_of_sticker(cube, s))\n    }\n    let from_cubie_partial_masked = (cube: CubieCube, facelet: FaceletT, mask: Mask) => {\n        return facelet.map(([p, o, typ]) => {\n            if (typ === C) {\n                if (mask.cp[cube.cp[p]] === 1)\n                    return color_of_c(cube.cp[p], cube.co[p], o)\n                else\n                    return Face.X\n            } else if (typ === E) {\n                if (mask.ep[cube.ep[p]] === 1)\n                    return color_of_e(cube.ep[p], cube.eo[p], o)\n                else\n                    return Face.X\n            } else if (typ === T) {\n                if (mask.tp && mask.tp[cube.tp[p]] === 0)\n                    return Face.X\n                else\n                    return color_of_t(cube.tp[p])\n            } else {\n                throw Error(\"unidentified type \" + typ)\n            }\n        })\n    }\n\n    let moves = Move.all\n    let generate_base_facelets = () => {\n        let d_face = mult_move(f_face, moves[\"x'\"])\n        let l_face = mult_move(f_face, moves[\"y\"])\n        let r_face = mult_move(f_face, moves[\"y'\"])\n        let b_face = mult_move(f_face, moves[\"y2\"])\n        return {\n            d_face, l_face, r_face, b_face\n        }\n    }\n    let { d_face, l_face, r_face, b_face } = generate_base_facelets()\n\n    let from_cubie = (cube: CubieCube, mask?: Mask): FaceletCubeT => {\n        //console.log(\"converting from cube\", cube)\n        let faces = [u_face, d_face, f_face, b_face, l_face, r_face]\n        if (mask)\n            return faces.map((facelet) => from_cubie_partial_masked(cube, facelet, mask))\n        else\n            return faces.map((facelet) => from_cubie_partial(cube, facelet))\n    }\n\n    let as_actrm = (fcube: FaceletCubeT, faces: 'lr' | 'fb', uu_only: boolean): FaceletCubeT => {\n        // U_face index 0\n        // algorithm: for U face and 0..2 of FBLR face, filter by lr|fb + u sticker\n        // additionally, if uu_only == 1, filter 0..2 of FBLR face by lr|fb only.\n        const U_IDX = 0\n        const F_IDX = 2\n        const nmcll_faces = (faces === 'lr') ? [Face.L, Face.R] : [Face.F, Face.B]\n        const u_or_nmcll_faces = [Face.U, ...nmcll_faces]\n        return fcube.map((stickers, idx) => {\n            if (idx === U_IDX) {\n                return stickers.map(s => u_or_nmcll_faces.includes(s) ? s : Face.X)\n            }\n            if (idx >= F_IDX) {\n                return stickers.map((s, fidx) =>\n                    ((uu_only ? nmcll_faces : u_or_nmcll_faces).includes(s) || fidx > 2)\n                   ? s\n                   : Face.X)\n            }\n            return [...stickers]\n        })\n    }\n\n    let as_kata = (fcube: FaceletCubeT) => {\n        // find out where are the recog stickers and grey out the rest\n        console.log(fcube)\n        let {F,B,L,R,U} = Face\n        const shape_maps = [\n            // prioritize all recog stickers on U (Pi, H)\n            [[U, 0], [U, 2], [U, 6], [U, 8]],\n            // next, find recog stickers in T shape\n            [[U, 0], [U, 2], [L, 2], [R, 0]],\n            [[U, 2], [U, 8], [B, 2], [F, 0]],\n            [[U, 6], [U, 8], [L, 0], [R, 2]],\n            [[U, 0], [U, 6], [B, 0], [F, 2]],\n            // default: recog stickers for L\n            [[U, 2], [U, 6], [F, 2], [B, 2]],\n            [[U, 0], [U, 8], [L, 2], [R, 2]],\n            // default: recog stickers for O (solved)\n            [[F, 0], [F, 2], [R, 0], [R, 2]],\n        ]\n        let found = false;\n        for (let map of shape_maps) {\n            let match_count = 0;\n            for (let [f, i] of map) {\n                match_count += (fcube[f][i] !== Face.U) ? 1 : 0;\n            }\n            if (match_count === map.length) {\n                // found recog shape, now make all non-U pieces X\n                for (let f of [Face.L, Face.R, Face.F, Face.B, Face.U]) {\n                    for (let i = 0; i < ((f === Face.U) ? 9 : 3); i++) {\n                        if (fcube[f][i] !== Face.U) {\n                            let is_recog = Array(4).fill(0).map((_, j) => (map[j][0] === f && map[j][1] === i)).includes(true)\n                            if (!is_recog) {\n                                fcube[f][i] = Face.X;\n                            }\n                        }\n                    }\n                }\n                found = true;\n                break;\n            }\n        }\n        //console.log(fcube)\n        if (!found) {\n            alert(\"recog shape not found\")\n        }\n        return fcube;\n    }\n\n    let to_unfolded_cube_str = (faceletCube: FaceletCubeT): String => {\n        let face_count = [0, 0, 0, 0, 0, 0];\n        let str_face_map: { [key: string]: Face } = {\n            \"U\": U, \"D\": D, \"F\": F, \"B\": B, \"L\": L, \"R\": R\n        }\n        let face_str_map = \"UDFBLR\"\n        let color_cube = \"\"\n        for (let i = 0; i < color_map.length; i++) {\n            let face_char = color_map[i];\n            if (str_face_map.hasOwnProperty(face_char)) {\n                let face: number = str_face_map[face_char] as number;\n                let count = face_count[face];\n                let color = faceletCube[face][count]\n                color_cube += face_str_map[color]\n                face_count[face] += 1;\n            } else {\n                color_cube += color_map[i];\n            }\n        }\n        return color_cube;\n    }\n\n\n    return {\n        from_cubie,\n        to_unfolded_cube_str,\n        color_of_sticker,\n        color_of_e,\n        as_actrm,\n        as_kata,\n        faces: {\n            u_face, d_face, l_face, r_face, f_face, b_face\n        }\n    }\n}()\n\ntype Mask = {\n    co?: number[],\n    eo?: number[],\n    tp?: number[],\n    cp: number[],\n    ep: number[],\n}\nexport type MaskT = Mask;\nfunction mask_copy (m: Mask) {\n    return {\n        co: m.co && [...m.co],\n        eo: m.eo && [...m.eo],\n        tp: m.tp && [...m.tp],\n        cp: [...m.cp],\n        ep: [...m.ep]\n    }\n}\n\nconst lse_mask: Mask = {\n    cp: [1, 1, 1, 1, 1, 1, 1, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1],\n}\n\nconst lse_4c_mask: Mask = {\n    cp: [1, 1, 1, 1, 1, 1, 1, 1],\n    ep: [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1],\n    eo: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n}\n\nconst solved_mask : Mask = {\n    cp: [1, 1, 1, 1,  1, 1, 1, 1],\n    ep:[1, 1, 1, 1,  1, 1, 1, 1, 1, 1, 1, 1],\n}\nconst empty_mask : Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n}\nconst dl_solved_mask : Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]\n}\nconst bl_solved_mask : Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]\n}\nconst fs_back_mask: Mask = {\n    cp: [0, 0, 0, 0, 0, 1, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\n\nconst fs_front_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\n\nconst fb_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\n\nconst f2b_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 1, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1],\n    tp: [0, 0, 0, 0, 1, 1]\n}\n\nconst zhouheng_mask: Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst fbdr_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst ss_front_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 0, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst ss_back_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 1, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst ssdp_front_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 0, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst ssdp_back_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 1, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst ssdp_both_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 1, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\n\nconst sb_mask : Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 1, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst cmll_mask : Mask = {\n    cp: [1, 1, 1, 1, 1, 1, 1, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1],\n    tp: [0, 0, 0, 0, 1, 1]\n}\n\nlet CubeUtil = (() => {\n    let is_cube_solved = (cube: CubieCube) => {\n        let id = new CubieCube()\n        return arrayEqual(cube.co, id.co) &&\n               arrayEqual(cube.eo, id.eo) &&\n               arrayEqual(cube.cp, id.cp) &&\n               arrayEqual(cube.ep, id.ep)\n    }\n\n    let is_solved = (cube: CubieCube, mask: Mask) => {\n        let {co: co_, cp, eo: eo_, ep, tp: tp_} = mask\n        let co = co_ || cp\n        let eo = eo_ || ep\n        let tp = tp_ || Array(6).fill(1)\n        let c_true = co.every( (_, i) =>  (cp[i] === 0 || cube.cp[i] === i)\n                        && (co[i] === 0 || cube.co[i] === 0) )\n        if (!c_true) return false\n        let e_true = eo.every( (_, i) =>  (ep[i] === 0 || cube.ep[i] === i)\n        && (eo[i] === 0 || cube.eo[i] === 0) )\n        if (!e_true) return false\n        let t_true = tp.every( (_, i) =>  (tp[i] === 0 || cube.tp[i] === i) )\n        return t_true\n    }\n\n    function ext(stickers: StickerT[], f: Face) : StickerExtT[] {\n        return stickers.map(x => {\n            let [a, b, c] = x;\n            return [a,b,c,f]\n        })\n    }\n\n    let { u_face, d_face, l_face, r_face, f_face, b_face } = FaceletCube.faces\n    let stickers = [ ...ext(u_face, U), ...ext(d_face, D),\n        ...ext(l_face, L), ...ext(r_face, R), ...ext(f_face,F),  ...ext(b_face, B)]\n\n    let find_pairs = function() {\n        // enumerate each sticker\n        let edge_stickers = stickers.filter(s => s[2] === Typ.E)\n        let corner_stickers = stickers.filter(s => s[2] === Typ.C)\n\n        let ep_stickers : StickerExtT[][] = Array(12).fill(0).map(_ => Array(0))\n        edge_stickers.map(s => ep_stickers[s[0]].push(s) )\n\n        let cp_stickers : StickerExtT[][] = Array(8).fill(0).map(_ => Array(0))\n        corner_stickers.map(s => cp_stickers[s[0]].push(s))\n\n        const epcp_pairs : [number, number][] = []\n        for (let e = 0; e < 12; e++) {\n            for (let c = 0; c < 8; c++) {\n                let efs = ep_stickers[e]\n                let cfs = cp_stickers[c]\n\n                let match = 0;\n                efs.forEach( (e) => {\n                    cfs.forEach( (c) => { if (e[3] === c[3]) match++ })\n                })\n                if (match === 2) {\n                    epcp_pairs.push( [e, c] )\n                }\n            }\n        }\n\n\n        let get_color = (cube: CubieCube, s: StickerExtT) => {\n            return FaceletCube.color_of_sticker(cube, [s[0], s[1], s[2]] )\n        }\n        let func = (cube: CubieCube) => {\n            // now we process the cube\n            let connected_pairs : [number, number][]= []\n            //console.log(\"All neighboring pairs \", epcp_pairs)\n            for (let [ep, cp] of epcp_pairs) {\n                let efs = ep_stickers[ep]\n                let cfs = cp_stickers[cp]\n                let cnt = 0;\n                efs.forEach( (e) => {\n                    const c = cfs.filter( (c) => e[3] === c[3])[0]\n                    if (get_color(cube, e) === get_color(cube, c)) cnt++;\n                })\n                if (cnt === 2) {\n                    connected_pairs.push([ep, cp])\n                }\n            }\n            return connected_pairs\n        }\n        return func\n    }()\n\n    let is_mask_solved2 = (cube: CubieCube, { co, eo, cp, ep }: Mask, premove: (Move | Move[])[]) => {\n        //let moves = [ [], Move.all[\"U\"], Move.all[\"U'\"], Move.all[\"U2\"] ]\n        co = co || cp\n        eo = eo || ep\n        for (let move of premove) {\n            let cube1 = cube.apply(move)\n            let solved = true\n            for (let i = 0; i < 8 && solved; i++) {\n                if ((co[i] && cube1.co[i] !== 0)\n                    || (cp[i] && cube1.cp[i] !== i)) {\n                    solved = false;\n                }\n            }\n            for (let i = 0; i < 12 && solved; i++) {\n                if ((eo[i] && cube1.eo[i] !== 0)\n                    || (ep[i] && cube1.ep[i] !== i)) {\n                    solved = false;\n                }\n            }\n            if (solved) return true;\n        }\n        return false;\n    }\n\n    const u_premove = [[], Move.all[\"U\"], Move.all[\"U'\"], Move.all[\"U2\"]]\n    const m2_premove = [[], Move.all[\"M2\"]]\n\n    let is_cmll_solved = (cube: CubieCube) => {\n        return is_mask_solved2(cube, lse_mask, u_premove)\n    }\n\n    const oris = [\"\", \"y\", \"y'\", \"y2\", \"x2\", \"x2y\", \"x2y'\", \"x2y2\",\n        \"x\", \"xy\", \"xy'\", \"xy2\", \"x'\", \"x'y\", \"x'y'\", \"x'y2\",\n        \"z\", \"zy\", \"zy'\", \"zy2\", \"z'\", \"z'y\", \"z'y'\", \"z'y2\"];\n    let rebase_to_edge = (cube: CubieCube, ep: number): [CubieCube, string] => {\n        for (let ori of oris) {\n            const cube_rebased = cube.apply(ori)\n            if ((cube_rebased.ep[ep] === ep)) {\n                return [cube_rebased, ori]\n            }\n        }\n        return [cube, \"\"]\n    }\n\n    let get_random_with_mask = ({ co, eo, cp, ep }: Mask): CubieCube => {\n        co = co || cp\n        eo = eo || ep\n        // get_random -- figure out which masks are 0, and assign random to these\n        let random_ori = (ori_mask: number[], typ: Typ) => {\n            let ori = Array(ori_mask.length).fill(0)\n            let mod = (typ === C) ? 3 : 2\n            let sum: number\n            do {\n                sum = 0\n                for (let i in ori_mask) {\n                    if (ori_mask[i] === 0) {\n                        ori[i] = rand_int(mod)\n                        sum += ori[i]\n                    }\n                }\n            } while (sum % mod > 0)\n            return ori\n        }\n        let random_perm = (perm_mask: number[]) => {\n            let perm: number[] = Array(perm_mask.length).fill(0)\n            let undecided: number[] = []\n            for (let i = 0; i < perm_mask.length; i++) {\n                if (perm_mask[i] === 0) {\n                    undecided.push(i)\n                } else {\n                    perm[i] = i\n                }\n            }\n            rand_shuffle(undecided)\n            for (let i = 0, cnt = 0; i < perm_mask.length; i++) {\n                if (perm_mask[i] === 0) {\n                    perm[i] = undecided[cnt]\n                    cnt += 1\n                }\n            }\n            return perm\n        }\n        let cp_rand, ep_rand, par\n        do {\n            [cp_rand, ep_rand] = [random_perm(cp), random_perm(ep)]\n            par = (getParity(cp_rand) + getParity(ep_rand)) & 1\n        } while (par > 0)\n\n        return new CubieCube({\n            co: random_ori(co, C),\n            cp: cp_rand,\n            eo: random_ori(eo, E),\n            ep: ep_rand,\n        })\n    }\n\n    let get_random_lse = (): CubieCube => {\n        let cube = get_random_with_mask(lse_mask)\n        return cube.apply(rand_choice(m2_premove))\n    }\n\n\n\n    return {\n        is_cmll_solved,\n        is_solved,\n        get_random_lse,\n        get_random_with_mask,\n        is_cube_solved,\n        find_pairs,\n        stickers,\n        rebase_to_edge\n    }\n})()\n\nexport abstract class Storage {\n    abstract name: string;\n    abstract serialize(): string;\n    abstract deserialize(x: string): void;\n    abstract _setDefault(): void;\n    save() {\n        window.localStorage.setItem(this.name, this.serialize());\n    }\n    load() {\n        const item = window.localStorage.getItem(this.name)\n        if (item) this.deserialize(item);\n        else this._setDefault();\n    }\n}\n\nexport class ColorScheme extends Storage {\n    // UDFBLR\n    // specify the colors for uf\n    // how to do this?\n    static default_colors = {\n        \"G\": \"#00b500\",\n        \"B\": \"#0000ff\",\n        \"R\": \"#ff0000\",\n        \"O\": \"#ff8800\",\n        \"Y\": \"#ffff00\",\n        \"W\": \"#ffffff\",\n        \"X\": \"#bfbfbf\"\n    }\n    name = \"colorscheme\";\n    colors: {[key:string]:string} = {};\n    // UDFBLR from UF\n    // INFERR UFR from UF?\n    static valid_schemes = [\n        \"WYGBOR\",\n        \"WYBGRO\",\n        \"WYROGB\",\n        \"WYORBG\",\n        \"YWGBRO\",\n        \"YWBGOR\",\n        \"YWROBG\",\n        \"YWORGB\",\n\n        \"GBWYRO\",\n        \"GBYWOR\",\n        \"GBROYW\",\n        \"GBORWY\",\n        \"BGWYOR\",\n        \"BGYWRO\",\n        \"BGROWY\",\n        \"BGORYW\",\n\n        \"ORWYGB\",\n        \"ORYWBG\",\n        \"ORGBYW\",\n        \"ORBGWY\",\n        \"ROWYBG\",\n        \"ROYWGB\",\n        \"ROGBWY\",\n        \"ROBGYW\",\n    ]\n    static valid_schemes_map = function() {\n        return new Map(ColorScheme.valid_schemes.map(x => [ x[0] + x[2], x]))\n    }();\n    constructor(suppressLoad?: boolean) {\n        super();\n        if (!suppressLoad) {\n            this.load();\n        }\n    }\n    toUserInput() {\n        return \"GBROYWX\".split('').map(x => this.colors[x])\n    }\n    set( colors:{[key:string]:string} | string[]) {\n        let newScheme = new ColorScheme(true);\n        if (Array.isArray(colors)) {\n            colors.forEach( (color, i) => newScheme.colors[\"GBROYWX\"[i]] = color )\n        } else {\n            newScheme.colors = {...this.colors, ...colors};\n        }\n        newScheme.save();\n        return newScheme\n    }\n    setWithDefault() {\n        let newScheme = new ColorScheme(true);\n        newScheme._setDefault();\n        newScheme.save();\n        return newScheme\n    }\n    _setDefault() { this.colors = ColorScheme.default_colors; };\n    serialize() {\n        return JSON.stringify(this.colors)\n    }\n    deserialize(s: string) {\n        this.colors = JSON.parse(s)\n    }\n    getColorsForOri(s: string) {\n        let faces = (ColorScheme.valid_schemes_map.get(s) || ColorScheme.valid_schemes_map.get(\"WG\")) + \"X\";\n        let arr : string[] = []\n        for (let i = 0; i < faces.length; i++) {\n            arr.push(this.colors[faces[i]]!)\n        }\n        return arr\n    }\n}\n\nlet Mask = {\n    lse_mask, fs_back_mask, fs_front_mask, fbdr_mask, fb_mask, f2b_mask, sb_mask, cmll_mask, ss_front_mask, ss_back_mask,\n    ssdp_front_mask, ssdp_back_mask, ssdp_both_mask, empty_mask, dl_solved_mask, bl_solved_mask, solved_mask, zhouheng_mask, lse_4c_mask,\n    copy: mask_copy\n}\n\nexport { FaceletCube, CubeUtil, Mask }\n","import React from 'react'\n\nimport {\n  FormControlLabel,\n  FormGroup,\n  Button,\n  Box,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  Checkbox,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from '@mui/material';\n\nimport makeStyles from '@mui/styles/makeStyles';\n\nimport { styled } from '@mui/material/styles';\n\nimport SettingsIcon from '@mui/icons-material/Settings';\n\nimport Radio from '@mui/material/Radio';\n\nimport { AppState, Action, SliderOpt } from '../Types';\nimport Selector from '../lib/Selector';\nimport Slider, { SliderThumb } from '@mui/material/Slider';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      paddingTop: theme.spacing(0),\n      paddingBottom: theme.spacing(2),\n      backgroundColor: theme.palette.background.default\n    },\n    button: {\n      width: \"100%\",\n    },\n    paper: {\n      padding: theme.spacing(3),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    canvasPaper: {\n      padding: theme.spacing(0),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    infoColumn: {\n      color: theme.palette.background.paper\n    },\n    scrambleColumn: {\n      paddingLeft: theme.spacing(3)\n    },\n    textColumn: {\n      // color: \"black\",\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 138\n      },\n    },\n    fixedHeight: {\n      height: 250,\n    },\n    title : {\n        flexGrow: 1,\n    },\n    select: {\n      color: theme.palette.text.primary\n    },\n    selectLabel: {\n      color: theme.palette.text.secondary\n    }\n\n}))\n\nfunction SliderThumbComponent(props: any) {\n  const { children, ...other } = props;\n  return (\n    <SliderThumb {...other}>\n      {children}\n      <span className=\"airbnb-bar\" />\n      <span className=\"airbnb-bar\" />\n      <span className=\"airbnb-bar\" />\n    </SliderThumb>\n  );\n}\n\nconst LevelSlider = styled(Slider)({\n  '& .MuiSlider-markLabel': {\n    fontSize: \"1rem\"\n  }\n})\n\nfunction SliderView(props: {\n  slider: SliderOpt, onChange: (n: number) => void}) {\n  let { slider } = props\n  let classes = useStyles()\n  const handleChange = (_: any, newValue: number|number[]) => {\n      let v = Array.isArray(newValue) ? newValue[0] : newValue\n      if ((slider.l - 1<= v && v <= slider.r))\n        props.onChange(v)\n  }\n  let label = slider.label\n  let marks = React.useMemo(() => {\n    let obj = [{value: slider.l - 1, label: \"Any\"}]\n    for (let i = slider.l; i <= slider.r; i++) {\n      let suffix = \"\"\n      if (i === slider.l && slider.extend_l) suffix = \"-\";\n      if (i === slider.r && slider.extend_r) suffix = \"+\";\n      obj.push({value: i, label: i.toString() + suffix})\n    }\n    return obj\n  }, [slider.l, slider.r, slider.extend_l, slider.extend_r])\n  return (\n  <Box>\n    <FormLabel component=\"legend\" className={classes.selectLabel} >Level</FormLabel>\n    <Box paddingX={5}>\n      <LevelSlider\n      marks={marks}\n      track={false}\n      min={slider.l - 1}\n      max={slider.r}\n      value={slider.value}\n      onChange={handleChange}\n      onFocus={(evt) => evt.target.blur()}\n      style={{fontSize: \"1.2rem\"}}\n      />\n    </Box>\n  </Box>)\n}\n\nfunction SliderSelect(props: {state: AppState, dispatch: React.Dispatch<Action>,\n  select: string}) {\n    let sliderName = props.select\n    let sliderOpt = (props.state.config as any)[sliderName] as SliderOpt\n    return <SliderView\n      slider={(props.state.config as any)[sliderName] as SliderOpt}\n      onChange={(n: number) => {\n        props.dispatch( { type: \"config\",\n         content: { [sliderName]: ({...sliderOpt, value:n }) }\n        } )\n      }}\n    />\n}\n\n\nfunction SingleSelect(props: {state: AppState, dispatch: React.Dispatch<Action>,\n    select: string, label?: string}) {\n  let { state, dispatch, select } = props\n  let { config } = state\n  let sel = (config as any)[select] as Selector\n  let classes = useStyles()\n\n  const handleChange = (evt: { target: { value: string; }; }) => {\n    let { names } = sel\n    let n = names.length\n    let new_flags = Array(n).fill(0)\n\n    for (let i = 0; i < names.length; i++) {\n      if (names[i] === evt.target.value) {\n        new_flags[i] = 1\n      }\n    }\n    dispatch( { type: \"config\", content: {[select]: sel.setFlags(new_flags) } } )\n  }\n\n  let radioValue = function() {\n    let { names, flags } = sel\n    for (let i = 0; i < flags.length; i++) {\n      if (flags[i] === 1) return names[i]\n    }\n    return \"\"\n  }()\n\n\n  let label = sel.label || props.label || \"\"\n  return (\n  <FormControl component=\"fieldset\" className={classes.select}>\n    <FormLabel component=\"legend\" className={classes.selectLabel} >\n      {label}\n    </FormLabel>\n    {/* {sel.annotation ? <Box> <CustomTooltip title={sel.annotation}>\n        <IconButton>\n          <HelpOutlineIcon sx={{ fontSize: 30 }}/>\n        </IconButton>\n      </CustomTooltip> </Box> : null} */}\n    <RadioGroup aria-label=\"position\" name=\"position\" value={radioValue} onChange={handleChange} row>\n      {\n        sel.names.map(name => (\n          <FormControlLabel\n            key={name}\n            value={name}\n            control={<Radio color=\"primary\" />}\n            label={name}\n            labelPlacement=\"end\"\n          />\n        ))\n      }\n    </RadioGroup>\n  </FormControl>)\n}\n\n\n\ntype MultiSelectOptions = {\n  label?: string, noDialog?: boolean,\n  manipulators?: {name: string, enableIdx: number[]}[]\n}\n\n\nfunction MultiSelectContent(props: {state: AppState, dispatch: React.Dispatch<Action>, select: string, options?: MultiSelectOptions }) {\n  let { state, dispatch, select, options } = props\n  options = options || {}\n  let { config } = state\n\n  let sel = (config as any)[select] as Selector\n  const handleChange = (evt: { target: { value: string; checked: boolean }; }) => {\n    let { names, flags } = sel\n    let new_flags = [...flags]\n\n    for (let i = 0; i < names.length; i++) {\n      if (names[i] === evt.target.value) {\n        new_flags[i] = (evt.target.checked)? 1 : 0\n      }\n    }\n    dispatch( { type: \"config\", content: {[select]: sel.setFlags(new_flags) } } )\n  }\n\n  let makeBox = (name: string, checked: boolean) => {\n    return (\n    <FormControlLabel\n        control={\n        <Checkbox color=\"primary\" checked={checked} onChange={handleChange} />\n        }\n        label={name}\n        key={name}\n        value={name}\n    />)\n  }\n\n  const [manipChecked, setManipChecked] = React.useState< { [ name: string ]: boolean } >({})\n  let label = sel.label || options.label || \"\"\n  let makeManipulator = (manip: {name: string, enableIdx: number[]}) => {\n    let {name, enableIdx} = manip\n    let handleChange = (evt: { target: { value: string; checked: boolean }; }) => {\n      setManipChecked( {...manipChecked, [name] : evt.target.checked } )\n      let fillValue = (evt.target.checked);\n      let { flags } = sel\n      let new_flags = [...flags]\n      for (let i of enableIdx) {\n        new_flags[i] = fillValue ? 1 : 0;\n      }\n      dispatch( { type: \"config\", content: {[select]: sel.setFlags(new_flags) } } )\n    }\n    return (\n      <FormControlLabel\n      control={\n      <Checkbox color=\"primary\" checked={manipChecked[name]} onChange={handleChange} />\n      }\n      label={name}\n      key={name}\n      value={name}\n      />)\n  }\n  let manipulator_row = options.manipulators ?\n    (<FormGroup row>\n    {options.manipulators.map(x => makeManipulator(x)) }\n    </FormGroup>) : null;\n  const content = (\n    <React.Fragment>\n      {manipulator_row}\n      <FormGroup row>\n      {sel.names.map( (name, i) => makeBox(name, !!sel.flags[i]))}\n      </FormGroup>\n    </React.Fragment>\n  )\n  return {label, content}\n}\n\nfunction MultiSelect(props: {state: AppState, dispatch: React.Dispatch<Action>, select: string, options?: MultiSelectOptions }) {\n  let { state, dispatch, select, options } = props\n  let {label, content} = MultiSelectContent({state, dispatch, select, options})\n  options = options || {}\n\n  const [open, setOpen] = React.useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  }\n  let classes = useStyles()\n\n  if (options.noDialog)\n  return (\n    <FormControl component=\"fieldset\" className={`${classes.select} multi-select`}>\n      <FormLabel component=\"legend\"className={classes.selectLabel} >{label}</FormLabel>\n      {content}\n    </FormControl>\n  )\n\n  return (\n  <Box className=\"multi-select\">\n    <FormLabel component=\"legend\">{label}</FormLabel>\n    <Box height={8}/>\n    <Button color=\"primary\" variant=\"outlined\" style={{borderWidth: 2}} onClick={handleClickOpen}>\n    <SettingsIcon fontSize=\"small\" color=\"primary\" style={{marginLeft: -6, marginRight: 3}}></SettingsIcon>\n      Edit\n    </Button>\n    <Box height={8}/>\n    <Dialog disableEscapeKeyDown open={open} onClose={handleClose}>\n      <DialogTitle> {label} </DialogTitle>\n      <DialogContent>\n        {content}\n      </DialogContent>\n      <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Ok\n          </Button>\n      </DialogActions>\n    </Dialog>\n  </Box>\n  )\n}\n\n\nexport { SingleSelect, MultiSelectContent, MultiSelect, SliderSelect }","import React, { Fragment } from 'react'\n\nimport {\n    TextField,\n    Divider,\n    Button, Box,\n    FormLabel, Dialog, DialogTitle, DialogContent, DialogActions\n} from '@mui/material';\n\nimport SettingsIcon from '@mui/icons-material/Settings';\n\nimport { AppState, Action } from '../Types';\nimport { Config } from '../Config';\nimport { ColorScheme } from '../lib/CubeLib';\n\nimport { MultiSelectContent } from './SelectorViews';\n\nexport function ColorSetter(props: {state: AppState, dispatch: React.Dispatch<Action>}) {\n    const [text, setText] = React.useState(props.state.colorScheme.toUserInput().join(\",\"))\n    const handleChange = (event: any) => setText(event.target.value);\n    const handleClick = () => {\n        let arr = text.split(\",\")\n        props.dispatch({\n            type: \"colorScheme\",\n            content: arr.length === 7? arr : ColorScheme.default_colors\n        })\n    }\n    return (\n        <Fragment>\n        <Box>\n        <TextField\n            label=\"Color\"\n            helperText=\"G,B,R,O,Y,W,Gray\"\n            onChange={handleChange}\n            fullWidth\n            value={text}\n        /></Box>\n\n        <Box>\n        <Button variant=\"outlined\" size=\"medium\" color=\"primary\" onClick={handleClick} >\n            Set color\n        </Button>\n        </Box>\n        </Fragment>\n    )\n}\n\nexport function ColorPanel(props: {state: AppState, dispatch: React.Dispatch<Action>}) {\n    let { state, dispatch } = props\n    let select = \"orientationSelector\"\n    let {content} = MultiSelectContent({state, dispatch, select})\n\n    const [open, setOpen] = React.useState(false);\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n    const handleClose = (e: any, reason: string) => {\n      if (reason === \"backdropClick\")\n        setOpen(false);\n    }\n    return (\n        <div className=\"color-panel\">\n        <FormLabel component=\"legend\">Orientation and Color Scheme</FormLabel>\n        <Box height={8}/>\n        <Button color=\"primary\" variant=\"outlined\" style={{borderWidth: 2}} onClick={handleClickOpen}>\n        <SettingsIcon fontSize=\"small\" color=\"primary\" style={{marginLeft: -6, marginRight: 3}}></SettingsIcon>\n          Edit\n        </Button>\n        <Box height={8}/>\n        <Dialog disableEscapeKeyDown open={open} onClose={handleClose}>\n          <DialogTitle> Set Orientation (U-F) and Color Scheme  </DialogTitle>\n          <DialogContent>\n            {content}\n            <Box height={20}/>\n                <Divider />\n            <Box height={20}/>\n            <ColorSetter {...{state, dispatch}}/>\n\n          </DialogContent>\n          <DialogActions>\n              <Button onClick={() => setOpen(false)} color=\"primary\">\n                  Close\n              </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n}","import React, { useEffect } from 'react'\nimport * as SRVisualizer from 'sr-visualizer'\nimport { MoveSeq } from '../lib/CubeLib'\nimport {Face as VFace} from 'sr-visualizer'\n\n\nfunction CaseVisualizer(props: {name: string, alg: string,size: number, mask?: string, color?: string[], cubeOptions: Partial<SRVisualizer.CubeOptions>}) {\n  const mount = React.useRef<HTMLDivElement | null>(null)\n  useEffect( () => {\n    let dom = mount.current\n    if (dom) {\n      const args = {\n        width: props.size,\n\t      height: props.size,\n        view: 'plan',\n\t      algorithm: new MoveSeq(props.alg).inv().toString(),\n        mask: props.mask as SRVisualizer.Masking,\n        ...props.cubeOptions\n      }\n      const color = props.color\n      if (color) {\n        // map our scheme (UDFBLR) to theirs (URFDLB)\n        args.colorScheme = [\n          color[0],\n          color[5],\n          color[2],\n          color[1],\n          color[4],\n          color[3],\n        ]\n      }\n      SRVisualizer.cubeSVG(dom, args)\n    }\n    return () => {\n      if (dom) dom.innerHTML = \"\"\n    }\n  })\n  return (<div ref={mount}>\n  </div>)\n}\n\nexport default CaseVisualizer;","import React from 'react';\nimport { FormLabel, Box, Button, Dialog, DialogTitle, DialogContent, DialogActions, FormControl } from '@mui/material';\nimport SettingsIcon from '@mui/icons-material/Settings';\n\nexport interface DialogProps {\n  label: string,\n  title?: string,\n}\nexport interface DialogOptions {\n  fullWidth? : boolean\n}\nconst defaultOptions = {\n  fullWidth: false\n}\n\nconst makeDialog = <P extends object>(\n  Component: React.ComponentType<P>, options?: DialogOptions\n) => (function DialogView(props: P & DialogProps) {\n  options = options || defaultOptions\n  const title = props.title || props.label\n  const [open, setOpen] = React.useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  }\n\n  return (\n  <Box>\n    <FormLabel component=\"legend\">{props.label}</FormLabel>\n    <Box height={8}/>\n    <Button color=\"primary\" variant=\"outlined\" style={{borderWidth: 2}} onClick={handleClickOpen}>\n      <SettingsIcon fontSize=\"small\" color=\"primary\" style={{marginLeft: -6, marginRight: 3}}></SettingsIcon>\n        {\"SELECT\"}\n    </Button>\n    <Box height={8}/>\n\n\n    <Dialog disableEscapeKeyDown open={open} onClose={handleClose} maxWidth=\"md\" style={{marginLeft: 10,marginRight: 10}}>\n      <DialogTitle> {title} </DialogTitle>\n      <DialogContent >\n        <Box paddingLeft={1}>\n          <Component {...props}/>\n        </Box>\n      </DialogContent>\n      <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" size=\"large\" >\n            {\"CLOSE\" }\n          </Button>\n      </DialogActions>\n    </Dialog>\n    </Box>\n  )\n\n})\n\nexport {makeDialog}","import { red } from '@mui/material/colors';\nimport { createTheme, adaptV4Theme } from '@mui/material/styles';\n\n// A custom theme for this app\nconst components = {\n  components: {\n    MuiSlider: {\n      styleOverrides: {\n        root: {\n          height: 100\n        },\n        track: {\n          height: 100\n        }\n      }\n      \n    }\n  }\n}\nconst theme = createTheme(adaptV4Theme({\n  name: \"bright\",\n  palette: {\n    primary: {\n      main: '#556cd6',// '#e0e8ff'//b0c4ee', //\n    },\n    secondary: {\n      main: '#d32f2f',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#eeeeef',\n      paper: '#fff'\n    },\n    text: {\n      primary: '#000',\n      secondary: '#888',\n      disabled: '#556cd6'\n    }\n  },\n  ...components\n  /*\n  typography: {\n    \"fontFamily\": `\"Public Sans\", \"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n    \"fontSize\": 14,\n    \"fontWeightLight\": 400,\n    \"fontWeightRegular\": 500,\n    \"fontWeightMedium\": 600\n  }\n  */\n\n}));\nconst themeDark = createTheme(adaptV4Theme({\n  name: \"dark\",\n  palette: {\n    primary: {\n      main: '#9FA4C2', // '#757575',\n    },\n    secondary: {\n      main: '#ffffff', //f55057',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#121212',\n      paper: '#252525' //#424242'\n    },\n    text: {\n      primary: '#fff',\n      secondary: '#ddd',\n      disabled: '#eee'\n    }\n  },\n  overrides: {\n    // Style sheet name ⚛️\n    MuiDivider: {\n      // Name of the rule\n      // Some CSS\n      root: {\n        backgroundColor: 'rgba(255, 255 ,255, 0.3)',\n      }\n    },\n  },\n  ...components\n\n}));\n\nexport { theme, themeDark };","import Grid from '@mui/material/Grid'\nimport Box from '@mui/material/Box'\nimport React from 'react'\nimport CaseVisualizer from './CaseVisualizer'\n\nimport { AppState, Action } from \"../Types\";\nimport { makeDialog } from './Dialog';\nimport SRVisualizer from 'sr-visualizer';\n\nimport { Button, ButtonGroup, Divider, Typography, useMediaQuery } from '@mui/material';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Selector from '../lib/Selector';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport { theme } from '../theme';\n\ntype CaseSelectSettings = {\n  selector: string,\n  algs: [string, string][],\n  groups: string[],\n  cubeOptions?: Partial<SRVisualizer.CubeOptions>,\n  visualizeMask: string\n}\n\nfunction splitAlgIntoGroups(algs: [string, string][], groups: string[], flags: number[]) {\n  const algGroups : { [k: string] : [[string, string], number][] }= Object.fromEntries(groups.map(g => [g, []]))\n  algs.forEach((alg, i) => {\n    const prefix = alg[0].split(\"_\", 1)[0]\n    if (prefix in algGroups)\n      algGroups[prefix].push([alg, i])\n  })\n  return algGroups\n}\n\nconst useStyles = makeStyles(theme => {\n  let is_bright = theme.palette.primary.main === '#556cd6'\n  return ({\n    caseBoxOn: {\n      backgroundColor: is_bright ? '#bdedff' : theme.palette.primary.main,\n    },\n    groupBox: {\n    }\n  })\n})\n\nfunction CaseSelectContent(props: { state: AppState, dispatch: React.Dispatch<Action>, settings: CaseSelectSettings }) {\n  let { selector, groups, algs, visualizeMask } = props.settings\n  const sel = (props.state.config as any)[selector] as Selector\n  const algGroups = splitAlgIntoGroups(algs, groups, sel.flags)\n  const handleSelectGroup = (groupname: string, value: number) => () => {\n    const newFlags = [...sel.flags]\n    algGroups[groupname].forEach( ([alg, i]) => {\n      newFlags[i] = value\n    })\n    props.dispatch({ type: \"config\", content: {[selector]: sel.setFlags(newFlags) } } )\n  }\n  const handleSelectCase = (caseIdx: number) => () => {\n    const newFlags = [...sel.flags]\n    newFlags[caseIdx] = (newFlags[caseIdx] === 0) ? 1 : 0\n    props.dispatch({ type: \"config\", content: {[selector]: sel.setFlags(newFlags) } } )\n  }\n  const handleSelectAll = (value: number) => () => {\n    const newFlags = Array(sel.flags.length).fill(value)\n    props.dispatch({ type: \"config\", content: {[selector]: sel.setFlags(newFlags)}})\n  }\n  const classes = useStyles()\n  const gt_sm = useMediaQuery(theme.breakpoints.up('sm'));\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" marginRight={10}>\n      <Box marginBottom={3}>\n        <ButtonGroup color=\"primary\" style={{height: \"2rem\"}}>\n          <Button onClick={handleSelectAll(1)}\n            startIcon={<CheckCircleIcon/>}>Select All</Button>\n          <Button onClick={handleSelectAll(0)}\n            startIcon={<CancelIcon/>}>Deselect All</Button>\n        </ButtonGroup>\n      </Box>\n      {groups.map((groupname, i) => (\n        <Box display=\"flex\" flexDirection={gt_sm ? \"row\" : \"column\"} key={i} className={classes.groupBox} marginBottom={2}>\n          <Box display=\"flex\" flexDirection={gt_sm ? \"column\" : \"row\"} marginRight={4} >\n\n            <Box marginRight={2}>\n            <Typography variant=\"h5\" gutterBottom>\n              {groupname[0].toUpperCase() + groupname.substr(1)}\n            </Typography>\n            </Box>\n            <Box display=\"flex\" alignItems=\"center\">\n              <ButtonGroup color=\"primary\" variant=\"contained\" aria-label=\"outlined primary button group\" style={{height: \"3.7rem\"}}>\n                <Button onClick={handleSelectGroup(groupname, 1)}\n                  startIcon={<CheckCircleIcon/>}></Button>\n                <Button  variant=\"outlined\" onClick={handleSelectGroup(groupname, 0)}\n                  startIcon={<CancelIcon/>}></Button>\n              </ButtonGroup>\n            </Box>\n          </Box>\n          <Box display=\"flex\" flexDirection=\"row\" flexWrap=\"wrap\">\n          {\n            algGroups[groupname].map( ([[name, alg], idx]) =>\n              <Box border={1} borderColor=\"primary.main\"\n                key={name}\n                onClick={handleSelectCase(idx)}\n                style={{transition: \"all .3s ease\" }}\n                className={sel.flags[idx] ? classes.caseBoxOn : \"\"}>\n                <CaseVisualizer\n                  name={name}\n                  size={100}\n                  alg={alg}\n                  mask={visualizeMask}\n                  cubeOptions={props.settings.cubeOptions || {}}\n                />\n              </Box>\n            )\n          }\n          </Box>\n          <Divider></Divider>\n        </Box>\n      ))}\n    </Box>\n  )\n}\n\nconst CaseSelectDialog = makeDialog(CaseSelectContent) // {fullWidth: true})\n\nexport default CaseSelectDialog;","import { Cases } from \"@mui/icons-material\";\nimport Selector from \"../lib/Selector\";\nimport { rand_choice } from \"./Math\";\n\nconst get_active_names = (sel : Selector) => {\n    let res = []\n    for (let i = 0; i < sel.names.length; i++) {\n        if (sel.flags[i]) {\n            res.push(sel.names[i]);\n        }\n    }\n    return res\n}\n\nexport type CaseDesc = {\n    id: string,\n    algs: string[],\n    setup?: string,\n    kind: string\n}\n\nexport let createAlg = (id: string, alg: string, kind:string, setup?: string) : CaseDesc => ({\n    id, algs:[alg], kind, setup\n})\n\nconst empty_alg = createAlg(\"empty\", \"\", \"any\")\n\nexport const cmll_algs_raw : [string,string][] = [\n    [\"o_adjacent_swap\", \"R U R' F' R U R' U' R' F R2 U' R'\"],\n    [\"o_diagonal_swap\", \"F R U' R' U' R U R' F' R U R' U' R' F R F'\"],\n    [\"h_columns\", \"U' R U R' U R U' R' U R U2 R'\"],\n    [\"h_rows\", \"F R U R' U' R U R' U' R U R' U' F'\"],\n    [\"h_column\", \"U' R U2' R2' F R F' U2 R' F R F'\"],\n    [\"h_row\", \"r U' r2' D' r U' r' D r2 U r'\"],\n    [\"pi_right_bar\", \"F R U R' U' R U R' U' F'\"],\n    [\"pi_back_slash\", \"U F R' F' R U2 R U' R' U R U2' R'\"],\n    [\"pi_x_checkerboard\", \"U' R' F R U F U' R U R' U' F'\"],\n    [\"pi_forward_slash\", \"R U2 R' U' R U R' U2' R' F R F'\"],\n    [\"pi_columns\", \"U' r U' r2' D' r U r' D r2 U r'\"],\n    [\"pi_left_bar\", \"U' R' U' R' F R F' R U' R' U2 R\"],\n    [\"u_forward_slash\", \"U2 R2 D R' U2 R D' R' U2 R'\"],\n    [\"u_back_slash\", \"R2' D' R U2 R' D R U2 R\"],\n    [\"u_front_row\", \"R' U' R U' R' U2 R2 U R' U R U2 R'\"],\n    [\"u_rows\", \"U' F R2 D R' U R D' R2' U' F'\"],\n    [\"u_x_checkerboard\", \"U2 r U' r' U r' D' r U' r' D r\"],\n    [\"u_back_row\", \"U' F R U R' U' F'\"],\n    [\"t_left_bar\", \"U' R U R' U' R' F R F'\"],\n    [\"t_right_bar\", \"U L' U' L U L F' L' F\"],\n    [\"t_rows\", \"R U2 R' U' R U' R2' U2' R U R' U R\"],\n    [\"t_front_row\", \"r' U r U2' R2' F R F' R\"],\n    [\"t_back_row\", \"r' D' r U r' D r U' r U r'\"],\n    [\"t_columns\", \"U2 r2' D' r U r' D r2 U' r' U' r\"],\n    [\"s_left_bar\", \"R U R' U R U2 R'\"],\n    [\"s_x_checkerboard\", \"L' U2 L U2' L F' L' F\"],\n    [\"s_forward_slash\", \"F R' F' R U2 R U2' R'\"],\n    [\"s_columns\", \"R U R' U' R' F R F' R U R' U R U2' R'\"],\n    [\"s_right_bar\", \"U2' R U R' U R' F R F' R U2' R'\"],\n    [\"s_back_slash\", \"R U' L' U R' U' L\"],\n    [\"as_right_bar\", \"U' R U2' R' U' R U' R'\"],\n    [\"as_columns\", \"R2 D R' U R D' R' U R' U' R U' R'\"],\n    [\"as_back_slash\", \"F' r U r' U2' r' F2 r\"],\n    [\"as_x_checkerboard\", \"R U2' R' U2' R' F R F'\"],\n    [\"as_forward_slash\", \"L' U R U' L U R'\"],\n    [\"as_left_bar\", \"U2' R U2' R' F R' F' R U' R U' R'\"],\n    [\"l_mirror\", \"F R U' R' U' R U R' F'\"],\n    [\"l_inverse\", \"F R' F' R U R U' R'\"],\n    [\"l_pure\", \"U2 R U R' U R U' R' U R U' R' U R U2' R'\"],\n    [\"l_front_commutator\", \"R U2 R D R' U2 R D' R2'\"],\n    [\"l_diag\", \"U2 R' U' R U R' F' R U R' U' R' F R2\"],\n    [\"l_back_commutator\", \"U' R' U2 R' D' R U2 R' D R2\"],\n    [\"solved\", \"\"] // needed for nmcll mapping\n]\n// my 2h algs\nexport const cmll_algs_raw_custom : [string,string][] = [\n    [\"o_adjacent_swap\", \"R U R' F' R U R' U' R' F R2 U' R'\"],\n    [\"o_diagonal_swap\", \"F R U' R' U' R U R' F' R U R' U' R' F R F'\"],\n    [\"h_columns\", \"U' R U R' U R U' R' U R U2 R'\"],\n    [\"h_rows\", \"F R U R' U' R U R' U' R U R' U' F'\"],\n    [\"h_column\", \"U' R U2' R2' F R F' U2 R' F R F'\"],\n    [\"h_row\", \"r U' r2' D' r U' r' D r2 U r'\"],\n    [\"pi_right_bar\", \"F R U R' U' R U R' U' F'\"],\n    [\"pi_back_slash\", \"U F R' F' R U2 R U' R' U R U2' R'\"],\n    [\"pi_x_checkerboard\", \"U' R' F R U F U' R U R' U' F'\"],\n    [\"pi_forward_slash\", \"R U2 R' U' R U R' U2' R' F R F'\"],\n    [\"pi_columns\", \"U' r U' r2' D' r U r' D r2 U r'\"],\n    [\"pi_left_bar\", \"U' R' U' R' F R F' R U' R' U2 R\"],\n    [\"u_forward_slash\", \"U2 R2 D R' U2 R D' R' U2 R'\"],\n    [\"u_back_slash\", \"R2' D' R U2 R' D R U2 R\"],\n    [\"u_front_row\", \"R' U' R U' R' U2 R2 U R' U R U2 R'\"],\n    [\"u_rows\", \"U' F R2 D R' U R D' R2' U' F'\"],\n    [\"u_x_checkerboard\", \"U2 r U' r' U r' D' r U' r' D r\"],\n    [\"u_back_row\", \"U' F R U R' U' F'\"],\n    [\"t_left_bar\", \"U' R U R' U' R' F R F'\"],\n    [\"t_right_bar\", \"U L' U' L U L F' L' F\"],\n    [\"t_rows\", \"R U2 R' U' R U' R2' U2' R U R' U R\"],\n    [\"t_front_row\", \"r' U r U2' R2' F R F' R\"],\n    [\"t_back_row\", \"r' D' r U r' D r U' r U r'\"],\n    [\"t_columns\", \"U2 r2' D' r U r' D r2 U' r' U' r\"],\n    [\"s_left_bar\", \"R U R' U R U2 R'\"],\n    [\"s_x_checkerboard\", \"L' U2 L U2' L F' L' F\"],\n    [\"s_forward_slash\", \"F R' F' R U2 R U2' R'\"],\n    [\"s_columns\", \"R U R' U' R' F R F' R U R' U R U2' R'\"],\n    [\"s_right_bar\", \"U2' R U R' U R' F R F' R U2' R'\"],\n    [\"s_back_slash\", \"R U' L' U R' U' L\"],\n    [\"as_right_bar\", \"U' R U2' R' U' R U' R'\"],\n    [\"as_columns\", \"R' F R F' U r' D' r U' r' D r\"],\n    [\"as_back_slash\", \"F' r U r' U2' r' F2 r\"],\n    [\"as_x_checkerboard\", \"R U2' R' U2' R' F R F'\"],\n    [\"as_forward_slash\", \"L' U R U' L U R'\"],\n    [\"as_left_bar\", \"U2' R U2' R' F R' F' R U' R U' R'\"],\n    [\"l_mirror\", \"F R U' R' U' R U R' F'\"],\n    [\"l_inverse\", \"F R' F' R U R U' R'\"],\n    [\"l_pure\", \"U2 R U R' U R U' R' U R U' R' U R U2' R'\"],\n    [\"l_front_commutator\", \"R U2 R D R' U2 R D' R2'\"],\n    [\"l_diag\", \"U2 R' U' R U R' F' R U R' U' R' F R2\"],\n    [\"l_back_commutator\", \"U' R' U2 R' D' R U2 R' D R2\"],\n    [\"solved\", \"\"] // needed for nmcll mapping\n]\n\nexport const ollcp_algs_raw : [string,string][] = [\n    [\"34_T_1\" , \"R' U' R U' R' U F R U' R' U2 R U R' F' R\"],\n    [\"34_T_2\" , \"R' U' R' F R F' R U' R' U R U' R' U2 R\"],\n    [\"34_T_3\" , \"F R F' r U r' U R' U' r U' r'\"],\n    [\"34_T_4\" , \"F' U' F U r U R' U' M\"],\n    [\"34_T_5\" , \"R U' R' F R U R' U' R U R' U' F' U R U' R'\"],\n    [\"34_T_6\" , \"R U R2 U' R' F R U R U' F'\"],\n    [\"39_L_1\" , \"R U R' U R U2' R2 U' F U R U' R' F' R\"],\n    [\"39_L_2\" , \"F R U R' U' F' R' U' R U' R' U2 R\"],\n    [\"39_L_3\" , \"R U' r' U' F' U F r R'\"],\n    [\"39_L_4\" , \"r U R U' r' F U R' U' F'\"],\n    [\"39_L_5\" , \"R U2 R' U' R U R' F2 r U r' F\"],\n    [\"39_L_6\" , \"R' U' R U' R U R' U' R' U2 F R F'\"],\n    [\"45_U_1\" , \"R U R' U' R' F R2 U' R' U' R U2 R' U' F'\"],\n    [\"45_U_2\" , \"F R U R' U' F'\"],\n    [\"45_U_3\" , \"R' U' R F R' U R U' R U R' U' F'\"],\n    [\"45_U_4\" , \"R' F R U R' U' F' U R2 U2 R' U' R U' R'  \"],\n    [\"45_U_5\" , \"R' U' R U' R' U2 R r U R' U R U2 r'\"],\n    [\"45_U_6\" , \"R' U2 R U2 F R U R' U' R' U R U' F'\"],\n    [\"51_Pi_1\", \"R' U2 R U2 R U R' U' R' F R F' R' U R\"],\n    [\"51_Pi_2\", \"R' U' R' F R F' R U' R' U2 R\"],\n    [\"51_Pi_3\", \"R U2 R' U2 R' F R2 U R' U' F'\"],\n    [\"51_Pi_4\", \"R U R' U R U' R' F' U F R U R' U' R U' R'\"],\n    [\"51_Pi_5\", \"f R U R' U' R U R' U' f'\"],\n    [\"51_Pi_6\", \"R' U2 R U2 F R U R' U' F' R' U R\"],\n    [\"56_H_1\" , \"F R U R' U' R F' r U R' U' r'\"],\n    [\"56_H_2\" , \"f U R U' R' U R U' R' S' U R U' R' F'\"],\n    [\"56_H_3\" , \"r U R' U R U r' U' r U r' F' U F\"],\n    [\"56_H_4\" , \"r' U' r U' R' U R U' R' U R r' U r\"],\n    [\"13_S_1\" , \"F U R U2 R' U' R U R' F'\"],\n    [\"13_S_2\" , \"R' U2 R U R' U R U' f R U R' U' f'\"],\n    [\"13_S_3\" , \"R U R' U' R' F R F' R U R' U R U2 R'\"],\n    [\"13_S_4\" , \"r U' r' U' r U r' F' U F\"],\n    [\"13_S_5\" , \"R' U' r U' R' U' R U r' U' R U' R' U' R\"],\n    [\"13_S_6\" , \"F U R U' R2 F' R U R U' R'\"],\n    [\"14_AS_1\", \"U F R U' R' U R U R' F' R U2 R' U' R U' R'\"],\n    [\"14_AS_2\", \"R U R' U R U' R' U R' F R F' R U2 R'\"],\n    [\"14_AS_3\", \"U2 R' U' R F U R U' R' F' U' R' U R\"],\n    [\"14_AS_4\", \"U R' U R U' M' F U R' U' R F' M\"],\n    [\"14_AS_5\", \"U' R U R' U r' U' R2 U' R2 U2 r\"],\n    [\"14_AS_6\", \"U' R U2 R' U2 R U' R' F' U' F R U R'\"],\n]\n\nexport const nmcll_to_cmll_mapping : [string, [string, string][]][] = [\n    [\"o_1\",\n       [[\"h_rows\", \"\"],\n        [\"pi_columns\", \"\"],\n        [\"h_columns\", \"\"],\n       ]\n    ],\n    [\"o_2\",\n        [[\"pi_x_checkerboard\", \"U\"]],\n    ],\n    [\"s_1\", [\n        [\"as_right_bar\", \"U\"],\n        [\"t_right_bar\", \"U\"],\n        [\"l_diag\",\"U\"],\n        [\"as_forward_slash\", \"U\"]\n    ]],\n    [\"s_2\", [\n        [\"u_forward_slash\", \"U\"],\n        [\"as_left_bar\", \"U\"],\n        [\"l_pure\", \"\"],\n        [\"as_x_checkerboard\", \"U\"]\n    ]],\n    [\"s_3\", [\n        [\"u_back_slash\", \"U\"],\n        [\"t_left_bar\", \"\"],\n        [\"as_back_slash\", \"U\"],\n        [\"as_columns\", \"\"]\n    ]],\n    [\"as_1\", [\n        [\"t_left_bar\", \"U\"],\n        [\"s_left_bar\", \"\"],\n        [\"l_diag\", \"\"],\n        [\"s_back_slash\", \"U\"]\n    ]],\n    [\"as_2\", [\n        [\"u_back_slash\", \"\"],\n        [\"s_right_bar\", \"U\"],\n        [\"l_pure\", \"U\"],\n        [\"s_x_checkerboard\", \"U\"]\n    ]],\n    [\"as_3\", [\n        [\"s_forward_slash\", \"U\"],\n        [\"t_right_bar\", \"\"],\n        [\"u_forward_slash\", \"\"],\n        [\"s_columns\", \"\"]\n    ]],\n    [\"t_1\", [\n        [\"u_back_row\", \"U\"],\n        [\"t_back_row\", \"\"],\n        [\"h_row\", \"\"],\n        [\"pi_right_bar\", \"U\"],\n    ]],\n    [\"t_2\", [\n        [\"u_front_row\", \"U\"],\n        [\"as_back_slash\", \"\"],\n        [\"s_forward_slash\", \"\"],\n        [\"pi_left_bar\", \"U\"]\n    ]],\n    [\"t_3\", [\n        [\"t_front_row\", \"U\"],\n        [\"as_forward_slash\", \"\"],\n        [\"s_back_slash\", \"\"],\n        [\"h_row\", \"U\"]\n    ]],\n    [\"u_1\", [\n        [\"u_rows\", \"\"],\n        [\"t_rows\", \"\"],\n        [\"pi_left_bar\", \"\"],\n        [\"h_column\", \"U\"],\n    ]],\n    [\"u_2\", [\n        [\"t_columns\", \"\"],\n        [\"s_columns\", \"U\"],\n        [\"as_columns\", \"U\"],\n        [\"pi_right_bar\", \"\"],\n    ]],\n    [\"u_3\", [\n        [\"u_x_checkerboard\", \"U\"],\n        [\"s_x_checkerboard\", \"\"],\n        [\"as_x_checkerboard\", \"\"],\n        [\"h_column\", \"\"],\n    ]],\n    [\"l_1\", [\n        [\"l_inverse\", \"\"],\n        [\"as_right_bar\", \"\"],\n        [\"s_right_bar\", \"\"],\n        [\"pi_forward_slash\", \"U\"],\n    ]],\n    [\"l_2\", [\n        [\"l_mirror\", \"\"],\n        [\"as_left_bar\", \"\"],\n        [\"s_left_bar\", \"U\"],\n        [\"pi_back_slash\", \"\"],\n    ]],\n    [\"l_3\", [\n        [\"l_back_commutator\", \"\"],\n        [\"l_front_commutator\", \"\"],\n        [\"pi_forward_slash\", \"\"],\n        [\"pi_back_slash\", \"U\"],\n    ]],\n    [\"pi_1\", [\n        [\"o_adjacent_swap\", \"\"],\n        [\"u_front_row\", \"\"],\n        [\"t_columns\", \"U\"],\n        [\"pi_x_checkerboard\", \"\"],\n    ]],\n    [\"pi_2\", [\n        [\"u_back_row\", \"\"],\n        [\"l_front_commutator\", \"U\"],\n        [\"l_back_commutator\", \"U\"],\n        [\"t_rows\", \"U\"],\n    ]],\n    [\"pi_3\", [\n        [\"o_adjacent_swap\", \"U\"],\n        [\"l_mirror\", \"U\"],\n        [\"l_inverse\", \"U\"],\n        [\"pi_columns\", \"U\"],\n    ]],\n    [\"h_1\", [\n        [\"solved\", \"U\"],\n        [\"t_front_row\", \"\"],\n        [\"h_rows\", \"U\"]\n    ]],\n    [\"h_2\", [\n        [\"o_diagonal_swap\", \"U\"],\n        [\"u_x_checkerboard\", \"\"],\n        [\"h_columns\", \"U\"]\n    ]],\n    [\"h_3\", [\n        [\"u_rows\", \"U\"],\n        [\"t_back_row\", \"U\"]\n    ]]\n]\n\nconst cmll_algs_raw_lookup = Object.fromEntries(cmll_algs_raw)\nconst nmcll_algs: CaseDesc[] = nmcll_to_cmll_mapping.map(([group_name, cases]) => {\n        return cases.map(([cmll_name, parity]) =>\n        [`nmcll-${group_name}-${cmll_name}`, cmll_algs_raw_lookup[cmll_name] + \" \" + parity])\n    }).flat().map( ([x, y]) => createAlg(x, y, \"nmcll\"))\n\nexport const nmcll_display_parity : [string, string, string][] = [\n [\"o_1\", \"U\", \"\"],\n [\"o_2\", \"\", \"\"],\n [\"s_1\", \"\", \"U\"],\n [\"s_2\", \"U\", \"U\"],\n [\"s_3\", \"\", \"U\"],\n [\"as_1\",\"\", \"U2\"],\n [\"as_2\",\"U\", \"U'\"],\n [\"as_3\",\"\", \"\"],\n [\"t_1\", \"\", \"U2\"],\n [\"t_2\", \"\", \"U2\"],\n [\"t_3\", \"\", \"U2\"],\n [\"u_1\", \"U\", \"U2\"],\n [\"u_2\", \"U\", \"U2\"],\n [\"u_3\", \"\", \"U2\"],\n [\"l_1\", \"U\", \"\"],\n [\"l_2\", \"U\", \"U2\"],\n [\"h_3\", \"\", \"\"],\n [\"pi_1\",\"\", \"U2\"],\n [\"pi_2\",\"U\", \"U'\"],\n [\"pi_3\",\"\", \"U2\"],\n [\"l_3\", \"U\", \"\"],\n [\"h_1\", \"\", \"\"],\n [\"h_2\", \"\", \"\"],\n]\nconst cmll_algs : CaseDesc[] = cmll_algs_raw.map( ([x, y]) => createAlg(x, y, \"cmll\"))\n\nlet trigger_algs: CaseDesc[] = [\n    createAlg(\"RUR'_1\", \"R U R'\", \"trigger\"),\n    createAlg(\"RUR'_2\", \"r U r'\", \"trigger\"),\n    createAlg(\"RU'R'_1\", \"R U' R'\", \"trigger\"),\n    createAlg(\"RU'R'_2\", \"r U' r'\", \"trigger\"),\n    createAlg(\"R'U'R_1\", \"R' U' R\", \"trigger\"),\n    createAlg(\"R'U'R_2\", \"r' U' r\", \"trigger\"),\n    createAlg(\"R'UR_1\", \"R' U R\", \"trigger\"),\n    createAlg(\"R'UR_2\", \"r' U r\", \"trigger\"),\n    createAlg(\"RU2R'_1\", \"R U2 R'\", \"trigger\"),\n    createAlg(\"RU2R'_2\", \"r U2 r'\", \"trigger\"),\n    createAlg(\"R'U2R_1\", \"R' U2 R\", \"trigger\"),\n    createAlg(\"R'U2R_2\", \"r' U2 r\", \"trigger\"),\n]\n\nlet u_auf_algs: CaseDesc[] = [\n    createAlg(\"U\", \"U\", \"u_auf\"),\n    createAlg(\"U'\", \"U'\", \"u_auf\"),\n    createAlg(\"U2\", \"U2\", \"u_auf\"),\n    createAlg(\"None\", \"\", \"u_auf\"),\n]\n\nlet ori_algs: CaseDesc[] =\n    [\"WG\", \"WB\", \"WO\", \"WR\",\n    \"YG\", \"YB\", \"YO\", \"YR\",\n    \"BW\", \"BY\", \"BO\", \"BR\",\n    \"GW\", \"GY\", \"GO\", \"GR\",\n    \"OW\", \"OY\", \"OB\", \"OG\",\n    \"RW\", \"RY\", \"RB\", \"RG\"].map(s => createAlg(s, \"\", \"orientation\"))\n\nlet lookup_algset = (kind : string) => {\n    switch (kind) {\n        case \"cmll\":\n        case \"cmll_case\": return cmll_algs;\n        case \"nmcll\": return nmcll_algs;\n        case \"trigger\": return trigger_algs;\n        case \"orientation\": return ori_algs;\n        case \"u_auf\": return u_auf_algs;\n        default: return []\n    }\n}\n\nlet alg_generator_from_group = (selector: Selector) => {\n    let algSet = lookup_algset(selector.kind)\n    let lookup = new Set(selector.getActiveNames())\n    let get_prefix = (id: string) => {\n        return id.split(\"_\", 1)[0]\n    }\n    let algs : CaseDesc[] = (() => {\n        return algSet.filter(alg => {\n            let prefix = get_prefix(alg.id);\n            return lookup.has(prefix)\n        })\n    })()\n\n    let next = () => {\n        if (algs.length === 0) {\n            return empty_alg\n        } else {\n            return rand_choice(algs)\n        }\n    }\n    return next\n}\n\nlet alg_generator_from_cases_exact = (kind: string, activeNames: string[]) => {\n    let activeNamesSet = new Set(activeNames)\n    console.log(\"generating from active caes\", activeNamesSet)\n    let algs = lookup_algset(kind).filter(c => activeNamesSet.has(c.id) )\n    let next = () => {\n        if (algs.length === 0) {\n            return empty_alg\n        } else {\n            return rand_choice(algs)\n        }\n    }\n    return next\n}\n\nlet alg_generator_from_cases_contain = (kind: string, activeNames: string[]) => {\n    let activeNamesSet = new Set(activeNames)\n    console.log(\"generating from active caes\", activeNamesSet)\n    let algs = lookup_algset(kind).filter(c => activeNames.some(name => c.id.includes(name)) )\n    let next = () => {\n        if (algs.length === 0) {\n            return empty_alg\n        } else {\n            return rand_choice(algs)\n        }\n    }\n    return next\n}\n\nexport { alg_generator_from_group , alg_generator_from_cases_exact as alg_generator_from_cases, lookup_algset,\nalg_generator_from_cases_contain }","import React, { useEffect } from 'react'\n\nimport { Face, FaceletCubeT } from \"../lib/Defs\";\n\ntype Config = {\n    cube: FaceletCubeT, width: number, height: number, colorScheme: Array<string>,\n    theme: string,\n    facesToReveal?: Array<Face>\n}\n\nfunction draw2D(ctx: CanvasRenderingContext2D, props: Config) {\n    let { width, height, colorScheme} = props\n\n    ctx.clearRect(0, 0, width, height)\n    // size = size of cube\n    let size = Math.min(width, height)\n    let uSize = size * 0.5;\n    let uStickerSize = uSize / 3; // 0.2\n    const uStrokeWidth = uStickerSize * 0.10;\n    const sideStrokeWidth = uStickerSize * 0.10;\n    ctx.lineWidth = uStrokeWidth;\n\n    ctx.resetTransform()\n    let ratio = window.devicePixelRatio || 1;\n    ctx.scale(ratio, ratio)\n    ctx.translate((width - uSize) / 2, (size - uSize) / 2)\n    let sStickerHeight = uStickerSize * 0.33;\n    let sStickerOuterShift = uStickerSize * 0.1;\n    let sStickerInnerShift = uStickerSize * 0.038;\n    function drawSideSticker(idx: number, angle: number, sticker: number) {\n        ctx.save()\n        ctx.translate(uSize / 2, uSize / 2)\n        ctx.rotate(angle)\n        ctx.translate(-uSize / 2, -uSize / 2)\n        ctx.beginPath()\n\n        const leftShift  = (idx === 0) ? sStickerOuterShift : (idx === 1) ? sStickerInnerShift : -sStickerInnerShift;\n        const rightShift = (idx === 0) ? sStickerInnerShift : (idx === 1) ? -sStickerInnerShift : -sStickerOuterShift;\n        const topLeftX = idx * uStickerSize + leftShift\n        const topRightX = (idx + 1) * uStickerSize + rightShift\n        const topY = -sStickerHeight\n        const bottomLeftX = idx * uStickerSize\n        const bottomRightX = bottomLeftX + uStickerSize\n        const bottomY = 0\n\n        ctx.moveTo(topLeftX, topY)\n        ctx.lineTo(topRightX, topY)\n        ctx.lineTo(bottomRightX, bottomY)\n        ctx.lineTo(bottomLeftX, bottomY)\n        ctx.lineTo(topLeftX, topY)\n        ctx.closePath()\n        ctx.fillStyle = colorScheme[sticker]\n        ctx.fill()\n        ctx.stroke()\n        ctx.restore()\n    }\n    function drawUSticker(x: number, y:number, sticker:number) {\n        ctx.fillStyle = colorScheme[sticker]\n        ctx.fillRect(x, y, uStickerSize, uStickerSize)\n        ctx.strokeStyle = 'black'\n        ctx.strokeRect(x, y, uStickerSize, uStickerSize)\n    }\n\n    for (let i = 0 ;i < 3; i++) {\n        for (let j = 0; j < 3; j++) {\n            const sticker = props.cube[0][i * 3 + j]\n            drawUSticker(j * uStickerSize, i * uStickerSize, sticker)\n        }\n    }\n    // F=2,B=3,L=4,R=5\n    ctx.lineWidth = sideStrokeWidth;\n    for (let i = 0; i < 3; i++) {\n        drawSideSticker(2-i, Math.PI, props.cube[2][i])\n        drawSideSticker(2-i, 0, props.cube[3][i])\n        drawSideSticker(2-i, Math.PI * 1.5, props.cube[4][i])\n        drawSideSticker(2-i, Math.PI * 0.5, props.cube[5][i])\n    }\n}\n\n\n\nfunction drawFlat3D(ctx: CanvasRenderingContext2D, props: Config) {\n    let { width, height, colorScheme} = props\n\n    const showL = (props.facesToReveal || []).includes(Face.L)\n\n    ctx.clearRect(0, 0, width, height)\n    // size = size of cube\n    let size = Math.min(width, height)\n    let uHeight = size * 0.75; // height of the cube\n    let uStickerSize = uHeight / 5; // 5 rows\n    let uWidth = uStickerSize * 4; // 4 columns\n    const uStrokeWidth = uStickerSize * 0.03;\n    const sideStrokeWidth = uStickerSize * 0.03;\n    const UFMargin = uStickerSize * 0.07;\n    const URMargin = uStickerSize * 0.07;\n    ctx.lineWidth = uStrokeWidth;\n\n    ctx.resetTransform()\n    let ratio = window.devicePixelRatio || 1;\n    ctx.scale(ratio, ratio)\n    ctx.translate((width - uWidth) / 2, (size - uHeight) / 2)\n\n\n    function drawUSticker(x: number, y:number, sticker:number) {\n        ctx.fillStyle = colorScheme[sticker]\n        ctx.fillRect(x, y, uStickerSize, uStickerSize)\n        ctx.strokeStyle = 'black'\n        ctx.strokeRect(x, y, uStickerSize, uStickerSize)\n    }\n\n    const UFWidthShift = showL ? uStickerSize : 0;\n    for (let i = 0 ;i < 3; i++) {\n        for (let j = 0; j < 3; j++) {\n            const sticker = props.cube[0][i * 3 + j]\n            drawUSticker(j * uStickerSize + UFWidthShift, i * uStickerSize, sticker)\n        }\n    }\n    // F=2,B=3,L=4,R=5\n    ctx.lineWidth = sideStrokeWidth;\n\n    for (let i = 0 ;i < 2; i++) {\n        for (let j = 0; j < 3; j++) {\n            const sticker = props.cube[2][i * 3 + j]\n            drawUSticker(j * uStickerSize + UFWidthShift, (i + 3) * uStickerSize + UFMargin, sticker)\n        }\n    }\n\n    if (showL) {\n        for (let i = 0 ;i < 1; i++) {\n            for (let j = 0; j < 3; j++) {\n                const sticker = props.cube[4][i * 3 + j]\n                drawUSticker(0 - URMargin, j * uStickerSize, sticker)\n            }\n        }\n    } else {\n        for (let i = 0 ;i < 1; i++) {\n            for (let j = 0; j < 3; j++) {\n                const sticker = props.cube[5][i * 3 + j]\n                drawUSticker(3 * uStickerSize + URMargin, (2 - j) * uStickerSize, sticker)\n            }\n        }\n    }\n\n}\n\n\nfunction CubeSim2D(props: Config) {\n    const canvasRef = React.useRef<HTMLCanvasElement | null>(null)\n    useEffect( () => {\n        const canvas = canvasRef.current!\n        let ratio = window.devicePixelRatio || 1;\n        canvas.height = props.height * ratio\n        canvas.width = props.width * ratio\n        const ctx = canvas.getContext('2d')\n        draw2D(ctx!, props)\n    })\n\n    return <canvas\n        ref={canvasRef}\n        style={{ width: props.width, height: props.height, zIndex: 1 }}\n    />;\n}\n\nfunction CubeSimFlat3D(props: Config) {\n    const canvasRef = React.useRef<HTMLCanvasElement | null>(null)\n    useEffect( () => {\n        const canvas = canvasRef.current!\n        let ratio = window.devicePixelRatio || 1;\n        canvas.height = props.height * ratio\n        canvas.width = props.width * ratio\n        const ctx = canvas.getContext('2d')\n        drawFlat3D(ctx!, props)\n    })\n\n    return <canvas\n        ref={canvasRef}\n        style={{ width: props.width, height: props.height, zIndex: 1 }}\n    />;\n}\n\nexport { CubeSim2D, CubeSimFlat3D }","import React, { Fragment } from 'react'\n\nimport CubeSim from './CubeSim'\nimport { useTheme, FormControl, FormLabel, Typography, Button } from '@mui/material';\n\nimport makeStyles from '@mui/styles/makeStyles';\n\nimport Divider from '@mui/material/Divider';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport { FaceletCube, Mask, MoveSeq } from '../lib/CubeLib';\n\nimport { AppState, Action } from \"../Types\";\nimport clsx from 'clsx';\nimport { MultiSelect, SingleSelect } from './SelectorViews';\nimport { ColorPanel } from './Input';\nimport CaseSelectDialog from './CaseSelectView';\nimport { cmll_algs_raw, nmcll_display_parity, nmcll_to_cmll_mapping, ollcp_algs_raw } from '../lib/Algs';\n\nimport CaseVisualizer from './CaseVisualizer';\nimport { CubeSim2D, CubeSimFlat3D } from './CubeSim2D';\nimport { Face } from '../lib/Defs';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      paddingTop: theme.spacing(0),\n      paddingBottom: theme.spacing(2),\n      backgroundColor: theme.palette.background.default\n    },\n    paper: {\n      padding: theme.spacing(3),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    fixedHeight: {\n      height: 350,\n    },\n    canvasPaper: {\n      padding: theme.spacing(0),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    title : {\n        color: theme.palette.text.disabled,\n        fontWeight: 500,\n        fontSize: 18,\n        borderBottom: \"2px solid\",\n    },\n    prompt: {\n      color: theme.palette.text.secondary,\n    },\n    button: {\n      width: \"100%\"\n    },\n}))\n\nconst cmll_name_to_alg = Object.fromEntries(cmll_algs_raw)\nconst nmcll_display_algs = nmcll_to_cmll_mapping.map( ([x, y], i) => {\n  let parity = nmcll_display_parity[i]\n  let alg = cmll_name_to_alg[y[0][0]]\n  alg = parity[2] + \" \" + alg + \" \" + parity[1]\n  return [x, alg] as [string, string]\n})\n//console.log(nmcll_display_algs)\n\nfunction NMCLLSelect(props:  { state: AppState, dispatch: React.Dispatch<Action> } ) {\n  const {state, dispatch} = props\n  const groups = [\"o\", \"s\", \"as\", \"t\", \"u\", \"l\", \"pi\", \"h\"]\n  return <CaseSelectDialog {...{state, dispatch, settings: {\n    selector: \"nmcllSelector\",\n    groups,\n    algs: nmcll_display_algs,\n    visualizeMask: \"cmll\",\n    cubeOptions: {\n      colorScheme: {\n        0: '#ffffff', // URFDLB. U = white\n        1: '#ee0000', // R = red\n        2: '#404040', // F = green\n        3: '#404040', // D = yellow\n        4: '#ffa100', // L = orange\n        5: '#404040', // B = blue\n      }\n    }\n    },\n    title: \"Select cases by NMCLL recog (this is a separate selection from above, only activated when you're in L/R or F/B mode)\",\n    label: \"Select by NMCLL\"\n  } }/>\n}\n\nfunction _getMask(name: string) {\n  switch (name) {\n    case \"Show\": return Mask.solved_mask;\n    case \"Hide\": return Mask.empty_mask;\n    case \"Hide LSE\": return Mask.lse_mask;\n    default: return Mask.solved_mask\n  }\n}\nexport function CmllTrainerView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n    let { state, dispatch } = props\n    let cube = state.cube.state\n    let classes = useStyles()\n    const canvasPaper = clsx(classes.canvasPaper, classes.fixedHeight);\n    let facelet = FaceletCube.from_cubie(cube,\n      _getMask( state.config.cmllCubeMaskSelector.getActiveName() || \"Show\"))\n\n\n    let cmll2D3DActiveName = (state.config.cmll2D3DSelector.getActiveName() || \"3D\")\n    const use3D = cmll2D3DActiveName === \"3D\"\n    const useFlat3D = cmll2D3DActiveName === \"flat3D\"\n    let kataMode = state.config.cmllKataSelector.getActiveName()\n    let flat3DShowLFace = state.config.cmllflat3DFaceSelector.getActiveName() === \"L\"\n    let _3DShowLFace = state.config.cmll3DFaceSelector.getActiveName() === \"Show\"\n\n    let hyperori = state.config.hyperOriSelector.getActiveName() || \"off\"\n    if (hyperori !== \"off\") {\n      // if hyperori on\n      if (hyperori === \"F/B\") {\n        facelet = FaceletCube.as_actrm(facelet, \"fb\", true)\n      } else {\n        facelet = FaceletCube.as_actrm(facelet, \"lr\", true)\n      }\n    } else {\n      // if kata mode is on, we mask out all non-U stickers that are not used by recognition\n      // we will go with the following (OO) recognition schema courtesy of James Macdiarmid:\n      // Pi/H: U face\n      // S/As/T/U: the T shape\n      // L: the U face plus the FUR and BUL\n      if (kataMode !== \"off\") {\n        // for now, let's add support for T-shape kata only.\n        // This may be used for T,U,Pi,H obviously, but also for Sune/AntiSune with the James Macdiarmid recog methdo\n        facelet = FaceletCube.as_kata(facelet)\n      }\n    }\n    const theme = useTheme()\n\n    const cmllSel = \"cmllSelector\";\n    const cmllcubemaskSel = \"cmllCubeMaskSelector\";\n    const cmllaufSel = \"cmllAufSelector\";\n    const triggerSel = \"triggerSelector\";\n    const hyperoriSel = \"hyperOriSelector\";\n    const _2d3dSel = \"cmll2D3DSelector\";\n    const kataSel = \"cmllKataSelector\";\n\n\n    const panel = (\n      <Box>\n        <CaseSelectDialog {...{state, dispatch, settings: {\n          selector: \"cmllCaseSelector\",\n          algs: cmll_algs_raw,\n          groups: [\"o\", \"s\", \"as\", \"t\", \"u\", \"l\", \"pi\", \"h\"],\n          visualizeMask: \"cmll\",\n          cubeOptions: {\n            colorScheme: {\n              0: '#FEFE00', // URFDLB. U = yellow\n              1: '#ffa100', // R = o\n              2: '#00b800', // F = g\n              3: '#404040', // D = w\n              4: '#ee0000', // L = r\n              5: '#0000f2', // B = blue\n            }\n          }\n          },\n          label: \"Select CMLL Cases\"\n        } }/>\n\n        <MultiSelect {...{state, dispatch, select: cmllaufSel, options: { label: \"CMLL Auf\", noDialog: true} }} />\n        <Box width={16} display=\"inline-block\"></Box>\n        <MultiSelect {...{state, dispatch, select: triggerSel, options: { label: \"SB Last Pair Trigger (Uncheck all for pure CMLL)\", noDialog: true} } } />\n\n        <Box height={10}/>\n        <Divider />\n        <Box height={20}/>\n\n\n        <SingleSelect {...{state, dispatch, select: cmllcubemaskSel, label: \"Virtual Cube\"}} />\n        <br/>\n\n        <SingleSelect {...{state, dispatch, select: _2d3dSel, label: \"Visualize as\" } } />\n        <Box width={16} display=\"inline-block\"></Box>\n\n        {use3D     && <SingleSelect {...{state, dispatch, select: \"cmll3DFaceSelector\", label: \"Show L face\" } } />}\n        {useFlat3D && <SingleSelect {...{state, dispatch, select: \"cmllflat3DFaceSelector\", label: \"L/R faces to reveal\" } } />}\n\n        <br/>\n        <SingleSelect {...{state, dispatch, select: kataSel, label: \"Display recog stickers only\" } } />\n        <ColorPanel {...{state, dispatch}} />\n\n        <Box height={20}/>\n        <Divider />\n        <Box height={20}/>\n\n        {/* <SingleSelect {...{state, dispatch, select: \"cmllBatchModeSelector\", label: \"Batch Mode\" } } /> */}\n        <SingleSelect {...{state, dispatch, select: hyperoriSel, label: \"NMCLL Recog Mode\" } } />\n        {hyperori !== \"off\" && <NMCLLSelect {...{state, dispatch}}/>}\n\n      </Box>\n    )\n\n    React.useEffect( () =>  {\n      setReveal(false) // todo: drive this from props. now there's a delay which causes the answer to leak for a split second\n    }, [ state ])\n    const [reveal, setReveal] = React.useState(false)\n    const handleClick = () => {\n      setReveal(true)\n    }\n    const handleNext = () => {\n      dispatch({type: \"key\", content: \"#space\"})\n    }\n\n    React.useEffect(() => {\n      function downHandler(event: KeyboardEvent) {\n        state.keyMapping.handle(event, dispatch);\n        // intercept keyboard event for local control\n        if (event.key === \"/\") {\n          setReveal(true)\n        }\n      }\n      window.addEventListener('keydown', downHandler);\n      return () => {\n        window.removeEventListener('keydown', downHandler);\n      };\n    });\n\n    let alg = \"\"\n    let setup = \"\"\n    if (state.case.desc.length === 4) {\n      setup = state.case.desc[3].algs[0]\n    }\n    if (reveal && state.case.desc.length >= 3) {\n      const moves = new MoveSeq(state.case.desc[1].algs[0] + state.case.desc[2].algs[0] )\n      let moves_c = moves.collapse()\n      if (moves_c.moves.length > 0) {\n        if (moves_c.moves[0].name[0] === \"U\") {\n          alg += \"(\" + moves_c.moves[0].name + \") \";\n          moves_c.moves = moves_c.moves.slice(1)\n        }\n        alg += moves_c.toString()\n      }\n    }\n    const colorSchemeColors = state.colorScheme.getColorsForOri(state.cube.ori)\n    return (\n    <Box className={classes.container}>\n    <Grid container >\n      <Grid item xs={12} >\n          {use3D ?\n            <Paper className={canvasPaper}>\n              <Box margin=\"auto\">\n              {<CubeSim\n                width={400}\n                height={350}\n                cube={facelet}\n                colorScheme={colorSchemeColors}\n                theme={state.config.theme.getActiveName()}\n                facesToReveal={ _3DShowLFace ? [Face.L] : []}\n              />}\n              </Box>\n            </Paper>\n           :\n           useFlat3D ?\n           <Paper className={canvasPaper}>\n             <Box margin=\"auto\">\n             {<CubeSimFlat3D\n               width={400}\n               height={350}\n               cube={facelet}\n               colorScheme={colorSchemeColors}\n               theme={state.config.theme.getActiveName()}\n               facesToReveal={[ flat3DShowLFace ? Face.L : Face.R]}\n             />}\n             </Box>\n           </Paper>\n           :\n            <Paper className={canvasPaper}>\n              <Box margin=\"auto\">\n              {<CubeSim2D\n                width={400}\n                height={350}\n                cube={facelet}\n                colorScheme={colorSchemeColors}\n                theme={state.config.theme.getActiveName()}\n              />}\n              </Box>\n            </Paper>\n          }\n      </Grid>\n    </Grid>\n\n    <Box height = {5}/>\n\n    <Paper className={classes.paper} elevation={2}>\n    <Grid container spacing={2}>\n\n      <Grid item xs={3}>\n\n      <Box display=\"flex\">\n              <Box>\n              <Box className={classes.title} >\n                Scramble\n              </Box> </Box>\n      </Box>\n      </Grid>\n      <Grid item xs={9}>\n        <Box paddingBottom={1} lineHeight={1} >\n          <Typography style={{whiteSpace: 'pre-line', fontSize: 18, fontWeight: 500}}>\n            { setup }\n          </Typography>\n        </Box>\n\n      </Grid>\n      <Grid item xs={3}>\n\n      <Box display=\"flex\">\n              <Box>\n              <Box className={classes.title} >\n                Case\n              </Box> </Box>\n      </Box>\n      </Grid>\n      { (!reveal) ?\n      <Grid item xs={3}>\n      <Button onFocus={(evt) => evt.target.blur() } className={classes.button}\n      size=\"medium\" variant=\"outlined\" color=\"primary\" onClick={handleClick}> { /* className={classes.margin}>  */ }\n          Show\n      </Button>\n      </Grid>\n      :\n      <Grid item xs={9}>\n        <Box paddingBottom={1} lineHeight={1} >\n          <Typography style={{whiteSpace: 'pre-line', fontSize: 18, fontWeight: 500}}>\n            { alg }\n          </Typography>\n        </Box>\n\n        <Box borderColor=\"primary.main\"\n                style={{transition: \"all .3s ease\" }}>\n                {/* TODO: make the cube colors match above */}\n                <CaseVisualizer\n                  name=\"\"\n                  size={100}\n                  alg={alg}\n                  mask=\"cmll\"\n                  color={colorSchemeColors}\n                  cubeOptions={{}}\n                />\n        </Box>\n\n      </Grid>\n      }\n    </Grid>\n    <Box height={30}/>\n\n    <Grid container spacing={0}>\n        <Grid item xs={4} sm={4} md={3}>\n          <Button onFocus={(evt) => evt.target.blur() } className={classes.button}\n          size=\"medium\" variant=\"contained\" color=\"primary\" onClick={handleNext}>\n              Next\n          </Button>\n        </Grid>\n    </Grid>\n    </Paper>\n\n\n    <Box height={20}/>\n      <Divider />\n    <Box height={20}/>\n    { panel }\n\n    <Box height={20}/>\n      <Divider />\n    <Box height={15}/>\n\n    <Box>\n    <FormControl component=\"fieldset\" className={classes.prompt}>\n      <FormLabel component=\"legend\">\n         Usage: Press space for next case. Enter to redo. / to reveal.\n      </FormLabel>\n    </FormControl>\n    </Box>\n\n    </Box>\n    );\n}\n\n//export default CmllTrainerView\n\n\nexport function OllcpTrainerView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n  let { state, dispatch } = props\n  let cube = state.cube.state\n  let classes = useStyles()\n  const canvasPaper = clsx(classes.canvasPaper, classes.fixedHeight);\n  let facelet = FaceletCube.from_cubie(cube, Mask.solved_mask)\n\n  const use3D = (state.config.cmll2D3DSelector.getActiveName() || \"3D\") === \"3D\"\n  let kataMode = state.config.cmllKataSelector.getActiveName()\n\n  if (kataMode !== \"off\") {\n    facelet = FaceletCube.as_kata(facelet)\n  }\n\n  const _2d3dSel = \"cmll2D3DSelector\";\n  const kataSel = \"cmllKataSelector\";\n\n  const panel = (\n    <Box>\n      <CaseSelectDialog {...{state, dispatch, settings: {\n        selector: \"ollcpCaseSelector\",\n        algs: ollcp_algs_raw,\n        groups: [\"34\", \"39\", \"45\", \"51\", \"56\", \"13\", \"14\"],\n        visualizeMask: \"coll\",\n        cubeOptions: {\n          colorScheme: {\n            0: '#FEFE00', // URFDLB. U = yellow\n            1: '#ffa100', // R = o\n            2: '#00b800', // F = g\n            3: '#404040', // D = w\n            4: '#ee0000', // L = r\n            5: '#0000f2', // B = blue\n          }\n        }\n        },\n        label: \"Select OLLCP Cases\"\n      } }/>\n\n      {/* <MultiSelect {...{state, dispatch, select: cmllaufSel, options: { label: \"CMLL Auf\", noDialog: true} }} />\n      <Box width={16} display=\"inline-block\"></Box>\n      <MultiSelect {...{state, dispatch, select: triggerSel, options: { label: \"SB Last Pair Trigger (Uncheck all for pure CMLL)\", noDialog: true} } } />\n\n      <Box height={10}/>\n      <Divider />\n      <Box height={20}/>\n\n\n      <SingleSelect {...{state, dispatch, select: cmllcubemaskSel, label: \"Virtual Cube\"}} />\n      <br/> */}\n\n      <SingleSelect {...{state, dispatch, select: _2d3dSel, label: \"Visualize as\" } } />\n\n      <Box width={16} display=\"inline-block\"></Box>\n      <SingleSelect {...{state, dispatch, select: kataSel, label: \"Display recog stickers only\" } } />\n      <ColorPanel {...{state, dispatch}} />\n\n      <Box height={20}/>\n      <Divider />\n      <Box height={20}/>\n\n    </Box>\n  )\n\n  React.useEffect( () =>  {\n    setReveal(false) // todo: drive this from props. now there's a delay which causes the answer to leak for a split second\n  }, [ state ])\n  const [reveal, setReveal] = React.useState(false)\n  const handleClick = () => {\n    setReveal(true)\n  }\n  const handleNext = () => {\n    dispatch({type: \"key\", content: \"#space\"})\n  }\n\n  React.useEffect(() => {\n    function downHandler(event: KeyboardEvent) {\n      state.keyMapping.handle(event, dispatch);\n      // intercept keyboard event for local control\n      if (event.key === \"/\") {\n        setReveal(true)\n      }\n    }\n    window.addEventListener('keydown', downHandler);\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n    };\n  });\n\n  let alg = \"\"\n  let setup = \"\"\n  if (state.case.desc.length === 4) {\n    setup = state.case.desc[3].algs[0]\n  }\n  if (reveal && state.case.desc.length >= 3) {\n    const moves = new MoveSeq(state.case.desc[1].algs[0] + state.case.desc[2].algs[0] )\n    let moves_c = moves.collapse()\n    if (moves_c.moves.length > 0) {\n      if (moves_c.moves[0].name[0] === \"U\") {\n        alg += \"(\" + moves_c.moves[0].name + \") \";\n        moves_c.moves = moves_c.moves.slice(1)\n      }\n      alg += moves_c.toString()\n    }\n  }\n  const colorSchemeColors = state.colorScheme.getColorsForOri(state.cube.ori)\n  return (\n  <Box className={classes.container}>\n  <Grid container >\n    <Grid item xs={12} >\n        {use3D ?\n          <Paper className={canvasPaper}>\n            <Box margin=\"auto\">\n            {<CubeSim\n              width={400}\n              height={350}\n              cube={facelet}\n              colorScheme={colorSchemeColors}\n              theme={state.config.theme.getActiveName()}\n              facesToReveal={[Face.L]}\n            />}\n            </Box>\n          </Paper>\n         :\n          <Paper className={canvasPaper}>\n            <Box margin=\"auto\">\n            {<CubeSim2D\n              width={400}\n              height={350}\n              cube={facelet}\n              colorScheme={colorSchemeColors}\n              theme={state.config.theme.getActiveName()}\n            />}\n            </Box>\n          </Paper>\n        }\n    </Grid>\n  </Grid>\n\n  <Box height = {5}/>\n\n  <Paper className={classes.paper} elevation={2}>\n  <Grid container spacing={2}>\n\n    <Grid item xs={3}>\n\n    <Box display=\"flex\">\n            <Box>\n            <Box className={classes.title} >\n              Scramble\n            </Box> </Box>\n    </Box>\n    </Grid>\n    <Grid item xs={9}>\n      <Box paddingBottom={1} lineHeight={1} >\n        <Typography style={{whiteSpace: 'pre-line', fontSize: 18, fontWeight: 500}}>\n          { setup }\n        </Typography>\n      </Box>\n\n    </Grid>\n    <Grid item xs={3}>\n\n    <Box display=\"flex\">\n            <Box>\n            <Box className={classes.title} >\n              Case\n            </Box> </Box>\n    </Box>\n    </Grid>\n    { (!reveal) ?\n    <Grid item xs={3}>\n    <Button onFocus={(evt) => evt.target.blur() } className={classes.button}\n    size=\"medium\" variant=\"outlined\" color=\"primary\" onClick={handleClick}> { /* className={classes.margin}>  */ }\n        Show\n    </Button>\n    </Grid>\n    :\n    <Grid item xs={9}>\n      <Box paddingBottom={1} lineHeight={1} >\n        <Typography style={{whiteSpace: 'pre-line', fontSize: 18, fontWeight: 500}}>\n          { alg }\n        </Typography>\n      </Box>\n\n      <Box borderColor=\"primary.main\"\n              style={{transition: \"all .3s ease\" }}>\n              {/* TODO: make the cube colors match above */}\n              <CaseVisualizer\n                name=\"\"\n                size={100}\n                alg={alg}\n                mask=\"cmll\"\n                color={colorSchemeColors}\n                cubeOptions={{}}\n              />\n      </Box>\n\n    </Grid>\n    }\n  </Grid>\n  <Box height={30}/>\n\n  <Grid container spacing={0}>\n      <Grid item xs={4} sm={4} md={3}>\n        <Button onFocus={(evt) => evt.target.blur() } className={classes.button}\n        size=\"medium\" variant=\"contained\" color=\"primary\" onClick={handleNext}>\n            Next\n        </Button>\n      </Grid>\n  </Grid>\n  </Paper>\n\n\n  <Box height={20}/>\n    <Divider />\n  <Box height={20}/>\n  { panel }\n\n  <Box height={20}/>\n    <Divider />\n  <Box height={15}/>\n\n  <Box>\n  <FormControl component=\"fieldset\" className={classes.prompt}>\n    <FormLabel component=\"legend\">\n       Usage: Press space for next case. Enter to redo. / to reveal.\n    </FormLabel>\n  </FormControl>\n  </Box>\n\n  </Box>\n  );\n}\n","import React, { Fragment } from 'react'\n\nimport {\n    TextField,\n    Button,\n    Box,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    useMediaQuery,\n} from '@mui/material';\n\nimport makeStyles from '@mui/styles/makeStyles';\n\nimport EditIcon from '@mui/icons-material/Edit';\nimport { theme } from '../theme';\n\n\nimport { Action } from '../Types';\nimport { MoveSeq } from '../lib/CubeLib';\n\nconst useStyles = makeStyles(theme => ({\n\n    setupEdit: {\n        whiteSpace: 'pre-line',\n        fontSize: \"1.2rem\",\n        fontWeight:500,\n        [theme.breakpoints.down('sm')]: {\n        fontSize: \"1.0rem\",\n        fontWeight: 500\n        },\n    },\n    button: {\n        marginRight: theme.spacing(1)\n        //margin: theme.spacing(1)\n    }\n}))\n\nexport function ScrambleInputView(props: { display: string, scrambles: string[], dispatch: React.Dispatch<Action>}) {\n    let classes = useStyles()\n    let [editing, setEditing] = React.useState(false)\n    let [value, setValue] = React.useState(props.scrambles.join(\"\\n\"))\n    let textField = React.useRef<HTMLInputElement | null>(null)\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue(event.target.value)\n        event.stopPropagation()\n    }\n    const onKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n        event.stopPropagation()\n    }\n    const toggleEdit = () => {\n        setEditing(!editing)\n    }\n    const handleClose = () => {\n        setEditing(false)\n    }\n    const handleSubmit = () => {\n        setEditing(false)\n        props.dispatch({type: \"scrambleInput\", content: value.split(\"\\n\").filter(s => s.trim())})\n    }\n    const handleInvert = () => {\n        setEditing(false)\n        const inverted = (value.split(\"\\n\").map(x => new MoveSeq(x).inv().toString()))\n        props.dispatch({type: \"scrambleInput\", content: inverted})\n    }\n    React.useEffect(  () => {\n        setValue(props.scrambles.join(\"\\n\"))\n    }, [props.scrambles])\n\n    /*\n    React.useEffect( ()=> {\n        if (editing) {\n            textField.current && textField.current.focus()\n        } else {\n            textField.current && textField.current.blur()\n            editButton.current && editButton.current.blur()\n        }\n    }, [editing]*/\n\n    const onEntered = () => {\n        textField.current && textField.current.focus()\n    }\n    const gt_sm = useMediaQuery(theme.breakpoints.up('sm'));\n    return <>\n    <Box>\n        { gt_sm ? \n            <Button variant={editing ? \"contained\" : \"outlined\"}\n                color=\"primary\"\n                size=\"small\"\n                onClick={toggleEdit}\n                className={classes.button}\n                startIcon={<EditIcon />}\n            >\n                Input\n            </Button>\n            : \n            <Button variant={editing ? \"contained\" : \"outlined\"}\n                color=\"primary\"\n                size=\"small\"\n                onClick={toggleEdit}\n                className={classes.button}\n            >\n                <Box marginTop={0.5}>\n                    <EditIcon fontSize=\"small\"/>\n                </Box>\n            </Button>\n            // <Box>\n            // <IconButton \n            //     size=\"small\"\n            //     onClick={toggleEdit}\n            //     className={classes.button}\n            //     color=\"primary\"\n            // >\n            //     <EditIcon />\n            // </IconButton>\n            // </Box>\n        }\n\n    </Box>\n\n    <Dialog open={editing} \n            onClose={handleClose}  \n            onKeyPress={onKeyPress} \n            onKeyDown={onKeyPress} \n            onKeyUp={onKeyPress}\n            /* onEntered={onEntered} */\n            >\n          <DialogTitle> Input your own solution / scrambles (one per line) </DialogTitle>\n          <DialogContent>\n                <TextField\n                    inputRef={textField}\n                    multiline\n                    size=\"medium\"\n                    fullWidth\n                    maxRows={10}\n                    rows={3}\n                    InputProps={{\n                        className:classes.setupEdit\n                    }}\n                    autoFocus\n                \n                    value={value}\n                    onChange={onChange}\n                    variant=\"outlined\">\n                </TextField>\n          </DialogContent>\n          <DialogActions>\n              <Box padding={1}>\n              <Button onClick={handleInvert} color=\"primary\" variant=\"outlined\" fullWidth >\n                  Use as solution\n              </Button>\n              <Button onClick={handleSubmit} color=\"primary\" variant=\"outlined\" fullWidth >\n                  Use as scramble\n              </Button>\n              </Box>\n          </DialogActions>\n    </Dialog>\n    </>\n}","import React from 'react'\nimport Tooltip, { tooltipClasses, TooltipProps } from '@mui/material/Tooltip';\nimport { styled } from '@mui/material/styles';\nimport { theme } from '../theme';\n\nexport const CustomTooltip = styled(({ className, ...props }: TooltipProps) => (\n    <Tooltip {...props} classes={{ popper: className }} />\n  ))({\n    [`& .${tooltipClasses.tooltip}`]: {\n      maxWidth: 400,\n      fontSize: \"1rem\"\n    },\n  });","import React, { Fragment } from 'react'\n\nimport CubeSim from './CubeSim'\nimport { Button, Typography, useTheme, FormControl, FormLabel } from '@mui/material';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Divider from '@mui/material/Divider';\n\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\n\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\nimport IconButton from '@mui/material/IconButton';\n\n\nimport { FaceletCube, Mask, MoveSeq } from '../lib/CubeLib';\n\nimport { AppState,  Action, FavCase, Mode} from \"../Types\";\nimport 'typeface-roboto-mono';\nimport { Face } from '../lib/Defs';\n\nimport { SingleSelect, MultiSelect, SliderSelect } from './SelectorViews';\nimport { ColorPanel } from './Input';\nimport { CaseDesc } from '../lib/Algs';\nimport { ScrambleInputView } from './ScrambleInputView';\nimport { CustomTooltip } from './Tooltip';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      paddingTop: theme.spacing(0),\n      paddingBottom: theme.spacing(2),\n      backgroundColor: theme.palette.background.default,\n      transition: \"all .5s ease-in-out\"\n    },\n    button: {\n      width: \"100%\",\n      height: 50\n    },\n    paper: {\n      padding: theme.spacing(3),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n      marginBottom: 3,\n      borderRadius: 0\n    },\n    canvasPaper: {\n      padding: theme.spacing(0),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    infoColumn: {\n      color: theme.palette.background.paper\n    },\n    scrambleColumn: {\n      paddingLeft: theme.spacing(3)\n    },\n    textColumn: {\n      // color: \"black\",\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 138\n      },\n    },\n    setup: {\n      whiteSpace: 'pre-line',\n      fontSize: \"1.4rem\",\n      fontWeight:500,\n      [theme.breakpoints.down('sm')]: {\n      fontSize: \"1.2rem\",\n      fontWeight: 500\n      },\n    },\n    condGap: {\n    },\n    fgap: {\n      flexShrink: 100, flexBasis: \"2.5rem\", minWidth: \"1.5em\",\n      [theme.breakpoints.down('sm')]: {\n        flexBasis: \"1.0rem\",\n        minWidth: \"0.4rem\"\n      }\n    },\n    fixedHeight: {\n      height: 250,\n    },\n    title : {\n        color: theme.palette.text.disabled,\n        fontWeight: 500,\n        borderBottom: \"3px solid\",\n    },\n    sourceIcon : {\n        color: theme.palette.text.disabled,\n        fontSize: 15,\n        padding: 0\n    },\n    sourceIconWrap : {\n        //border: \"1px solid \" + theme.palette.text.disabled,\n        //borderRadius: 3\n    },\n    fab: {\n      position: 'absolute',\n      top: theme.spacing(7),\n      left: theme.spacing(2),\n    },\n    prompt: {\n      color: theme.palette.text.secondary,\n    },\n    configPanel: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      columnGap: theme.spacing(2),\n      rowGap: 0,\n      '& .color-panel': {\n        flexBasis: '100%',\n      },\n      '& .multi-select': {\n        flexBasis: '100%',\n      },\n    },\n  }))\n\n\nfunction getMask(state: AppState) : Mask {\n    if (state.mode === \"fbdr\") {\n      const fbOnly = (state.case.desc.length === 0 || state.case.desc[0].kind === \"fb\")\n      //   getActiveName(state.config.fbOnlySelector) === \"FB Last Pair\"\n      return fbOnly ? Mask.fb_mask : Mask.fbdr_mask\n    }\n    else if (state.mode === \"fs\") {\n      let name = state.config.fsSelector.getActiveName()\n      return ({\n        \"Front FS\": Mask.fs_front_mask,\n        \"Back FS\": Mask.fs_back_mask,\n        \"Both\": Mask.fb_mask\n      } as any)[name]\n    }\n    else if (state.mode === \"ss\") {\n      if (state.case.desc.length === 0) return Mask.sb_mask\n      let name = state.config.ssSelector.getActiveName()\n      let dpair = state.config.ssPairOnlySelector.getActiveName() === \"D-Pair only\"\n\n      switch (name) {\n        case \"Front SS\": return dpair ? Mask.ssdp_front_mask : Mask.ss_front_mask;\n        case \"Back SS\": return dpair ? Mask.ssdp_back_mask : Mask.ss_back_mask;\n        default : return dpair ? Mask.ssdp_both_mask : Mask.f2b_mask\n      }\n    }\n    else if (state.mode === \"fb\") {\n      if (state.case.desc.length === 0 || state.case.desc[0].kind === \"fb\" || state.case.desc[0].kind.startsWith(\"fb@\")) {\n        return Mask.fb_mask\n      }\n      else if (state.case.desc[0].kind === \"fbdr\") {\n        return Mask.fbdr_mask\n      } else {\n        return Mask.solved_mask\n      }\n    }\n    else if (state.mode === \"fbss\") {\n      let name = state.config.fbssSsSelector.getActiveName()\n      return ({\n        \"Front SS\": Mask.ss_front_mask,\n        \"Back SS\": Mask.ss_back_mask,\n        \"Both\": Mask.f2b_mask\n      } as any)[name]\n    }\n    else if (state.mode === \"4c\" || state.mode === \"eopair\") {\n      return Mask.solved_mask\n    }\n    else return Mask.sb_mask\n}\n\nfunction getHelperTextForMode(mode: Mode) {\n  if (mode === \"4c\" || mode === \"eopair\") {\n    return (\"Usage: Press space for next case. Enter to redo.\"\n      + \"\\n\\nVirtual Cube: I/K (E/D) for M'/M, J/F for U/U'\")\n  } else {\n    return null\n  }\n}\n\n\nfunction BlockTrainerView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n    let { state, dispatch } = props\n    let cube = state.cube.state\n    let classes = useStyles()\n\n    let facelet = FaceletCube.from_cubie(cube, getMask(state))\n\n    let desc : CaseDesc[] = state.case.desc.length ? state.case.desc :\n       [ { algs: [\"\"], setup:\"Press next for new case\", id: \"\", kind: \"\"} ]\n\n    let spaceButtonText = (state.name === \"hiding\") ? \"Reveal\" : \"Next\"\n    let showMoveCountHint = state.config.moveCountHint.getActiveName() === \"Show\"\n\n    let describe_reveal = function(algs: CaseDesc[]) {\n      let get_algs = (d: CaseDesc) => d.algs;\n      if (algs.length === 1) {\n        return get_algs(algs[0]).join(\"\\n\")\n      } else {\n        return algs.map( alg =>\n          `[${alg.kind}]:\\n` + get_algs(alg).join(\"\\n\") + \"\\n\"\n        )\n      }\n    }\n\n    let describe_hide = (desc: CaseDesc[]) => {\n      let minMove = desc.map( d =>\n        d.algs.map(a => new MoveSeq(a).remove_setup().moves.length))\n        .flat()\n        .reduce( (a, b) => Math.min(a, b), 100 )\n      return `(Min = ${minMove} STM)`\n    }\n    let algText = (state.name === \"hiding\") ? (showMoveCountHint ? describe_hide(desc) : \"\")\n      : (state.name === \"revealed\") ? describe_reveal(desc) : \"\"\n\n    const handleSpace = () => {\n      dispatch({type: \"key\", content: \"#space\"})\n      if (spaceButtonText === \"Next\") {\n        setFav(false)\n      }\n    }\n\n    const setup = desc.length ? desc[0].setup! : \"\"\n    const theme = useTheme()\n\n    // source\n    // Add event listeners\n    React.useEffect(() => {\n      function downHandler(event: KeyboardEvent) {\n        if (event.key === \" \" && spaceButtonText === \"Next\") {\n          setFav(false)\n        }\n        state.keyMapping.handle(event, dispatch);\n      }\n      window.addEventListener('keydown', downHandler);\n      return () => {\n        window.removeEventListener('keydown', downHandler);\n      };\n    });\n\n    const [favSelected, setFav] = React.useState(false)\n    const handleFav = () => {\n      if (state.case.desc.length === 0) return\n      const case_ : FavCase = {\n        mode: state.mode,\n        solver: state.case.desc.map(x => x.kind),\n        setup: setup || \"\"\n      }\n      if (!favSelected){\n        setFav(true)\n        dispatch({type: \"favList\", content: [ case_ ], action: \"add\"})\n      } else {\n        setFav(false)\n        dispatch({type: \"favList\", content: [ case_ ], action: \"remove\" })\n      }\n    }\n\n    const gt_sm = useMediaQuery(theme.breakpoints.up('sm'));\n    const canvas_wh = (gt_sm) ? [400, 350] : [320, 280]\n    const ADD_STR = (gt_sm) ? \"Add\" : \"\";\n\n    // helper-text\n    let helperText = getHelperTextForMode(state.mode)\n\n    let levelSelectionWarning = \"We weren't able to generate your level within time limit. You can try again -- some levels are reachable within a few tries.\"\n    let levelSelectionSuccess = state.cube.levelSuccess\n\n    const scramblePanel =\n          <Box style={{display: \"flex\", flexWrap: \"wrap\", padding: 0}}>\n            <ScrambleInputView display = {setup}\n                dispatch={dispatch} scrambles={state.scrambleInput}/>\n\n            <Box>\n            {\n              gt_sm ?\n              <Button variant={favSelected ? \"contained\" : \"outlined\"}\n                  color=\"primary\"\n                  size=\"small\"\n                  name=\"fav\"\n                  onClick={handleFav}\n                  startIcon={<FavoriteIcon/>}\n                  >\n                  {favSelected ? \"✓\" : ADD_STR}\n              </Button>\n              :\n              null\n              // <Button variant={favSelected ? \"contained\" : \"outlined\"}\n              //     color=\"primary\"\n              //     size=\"small\"\n              //     name=\"fav\"\n              //     onClick={handleFav}\n              // >\n              //   <Box marginTop={0.5}>\n              //     <FavoriteIcon fontSize=\"small\"/>\n              //   </Box>\n              // </Button>\n            }\n            </Box>\n          </Box>\n\n    return (\n    <Box className={classes.container}>\n      <Paper className={classes.paper} elevation={1}>\n        <Box style={{display: \"flex\"}}>\n          <Box style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\n            <Box className={classes.title} style={{}}>\n              Scramble\n            </Box>\n          </Box>\n          <Box style={{}} className={classes.fgap} />\n          <Box style={{display: \"flex\", alignItems: \"center\", flexGrow: 1}}>\n            <Typography className={classes.setup} >\n                  {setup}\n            </Typography>\n          </Box>\n          <Box style={{}} className={classes.fgap} />\n\n          {gt_sm && scramblePanel}\n\n\n        </Box>\n      </Paper>\n\n      <Paper className={ classes.paper}>\n      <Grid container>\n\n        <Grid item md={6} sm={12} xs={12} className={classes.condGap}>\n          <Box style={{display: \"flex\" }}>\n            <Box display=\"flex\" >\n                <Box style={{display: \"flex\", alignSelf: \"flex-start\"}}> <Box className={classes.title} style={{}}>\n                  Solutions\n                </Box> </Box>\n            </Box>\n            <Box style={{}} className={classes.fgap} />\n            <div>\n              <Box paddingBottom={2} lineHeight={1}>\n                <Typography style={{whiteSpace: 'pre-line', fontSize: \"1.2rem\"}} >\n                  {algText}\n                </Typography>\n              </Box>\n            </div>\n          </Box>\n        </Grid>\n\n\n        <Grid item md={6} sm={12} xs={12} style={{display: \"flex\", justifyContent: \"center\"}}>\n          <Box style={{backgroundColor: \"rgba(0, 0, 0, 0)\"}}>\n            { props.state.config.showCube.getActiveName() === \"Show\" ?\n            <CubeSim\n              width={canvas_wh[0]}\n              height={canvas_wh[1]}\n              cube={facelet}\n\n              colorScheme={state.colorScheme.getColorsForOri(state.cube.ori)}\n              hintDistance={ (state.mode === \"4c\" || state.mode === \"eopair\") ? 3 : 7 }\n              theme={state.config.theme.getActiveName()}\n              facesToReveal={ [Face.L, Face.B, Face.D]  }\n              obscureNonLR={state.mode === \"ss\" && state.config.obscureNonLRSelector.getActiveName() === \"On\"}\n              obscureStickerWidth={state.mode === \"ss\" ? state.config.obscureStickerWidthSelector.getActiveName() : undefined}\n              obscureCornerMask={state.mode === \"ss\" && state.config.obscureCornerMaskSelector.getActiveName() === \"On\"}\n            /> : null }\n          </Box>\n        </Grid>\n      </Grid>\n      </Paper>\n\n      <Paper className={classes.paper} style={{paddingTop: 20, paddingBottom: 22}}>\n\n      <Grid container spacing={1}>\n        <Grid item xs={5} sm={4} md={3} marginLeft={1}>\n          <Button onFocus={(evt) => evt.target.blur() } className={classes.button}\n            size=\"large\" variant=\"contained\" color=\"primary\"\n            onClick={handleSpace} sx={{borderRadius: 0}}>\n              {spaceButtonText}\n          </Button>\n        </Grid>\n        {\n          !levelSelectionSuccess ?\n          <Grid item xs={1} marginLeft={1}>\n            <CustomTooltip title={levelSelectionWarning}>\n              <IconButton>\n                <ErrorOutlineIcon sx={{ fontSize: 30 }}/>\n              </IconButton>\n            </CustomTooltip>\n          </Grid> :\n          null\n        }\n\n\n      </Grid>\n\n      </Paper>\n\n      <Box height={20}/>\n      <Divider/>\n      <Box height={20}/>\n\n      <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n        <ConfigPanelGroup {...{state, dispatch, classes} } />\n      </Box>\n\n      {helperText ?\n      <Fragment>\n        <Box height={20}/>\n          <Divider/>\n        <Box height={15}/>\n        <Box>\n        <FormControl component=\"fieldset\" className={classes.prompt}>\n          <FormLabel component=\"legend\">\n            <pre style={{ fontFamily: 'inherit' }}>\n              {helperText}\n            </pre>\n          </FormLabel>\n          </FormControl>\n        </Box>\n      </Fragment> : null }\n    </Box>\n    );\n}\n\n\n\nfunction ConfigPanelGroup(props: {state: AppState, dispatch: React.Dispatch<Action>, classes: any }) {\n  let { state, dispatch, classes } = props\n  if (state.mode === \"ss\") {\n    let DRManip = [\n      // names: [\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n      // \"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n      { name: \"Toggle Select All\", enableIdx: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17] },\n      { name: \"Toggle All Oriented\", enableIdx: [0, 2, 4, 6, 8, 10, 12, 14, 16] },\n    ]\n    return (\n      <Fragment>\n      <SliderSelect {...{state, dispatch, select: \"ssLevelSelector\"}} />\n\n      <Box className={classes.configPanel}>\n        <SingleSelect {...{state, dispatch, select: \"ssSelector\"}}> </SingleSelect>\n        <SingleSelect {...{state, dispatch, select: \"ssPairOnlySelector\"}}> </SingleSelect>\n        <SingleSelect {...{state, dispatch, select: \"solutionNumSelector\"}}> </SingleSelect>\n        {/* <SingleSelect {...{state, dispatch, select: \"evaluator\"}}> </SingleSelect> */}\n\n        <SingleSelect {...{state, dispatch, select: \"moveCountHint\"}}> </SingleSelect>\n        <SingleSelect {...{state, dispatch, select: \"showCube\"}}> </SingleSelect>\n\n        <Box>\n          <SingleSelect {...{state, dispatch, select: \"obscureNonLRSelector\"}}> </SingleSelect>\n          {state.config.obscureNonLRSelector.getActiveName() === \"On\" &&\n            <SingleSelect {...{state, dispatch, select: \"obscureStickerWidthSelector\"}}> </SingleSelect>\n          }\n          {state.config.obscureNonLRSelector.getActiveName() === \"On\" &&\n            <SingleSelect {...{state, dispatch, select: \"obscureCornerMaskSelector\"}}> </SingleSelect>\n          }\n        </Box>\n\n        <MultiSelect {...{state, dispatch, select: \"ssPosSelector\", options: {manipulators: DRManip} }}> </MultiSelect>\n        <ColorPanel {...{state, dispatch}} />\n      </Box>\n\n      </Fragment>\n    )\n  } else if (state.mode === \"fbdr\") {\n    let select1 = \"fbdrSelector\"\n    let select2 = \"fbOnlySelector\"\n    let select3 = \"fbPairSolvedSelector\"\n    let select4 = \"fbdrScrambleSelector\"\n    let select5 = \"solutionNumSelector\"\n\n    let LPEdgeManip = [\n      { name: \"Toggle Select All\", enableIdx: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17] },\n    ]\n    let pos1 = \"fbdrPosSelector1\"\n    let pos3 = \"fbdrPosSelector3\"\n\n    return (\n      <Fragment>\n      <SliderSelect {...{state, dispatch, select: \"fbdrLevelSelector\"}} />\n\n      <Box className={classes.configPanel}>\n        <SingleSelect {...{state, dispatch, select: select2}}> </SingleSelect>\n        <SingleSelect {...{state, dispatch, select: select1}}> </SingleSelect>\n        <SingleSelect {...{state, dispatch, select: select3}}> </SingleSelect>\n        <SingleSelect {...{state, dispatch, select: select4}}> </SingleSelect>\n        <SingleSelect {...{state, dispatch, select: select5}}> </SingleSelect>\n        {/* <SingleSelect {...{state, dispatch, select: \"evaluator\"}}> </SingleSelect> */}\n        <SingleSelect {...{state, dispatch, select: \"moveCountHint\"}}> </SingleSelect>\n        <SingleSelect {...{state, dispatch, select: \"showCube\"}}> </SingleSelect>\n\n        <MultiSelect {...{state, dispatch, select: pos1, options: {manipulators: LPEdgeManip} }}> </MultiSelect>\n        <MultiSelect {...{state, dispatch, select: pos3, options: {manipulators: LPEdgeManip} }}> </MultiSelect>\n        <ColorPanel {...{state, dispatch}} />\n      </Box>\n\n      </Fragment>\n    )\n  } else if (state.mode === \"fb\") {\n    return (\n      <Fragment>\n        <SliderSelect {...{state, dispatch, select: \"fbLevelSelector\"}} />\n        {/* <SingleSelect {...{state, dispatch, select: \"fbStratSelector\"}} />  */}\n\n        <Box className={classes.configPanel}>\n          <SingleSelect {...{ state, dispatch, select: \"fbPieceSolvedSelector\" }}> </SingleSelect>\n          {/* <SingleSelect {...{state, dispatch, select: \"fbBasisSelector\"}} />  */}\n          <SingleSelect {...{ state, dispatch, select: \"solutionNumSelector\"}}> </SingleSelect>\n        {/* <SingleSelect {...{state, dispatch, select: \"evaluator\"}}> </SingleSelect> */}\n          <SingleSelect {...{state, dispatch, select: \"moveCountHint\"}}> </SingleSelect>\n          <SingleSelect {...{state, dispatch, select: \"showCube\"}}> </SingleSelect>\n\n          <ColorPanel {...{state, dispatch}} />\n        </Box>\n\n      </Fragment>\n    )\n   } else if (state.mode === \"fs\") {\n    let select1 = \"fsSelector\"\n    let select2 = \"solutionNumSelector\"\n\n    return (\n      <Fragment>\n        <SliderSelect {...{state, dispatch, select: \"fsLevelSelector\"}} />\n\n        <Box className={classes.configPanel}>\n          <SingleSelect {...{ state, dispatch, select: select1 }}> </SingleSelect>\n          <SingleSelect {...{ state, dispatch, select: select2 }}> </SingleSelect>\n          {/* <SingleSelect {...{state, dispatch, select: \"evaluator\"}}> </SingleSelect> */}\n          <SingleSelect {...{state, dispatch, select: \"moveCountHint\"}}> </SingleSelect>\n          <SingleSelect {...{state, dispatch, select: \"showCube\" }}> </SingleSelect>\n\n          <ColorPanel {...{state, dispatch}} />\n        </Box>\n\n      </Fragment>\n    )\n   } else if (state.mode === \"fsdr\") {\n    let select1 = \"fsSelector\"\n    let select2 = \"solutionNumSelector\"\n\n    return (\n      <Fragment>\n        <SliderSelect {...{state, dispatch, select: \"fsLevelSelector\"}} />\n\n        <Box className={classes.configPanel}>\n          <SingleSelect {...{ state, dispatch, select: select1 }}> </SingleSelect>\n          <SingleSelect {...{ state, dispatch, select: select2 }}> </SingleSelect>\n          {/* <SingleSelect {...{state, dispatch, select: \"evaluator\"}}> </SingleSelect> */}\n          <SingleSelect {...{state, dispatch, select: \"moveCountHint\"}}> </SingleSelect>\n          <SingleSelect {...{state, dispatch, select: \"showCube\" }}> </SingleSelect>\n\n          <ColorPanel {...{state, dispatch}} />\n        </Box>\n\n      </Fragment>\n    )\n   }\n   else if (state.mode === \"fbss\") {\n    let select1 = \"fbssLpSelector\"\n    let select2 = \"fbssSsSelector\"\n    let select3 = \"solutionNumSelector\"\n\n    return (\n      <Fragment>\n        <SliderSelect {...{state, dispatch, select: \"fbssLevelSelector\"}} />\n        <Box className={classes.configPanel}>\n          <SingleSelect {...{ state, dispatch, select: select1 }}> </SingleSelect>\n          <SingleSelect {...{ state, dispatch, select: select2 }}> </SingleSelect>\n          <SingleSelect {...{ state, dispatch, select: select3 }}> </SingleSelect>\n          {/* <SingleSelect {...{state, dispatch, select: \"evaluator\"}}> </SingleSelect> */}\n          <SingleSelect {...{state, dispatch, select: \"moveCountHint\"}}> </SingleSelect>\n          <ColorPanel {...{state, dispatch}} />\n        </Box>\n\n      </Fragment>\n    )\n   }\n   else if (state.mode === \"4c\"){\n    let select1 = \"lseStageSelector\"\n    let select2 = \"lseMCSelector\"\n    let select3 = \"lseBarSelector\"\n    let select4 = \"solutionNumSelector\"\n\n    return (\n      <Fragment>\n        <Box className={classes.configPanel}>\n          <SingleSelect {...{ state, dispatch, select: select1 }}> </SingleSelect>\n          <SingleSelect {...{ state, dispatch, select: select2 }}> </SingleSelect>\n          <SingleSelect {...{ state, dispatch, select: select3 }}> </SingleSelect>\n          <SingleSelect {...{ state, dispatch, select: select4 }}> </SingleSelect>\n          {/* <SingleSelect {...{state, dispatch, select: \"evaluator\"}}> </SingleSelect> */}\n          <SingleSelect {...{state, dispatch, select: \"moveCountHint\"}}> </SingleSelect>\n          <SingleSelect {...{state, dispatch, select: \"showCube\"}}> </SingleSelect>\n\n          <ColorPanel {...{state, dispatch}} />\n        </Box>\n      </Fragment>\n    )\n   } else if (state.mode === \"eopair\"){\n    let select1 = \"lseEOSelector\"\n    let select2 = \"lseEOLRMCSelector\"\n    let select3 = \"lseBarbieSelector\"\n    let select4 = \"lseEOLRScrambleSelector\"\n    let select5 = \"solutionNumSelector\"\n\n    return (\n      <Fragment>\n        <Box className={classes.configPanel}>\n          <MultiSelect {...{ state, dispatch, select: select1, options: {noDialog: true}} }> </MultiSelect>\n          <SingleSelect {...{ state, dispatch, select: select2 }}> </SingleSelect>\n          <SingleSelect {...{ state, dispatch, select: select3 }}> </SingleSelect>\n          <SingleSelect {...{ state, dispatch, select: select4 }}> </SingleSelect>\n          <SingleSelect {...{ state, dispatch, select: select5 }}> </SingleSelect>\n          {/* <SingleSelect {...{state, dispatch, select: \"evaluator\"}}> </SingleSelect> */}\n          <SingleSelect {...{state, dispatch, select: \"moveCountHint\"}}> </SingleSelect>\n          <SingleSelect {...{state, dispatch, select: \"showCube\"}}> </SingleSelect>\n\n          <ColorPanel {...{state, dispatch}} />\n        </Box>\n      </Fragment>\n    )\n   }\n   else return <Fragment/>\n}\n\n\n\nexport default BlockTrainerView\n\n\n","import React, { Dispatch } from 'react'\n\nimport makeStyles from '@mui/styles/makeStyles';\nimport { ImageList, ImageListItem} from '@mui/material';\n\nimport { CaseDesc } from \"../lib/Algs\";\nimport { AppState, Action } from '../Types';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n      },\n    container: {\n        paddingTop: theme.spacing(0),\n        paddingBottom: theme.spacing(2),\n        backgroundColor: theme.palette.background.default,\n      },\n    paper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n      },\n      gridList: {\n        width: 600,\n        height: 450,\n      },\n}))\n\ntype VisualCubeConfig = {\n    alg: string;\n    stage: string;\n    sch: string; //yrbwog\n}\nfunction VisualCube(props: VisualCubeConfig) {\n  let { alg, stage, sch } = props\n  const template =\n  `http://localhost:8000/visualcube.php?fmt=svg&r=y30x-24&size=150&co=40&fo=100&cc=ccc`\n    + `&stage=${stage}&sch=${sch}&case=${alg}`\n  return <img src={template} alt=\"\"/>\n}\n\nfunction PanoramaTable(props: {algs: CaseDesc[]}){\n    let classes = useStyles()\n    let { algs } = props\n    //  /* cellHeight={160} className={classes.gridList} cols={3}>\n    return <ImageList>\n            {algs.map((alg) => (\n                <ImageListItem key={alg.id} cols={1}>\n                    <VisualCube alg={alg.algs[0]} stage=\"f2b\" sch=\"yrbwog\"/>\n                </ImageListItem>\n            ))}\n        </ImageList>\n}\n\nexport default function PanoramaView(props: { state: AppState, dispatch: Dispatch<Action> }) {\n    let classes = useStyles()\n    let algs : CaseDesc[] = [\n        \"RUR\", \"RU'R'\"\n    ].map( str => ({\n        id: str,\n        algs: [str],\n        kind: \"sb\"\n    }))\n\n    return <div className={classes.root}>\n        <div>\n        <PanoramaTable algs={algs}/>\n        </div>\n        <div>\n        <PanoramaTable algs={algs}/>\n        </div>\n    </div>\n}","import { CubieCube, Move } from './CubeLib';\nimport { Face } from './Defs';\nimport { cartesianProduct } from './Math';\nif ((globalThis as any).$RefreshReg$ === undefined) {\n    // hack for disabling refresh plugin in web worker\n    (globalThis as any).$RefreshReg$ = () => {};\n    (globalThis as any).$RefreshSig$ = () => () => {};\n}\n\nexport type PrunerConfig = {\n    size: number,\n    encode: (cube : CubieCube) => number,\n    solved_states: CubieCube[],\n    max_depth: number,\n    moveset: string[],\n    rev_lookup_depth?: number,\n    name: string\n}\n\nexport type PrunerT = {\n    init: () => void,\n    query: (c : CubieCube) => number,\n    equal: (c1 : CubieCube, c2: CubieCube) => boolean,\n    encode: (c : CubieCube) => number,\n    moveset: Move[],\n    max_depth: number,\n    size: number\n}\n\nenum PrunerPiece {\n    S, O, I, X\n}; // Solved, Oriented, Ignore, Exclude\nconst { S, I } = PrunerPiece\n\nexport type PrunerDef = {\n    corner: PrunerPiece[],\n    edge:   PrunerPiece[],\n    center: PrunerPiece[],\n    solved_states: string[],\n    moveset: string[],\n    max_depth: number,\n    name: string\n}\n\nlet htm_rwm = [\"U\", \"U2\", \"U'\", \"F\", \"F2\", \"F'\", \"R\", \"R2\", \"R'\",\n    \"r\", \"r2\", \"r'\", \"D\", \"D2\", \"D'\", \"M\", \"M'\", \"M2\", \"B\", \"B'\", \"B2\"]\nlet rrwmu = [\"U\", \"U'\", \"U2\", \"R\", \"R'\", \"R2\",\n    \"r\", \"r'\", \"r2\", \"M'\", \"M\", \"M2\"]\nlet rrwmu_m_first = [\"U\", \"U'\", \"U2\", \"R\", \"R'\", \"R2\", \"M'\", \"M\", \"M2\",\n\"r\", \"r'\", \"r2\"]\nlet rrwmu_f = [\"U\", \"U'\", \"U2\", \"R\", \"R'\", \"R2\",\n    \"r\", \"r'\", \"r2\", \"M'\", \"M\", \"M2\", \"F'\", \"F\", \"F2\"]\nlet rrwmu_b = [\"U\", \"U'\", \"U2\", \"R\", \"R'\", \"R2\",\n    \"r\", \"r'\", \"r2\", \"M'\", \"M\", \"M2\", \"B'\", \"B\", \"B2\"]\nlet htm_rwm_uw = [\"U\", \"U2\", \"U'\", \"F\", \"F2\", \"F'\", \"R\", \"R2\", \"R'\",\n    \"r\", \"r2\", \"r'\", \"u\", \"u2\", \"u'\", \"M\", \"M'\", \"M2\", \"B\", \"B'\", \"B2\"]\nlet htm_rwm_fws = [\"U\", \"U2\", \"U'\", \"F\", \"F2\", \"F'\", \"R\", \"R2\", \"R'\",\n    \"r\", \"r2\", \"r'\", \"M\", \"M'\", \"M2\", \"D\", \"D'\", \"D2\",\n    \"f\", \"f'\", \"f2\", \"S'\", \"S\", \"S2\"] // TODO: suppress the other S for OH mode?\n\nlet xyz = [\"x\", \"x'\", \"x2\", \"y\", \"y'\", \"y2\", \"z\", \"z'\", \"z2\"]\n\nexport function Pruner(config: PrunerConfig) : PrunerT {\n    let dist: Uint8Array;\n    let { size, encode, solved_states, max_depth, moveset: moveset_str, name} = config\n    let moveset = moveset_str.map(x => Move.all[x])\n    let initialized = false\n    let level_states = [[...solved_states]]\n    function init() {\n        if (initialized) return\n        initialized = true\n        dist = new Uint8Array(size).fill(255)\n        for (let state of solved_states) {\n            dist[encode(state)] = 0\n        }\n        let frontier = [...solved_states]\n        let total_expanded = frontier.length\n        for (let i = 0; i < max_depth; i++) {\n            //console.log(\"pruner: expanding depth \", i)\n            let new_frontier = []\n            for (let state of frontier) {\n                for (let move of moveset) {\n                    let newState = state.apply(move) // clone\n                    let idx = encode(newState)\n                    if (dist[idx] === 255) {\n                        dist[idx] = i + 1;\n                        new_frontier.push(newState)\n                    }\n                }\n            }\n            frontier = new_frontier\n            if (config.rev_lookup_depth && i + 1 <= config.rev_lookup_depth) {\n                level_states.push([...frontier])\n            }\n            total_expanded += frontier.length\n        }\n        //console.log(`${name} pruning table generated. depth = ${max_depth}. size = ${total_expanded}`)\n        if (config.rev_lookup_depth) {\n            // console.log(`${name} pruning reverse lookup generated. depth = ${config.rev_lookup_depth}. size = ${level_states.map(x => x.length).reduce((x,y)=>x+y)}`)\n        }\n    }\n    function query(cube: CubieCube) {\n        let d = dist[encode(cube)]\n        if (d === 255) return max_depth + 1;\n        return d\n    }\n    function equal(cube1: CubieCube, cube2: CubieCube) {\n        return encode(cube1) === encode(cube2)\n    }\n    return  {\n        init,\n        query,\n        equal,\n        encode,\n        moveset,\n        max_depth,\n        size\n    }\n}\n\n\n\nlet prunerFactory = function(def: PrunerDef): PrunerConfig {\n    // edge\n    if (def.corner.length !== 8 || def.edge.length !== 12 || def.center.length !== 6) {\n        throw new Error(\"Invalid pruner def\");\n    }\n    const {S, O, I, X} = PrunerPiece\n    const def_to_idx = (d : PrunerPiece[], count_all?: boolean) => {\n        let curr_idx = 0, idx_arr = []\n        for (let i = 0; i < d.length; i++) {\n            if (d[i] === S || (count_all && (d[i] === O || d[i] === I))) {\n                idx_arr.push(curr_idx++);\n            } else idx_arr.push(-1);\n        }\n        return idx_arr;\n    }\n    let eosize = def.edge.filter(x => x === S || x === O).length\n    let epsize = def.edge.filter(x => x === S).length\n    let eisize = def.edge.filter(x => x !== X).length\n    let esize = Math.pow(2, eosize) * Math.pow(eisize, epsize)\n    let ep_idx = def_to_idx(def.edge, false);\n    let e_idx = def_to_idx(def.edge, true);\n\n    let cosize = def.corner.filter(x => x === S || x === O).length\n    let cpsize = def.corner.filter(x => x === S).length\n    let cisize = def.corner.filter(x => x !== X).length\n    let csize = Math.pow(3, cosize) * Math.pow(cisize, cpsize)\n    let cp_idx = def_to_idx(def.corner, false);\n    let c_idx = def_to_idx(def.corner, true);\n\n    let tosize = def.center.filter(x => x === O).length\n    let tpsize = def.center.filter(x => x === S).length\n    let tisize = def.center.filter(x => x !== X).length\n    let tsize = Math.pow(2, tosize) * Math.pow(tisize, tpsize)\n    let tp_idx = def_to_idx(def.center, false);\n\n    let size = esize * csize * tsize;\n\n    function encode(cube: CubieCube) {\n        let eo = 0, ep = 0, co = 0, cp = 0, to = 0, tp = 0, e, c, t\n        for (let i = 0; i < 12; i++) {\n            switch (def.edge[cube.ep[i]]) {\n                case S:\n                    eo = eo * 2 + cube.eo[i];\n                    ep = ep + Math.pow(eisize, ep_idx[cube.ep[i]]) * e_idx[i];\n                    break;\n                case O:\n                    eo = eo * 2 + cube.eo[i];\n                    break;\n            }\n        }\n        e = ep * Math.pow(2, eosize) + eo\n        for (let i = 0; i < 8; i++) {\n            switch (def.corner[cube.cp[i]]) {\n                case S:\n                    co = co * 3 + cube.co[i];\n                    cp = cp + Math.pow(cisize, cp_idx[cube.cp[i]]) * c_idx[i];\n                    break;\n                case O:\n                    co = co * 3 + cube.co[i];\n                    break;\n            }\n        }\n        c = cp * Math.pow(3, cosize) + co\n        for (let i = 0; i < 6; i++) {\n            switch (def.center[cube.tp[i]]) {\n                case S:\n                    tp = Math.pow(tisize, tp_idx[cube.tp[i]]) + i;\n                    break;\n                case O:\n                    to = to * 3 + (cube.tp[i] / 2) | 0;\n                    break;\n            }\n        }\n        t = tp * Math.pow(3, tosize) + to\n        return e * csize * tsize + c * tsize + t\n    }\n\n    const solved_states = def.solved_states.map( m => new CubieCube().apply(m))\n    const moveset = def.moveset\n    const max_depth = def.max_depth\n    const name = def.name\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset,\n        name\n    }\n}\n\n\nlet fbdrPrunerConfigGen = (max_depth: number) : PrunerConfig => {\n    const esize = Math.pow(24, 4)\n    const csize = Math.pow(24, 2)\n    const size = esize * csize\n\n    function encode(cube:CubieCube) {\n      let c1 = 0, c2 = 0\n      for (let i = 0; i < 8; i++) {\n        if (cube.cp[i] === 4) {\n          c1 = i * 3 + cube.co[i]\n        } else if (cube.cp[i] === 5) {\n          c2 = i * 3 + cube.co[i];\n        }\n      }\n      const enc_c = c1 * 24 + c2\n      let e1 = 0, e2 = 0, e3 = 0, e4 = 0\n      for (let i = 0; i < 12; i++) {\n          switch (cube.ep[i]) {\n              case 5 : e1 = i * 2 + cube.eo[i]; break;\n              case 8 : e2 = i * 2 + cube.eo[i]; break;\n              case 9 : e3 = i * 2 + cube.eo[i]; break;\n              case 7 : e4 = i * 2 + cube.eo[i]; break;\n          }\n      }\n      const enc_e = e1 * (24 * 24 * 24) + e2 * (24 * 24) + e3 * 24 + e4\n      return enc_c + 24 * 24 * enc_e\n    }\n\n    const moves = [[]]//, Move.parse(\"L R'\"), Move.parse(\"L' R\"), Move.parse(\"L2 R2\")]\n    const solved_states = moves.map( (move : Move[]) => new CubieCube().apply(move) )\n    const moveset = htm_rwm\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset,\n        name: \"fbdr\"\n    }\n}\n\nlet fbdrPrunerConfig = fbdrPrunerConfigGen(5)\n\n// let fbPrunerConfigAuto = prunerFactory({\n//     corner: [I,I,I,I,S,S,I,I],\n//     edge:   [I,I,I,I,I,S,I,I,S,S,I,I],\n//     center: [I,I,I,I,S,I],\n//     solved_states: [\"id\"],\n//     moveset: htm_rwm,\n//     max_depth: 5\n// });\n\n\nlet fbAtBLPrunerConfigGen = (max_depth: number) : PrunerConfig => {\n    const esize = Math.pow(24, 2)\n    const csize = Math.pow(24, 2)\n    const tsize = 6\n    const size = esize * csize * tsize\n\n    function encode(cube:CubieCube) {\n      let c1 = 0, c2 = 0\n      for (let i = 0; i < 8; i++) {\n        switch (cube.cp[i]) {\n            case 4: c1 = i * 3 + cube.co[i]; break;\n            case 5: c2 = i * 3 + cube.co[i]; break;\n        }\n      }\n      const enc_c = c1 * 24 + c2\n      let e1 = 0, e2 = 0\n      for (let i = 0; i < 12; i++) {\n          switch (cube.ep[i]) {\n              case 5 : e1 = i * 2 + cube.eo[i]; break;\n              case 8 : e2 = i * 2 + cube.eo[i]; break;\n          }\n      }\n      const enc_e = e1 * (24) + e2\n      let t1 = 0\n      for (let i = 0; i < 6; i++) {\n         if (cube.tp[i] === Face.L) {\n            t1 = i;\n         }\n      }\n      const enc_t = t1\n      return enc_e * (csize * tsize) + enc_c * tsize + enc_t\n    }\n\n    const moves = [[]]//, Move.parse(\"L R'\"), Move.parse(\"L' R\"), Move.parse(\"L2 R2\")]\n    const solved_states = moves.map( (move : Move[]) => new CubieCube().apply(move) )\n\n    const moveset = htm_rwm_fws\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset,\n        // rev_lookup_depth: 3,\n        name: \"fb\"\n    }\n}\n\nlet fbAtDLPrunerConfigGen = (max_depth: number) : PrunerConfig => {\n    const esize = Math.pow(24, 2)\n    const csize = Math.pow(24, 2)\n    const tsize = 6\n    const size = esize * csize * tsize\n\n    function encode(cube:CubieCube) {\n      let c1 = 0, c2 = 0\n      for (let i = 0; i < 8; i++) {\n        switch (cube.cp[i]) {\n            case 4: c1 = i * 3 + cube.co[i]; break;\n            case 5: c2 = i * 3 + cube.co[i]; break;\n        }\n      }\n      const enc_c = c1 * 24 + c2\n      let e1 = 0, e2 = 0\n      for (let i = 0; i < 12; i++) {\n          switch (cube.ep[i]) {\n              case 8 : e1 = i * 2 + cube.eo[i]; break;\n              case 9 : e2 = i * 2 + cube.eo[i]; break;\n          }\n      }\n      const enc_e = e1 * (24) + e2\n      let t1 = 0\n      for (let i = 0; i < 6; i++) {\n         if (cube.tp[i] === Face.L) {\n            t1 = i;\n         }\n      }\n      const enc_t = t1\n      return enc_e * (csize * tsize) + enc_c * tsize + enc_t\n    }\n\n    const moves = [[]]//, Move.parse(\"L R'\"), Move.parse(\"L' R\"), Move.parse(\"L2 R2\")]\n    const solved_states = moves.map( (move : Move[]) => new CubieCube().apply(move) )\n\n    const moveset = htm_rwm_uw\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset,\n        // rev_lookup_depth: 3,\n        name: \"fb\"\n    }\n}\n\nlet fbPrunerConfigGen = (max_depth: number) : PrunerConfig => {\n    const esize = Math.pow(24, 3)\n    const csize = Math.pow(24, 2)\n    const size = esize * csize\n\n    function encode(cube:CubieCube) {\n      let c1 = 0, c2 = 0\n      for (let i = 0; i < 8; i++) {\n        switch (cube.cp[i]) {\n            case 4: c1 = i * 3 + cube.co[i]; break;\n            case 5: c2 = i * 3 + cube.co[i]; break;\n        }\n      }\n      const enc_c = c1 * 24 + c2\n      let e1 = 0, e2 = 0, e3 = 0\n      for (let i = 0; i < 12; i++) {\n          switch (cube.ep[i]) {\n              case 5 : e1 = i * 2 + cube.eo[i]; break;\n              case 8 : e2 = i * 2 + cube.eo[i]; break;\n              case 9 : e3 = i * 2 + cube.eo[i]; break;\n          }\n      }\n      const enc_e = e1 * (24 * 24) + e2 * (24) + e3\n      return enc_e * (24 * 24) + enc_c\n    }\n\n    const moves = [[]]//, Move.parse(\"L R'\"), Move.parse(\"L' R\"), Move.parse(\"L2 R2\")]\n    const solved_states = moves.map( (move : Move[]) => new CubieCube().apply(move) )\n\n    const moveset = htm_rwm\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset,\n        // rev_lookup_depth: 3,\n        name: \"fb\"\n    }\n}\n\nlet fbAtBLPrunerConfig = fbAtBLPrunerConfigGen(5)\nlet fbAtDLPrunerConfig = fbAtDLPrunerConfigGen(5)\nlet fbPrunerConfig = fbPrunerConfigGen(5)\nlet ssPrunerConfig = (is_front: boolean) => {\n    const size = Math.pow(24, 3)\n    const c1 = is_front ? 7 : 6;\n    const e1 = is_front ? 11 : 10\n    const e2 = 7\n    function encode(cube:CubieCube) {\n      let v = [0 ,0, 0]\n      for (let i = 0; i < 8; i++) {\n        if ( cube.cp[i] === c1) v[0] = i * 3 + cube.co[i]\n      }\n      for (let i = 0; i < 12; i++) {\n          if (cube.ep[i] === e1) v[1] = i * 2 + cube.eo[i];\n          else if (cube.ep[i] === e2) v[2] = i * 2 + cube.eo[i]\n      }\n      return v[0] + v[1] * 24 + v[2] * 24 * 24\n    }\n\n    const moves = [[]]\n    const solved_states = moves.map( (move : Move[]) => new CubieCube().apply(move))\n    const max_depth = 8\n    const moveset = rrwmu\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset,\n        name: \"ss\" + (is_front ? \"-front\" : \"-back\")\n    }\n}\n\nlet ssDpPrunerConfig = (is_front: boolean) => {\n    const size = Math.pow(24, 2)\n    const c1 = is_front ? 7 : 6;\n    const e1 = 7\n    function encode(cube:CubieCube) {\n      let v0 = 0, v1 = 0\n      for (let i = 0; i < 8; i++) {\n        if ( cube.cp[i] === c1) v0 = i * 3 + cube.co[i]\n      }\n      for (let i = 0; i < 12; i++) {\n          if (cube.ep[i] === e1) v1 = i * 2 + cube.eo[i];\n      }\n      return v0 + v1 * 24\n    }\n\n    const moves = [\"\", \"R\", \"R2\", \"R'\"]\n    const solved_states = moves.map( (move : string) => new CubieCube().apply(move))\n    const max_depth = 8\n    const moveset = rrwmu_m_first\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset,\n        name: \"ssdp\" + (is_front ? \"-front\" : \"-back\")\n    }\n}\n\nlet sbPrunerConfig = function(){\n    const esize = Math.pow(24, 3)\n    const csize = Math.pow(24, 2)\n    const size = esize * csize\n\n    function encode(cube:CubieCube) {\n      let c1 = 0, c2 = 0\n      for (let i = 0; i < 8; i++) {\n        switch (cube.cp[i]) {\n            case 6: c1 = i * 3 + cube.co[i]; break;\n            case 7: c2 = i * 3 + cube.co[i]; break;\n        }\n      }\n      const enc_c = c1 * 24 + c2\n      let e1 = 0, e2 = 0, e3 = 0\n      for (let i = 0; i < 12; i++) {\n          switch (cube.ep[i]) {\n              case 7  : e1 = i * 2 + cube.eo[i]; break;\n              case 10 : e2 = i * 2 + cube.eo[i]; break;\n              case 11 : e3 = i * 2 + cube.eo[i]; break;\n          }\n      }\n      const enc_e = e1 * (24 * 24) + e2 * (24) + e3\n      return enc_e * (24 * 24) + enc_c\n    }\n\n    const moves = [[]]\n    const solved_states = moves.map( (move : Move[]) => new CubieCube().apply(move) )\n\n    const moveset = rrwmu\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth: 6,\n        moveset,\n        // rev_lookup_depth: 3,\n        name: \"sb_rRUM\"\n    }\n}()\n\nlet lpSbPrunerConfigsAuto = (lp_front: boolean) => [\n    prunerFactory({\n        corner: lp_front ? [I,I,I,I,S,I,I,S] : [I,I,I,I,I,S,S,I],\n        edge:   lp_front ? [I,I,I,I,I,I,I,S,S,I,I,S] : [I,I,I,I,I,I,I,S,I,S,S,I],\n        center: [I,I,I,I,I,I],\n        solved_states: [\"id\"],\n        moveset: lp_front ? rrwmu_f : rrwmu_b,\n        max_depth: 5,\n        name: \"FBLP+SSdiag\"\n    }),\n    prunerFactory({ // SB\n        corner: [I,I,I,I,I,I,S,S],\n        edge:   [I,I,I,I,I,I,I,S,I,I,S,S],\n        center: [I,I,I,I,I,I],\n        solved_states: [\"id\"],\n        moveset: lp_front ? rrwmu_f : rrwmu_b,\n        max_depth: 5,\n        name: \"SB with LP\"\n    }),\n];\n\nlet lpSbSbPrunerConfigGen = (lp_front: boolean, max_depth: number) : PrunerConfig => {\n    const esize = Math.pow(24, 3)\n    const csize = Math.pow(24, 2)\n    const size = esize * csize\n    function encode(cube:CubieCube) {\n      let c1 = 0, c2 = 0\n      for (let i = 0; i < 8; i++) {\n        switch (cube.cp[i]) {\n            case 6: c1 = i * 3 + cube.co[i]; break;\n            case 7: c2 = i * 3 + cube.co[i]; break;\n        }\n      }\n      const enc_c = c1 * 24 + c2\n      let e1 = 0, e2 = 0, e3 = 0\n      for (let i = 0; i < 12; i++) {\n          switch (cube.ep[i]) {\n              case 7 : e1 = i * 2 + cube.eo[i]; break;\n              case 10 : e2 = i * 2 + cube.eo[i]; break;\n              case 11 : e3 = i * 2 + cube.eo[i]; break;\n          }\n      }\n      const enc_e = e1 * (24 * 24) + e2 * (24) + e3\n      return enc_e * (24 * 24) + enc_c\n    }\n\n    const moves = [[]]//, Move.parse(\"L R'\"), Move.parse(\"L' R\"), Move.parse(\"L2 R2\")]\n    const solved_states = moves.map( (move : Move[]) => new CubieCube().apply(move) )\n\n    const moveset = (lp_front ? rrwmu_f : rrwmu_b)\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset,\n        name: \"lpsb-sb\" + (lp_front ? \"+front-lp\" : \"+back-lp\")\n    }\n}\n\nlet lpSbDiagPrunerConfigGen = (lp_front: boolean, max_depth: number) : PrunerConfig => {\n    const esize = Math.pow(24, 3)\n    const csize = Math.pow(24, 2)\n    const size = esize * csize\n    function encode_f(cube:CubieCube) {\n      let c1 = 0, c2 = 0\n      for (let i = 0; i < 8; i++) {\n        switch (cube.cp[i]) {\n            case 4: c1 = i * 3 + cube.co[i]; break;\n            case 7: c2 = i * 3 + cube.co[i]; break;\n        }\n      }\n      const enc_c = c1 * 24 + c2\n      let e1 = 0, e2 = 0, e3 = 0\n      for (let i = 0; i < 12; i++) {\n          switch (cube.ep[i]) {\n              case 7 : e1 = i * 2 + cube.eo[i]; break;\n              case 8 : e2 = i * 2 + cube.eo[i]; break;\n              case 11 : e3 = i * 2 + cube.eo[i]; break;\n          }\n      }\n      const enc_e = e1 * (24 * 24) + e2 * (24) + e3\n      return enc_e * (24 * 24) + enc_c\n    }\n    function encode_b(cube:CubieCube) {\n        let c1 = 0, c2 = 0\n        for (let i = 0; i < 8; i++) {\n          switch (cube.cp[i]) {\n              case 5: c1 = i * 3 + cube.co[i]; break;\n              case 6: c2 = i * 3 + cube.co[i]; break;\n          }\n        }\n        const enc_c = c1 * 24 + c2\n        let e1 = 0, e2 = 0, e3 = 0\n        for (let i = 0; i < 12; i++) {\n            switch (cube.ep[i]) {\n                case 7 : e1 = i * 2 + cube.eo[i]; break;\n                case 9 : e2 = i * 2 + cube.eo[i]; break;\n                case 10 : e3 = i * 2 + cube.eo[i]; break;\n            }\n        }\n        const enc_e = e1 * (24 * 24) + e2 * (24) + e3\n        return enc_e * (24 * 24) + enc_c\n      }\n\n    const moves = [[]]//, Move.parse(\"L R'\"), Move.parse(\"L' R\"), Move.parse(\"L2 R2\")]\n    const solved_states = moves.map( (move : Move[]) => new CubieCube().apply(move) )\n\n    const moveset = (lp_front ? rrwmu_f : rrwmu_b)\n\n    return {\n        size,\n        encode: lp_front ? encode_f : encode_b,\n        solved_states,\n        max_depth,\n        moveset,\n        name: \"lpsb-2sq\" + (lp_front ? \"+front-lp\" : \"+back-lp\")\n    }\n}\n\nlet lpSbPrunerConfigs = (lp_front: boolean) => [\n    lpSbSbPrunerConfigGen(lp_front, 5),\n    lpSbDiagPrunerConfigGen(lp_front, 5)\n];\n\nlet fsPrunerConfig = (is_front: boolean) => {\n    const size = Math.pow(24, 3)\n    const c1 = is_front ? 4 : 5;\n    const e1 = is_front ? 8 : 9;\n    const e2 = 5\n    function encode(cube:CubieCube) {\n      let v0 = 0, v1 = 0, v2 = 0\n      for (let i = 0; i < 8; i++) {\n        if ( cube.cp[i] === c1) v0 = i * 3 + cube.co[i]\n      }\n      for (let i = 0; i < 12; i++) {\n          if (cube.ep[i] === e1) v1 = i * 2 + cube.eo[i];\n          else if (cube.ep[i] === e2) v2 = i * 2 + cube.eo[i]\n      }\n      return v0 + v1 * 24 + v2 * 24 * 24\n    }\n\n    const moves = [[]]\n    const solved_states = moves.map( (move : Move[]) => new CubieCube().apply(move))\n\n    const max_depth = 5\n    const moveset = htm_rwm\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset,\n        name: \"fs\" + (is_front ? \"-front\" : \"-back\")\n    }\n}\n\nlet fsPseudoPrunerConfig = (is_front: boolean) => {\n    const size = Math.pow(24, 3)\n    const c1 = is_front ? 5 : 4; // pseudo FS: front solved == FL solved and DL+DBL paired up D* away from solved\n    const e1 = is_front ? 8 : 9;\n    const e2 = 5\n    function encode(cube:CubieCube) {\n        let v0 = 0, v1 = 0, v2 = 0\n        for (let i = 0; i < 8; i++) {\n          if ( cube.cp[i] === c1) v0 = i * 3 + cube.co[i]\n        }\n        for (let i = 0; i < 12; i++) {\n            if (cube.ep[i] === e1) v1 = i * 2 + cube.eo[i];\n            else if (cube.ep[i] === e2) v2 = i * 2 + cube.eo[i]\n        }\n        return v0 + v1 * 24 + v2 * 24 * 24\n    }\n    const pre_moves = is_front ? [\"D\"] : [\"D'\"]\n    const solved_states = pre_moves.map( (move : string) => new CubieCube().apply(move))\n\n    const max_depth = 5\n    const moveset = htm_rwm\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset,\n        name: \"fs-pseudo\" + (is_front ? \"-front\" : \"-back\")\n    }\n}\n\nlet fELineP1PrunerConfig = (is_front: boolean) => {\n    const size = Math.pow(24, 3)\n    const c1 = is_front ? 5 : 4; // FS Eline: front solved == FL + BL solved and DBL staged in DFL, D* away from solved\n    const e1 = 8;\n    const e2 = 9;\n    function encode(cube:CubieCube) {\n        let v0 = 0, v1 = 0, v2 = 0\n        for (let i = 0; i < 8; i++) {\n          if ( cube.cp[i] === c1) v0 = i * 3 + cube.co[i]\n        }\n        for (let i = 0; i < 12; i++) {\n            if (cube.ep[i] === e1) v1 = i * 2 + cube.eo[i];\n            else if (cube.ep[i] === e2) v2 = i * 2 + cube.eo[i]\n        }\n        return v0 + v1 * 24 + v2 * 24 * 24\n    }\n    const pre_moves = is_front ? [\"D\"] : [\"D'\"]\n    const solved_states = pre_moves.map( (move : string) => new CubieCube().apply(move))\n\n    const max_depth = 5\n    const moveset = htm_rwm\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset,\n        name: \"feline\" + (is_front ? \"-front\" : \"-back\")\n    }\n}\n\nlet fsDrPrunerConfig = (is_front: boolean) => {\n    const size = Math.pow(24, 4)\n    const c1 = is_front ? 4 : 5;\n    const e1 = is_front ? 8 : 9;\n    const e2 = 5\n    const e3 = 7\n    function encode(cube:CubieCube) {\n      let v0 = 0, v1 = 0, v2 = 0, v3 = 0\n      for (let i = 0; i < 8; i++) {\n        if ( cube.cp[i] === c1) v0 = i * 3 + cube.co[i]\n      }\n      for (let i = 0; i < 12; i++) {\n        const ep = cube.ep[i]\n        const eo = cube.eo[i]\n        if (ep === e1) v1 = i * 2 + eo;\n        else if (ep === e2) v2 = i * 2 + eo;\n        else if (ep === e3) v3 = i * 2 + eo;\n      }\n      return v0 + v1 * 24 + v2 * (24 * 24) + v3 * (24 * 24 * 24)\n    }\n\n    const moves = [[]]\n    const solved_states = moves.map( (move : Move[]) => new CubieCube().apply(move))\n\n    const max_depth = 5\n    const moveset = htm_rwm\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset,\n        name: \"fs\" + (is_front ? \"-front\" : \"-back\")\n    }\n}\n\n// let fsPrunerConfigAuto = (is_front: boolean) => prunerFactory({\n//         corner: is_front ? [I,I,I,I,S,I,I,I] : [I,I,I,I,I,S,I,I] ,\n//         edge:   is_front ? [I,I,I,I,I,S,I,I,S,I,I,I] : [I,I,I,I,I,S,I,I,I,S,I,I] ,\n//         center: [I,I,I,I,S,I],\n//         solved_states: [\"id\"],\n//         moveset: htm_rwm,\n//         max_depth: 4\n// });\n\nlet fbssPrunerConfigsManual = (is_front: boolean, max_depth?: number) : PrunerConfig[] => {\n    // make a line+ss solver\n    max_depth = max_depth || 5\n    const esize = Math.pow(24, 3) // 3 edges\n    const csize = Math.pow(24, 3) // 3 corners\n    const size = esize * csize\n\n    function encode_front(cube:CubieCube) {\n      let c1 = 0, c2 = 0, c3 = 0\n      for (let i = 0; i < 8; i++) {\n        switch (cube.cp[i]) {\n            case 4 : c1 = i * 3 + cube.co[i]; break\n            case 5 : c2 = i * 3 + cube.co[i]; break\n            case 7 : c3 = i * 3 + cube.co[i]; break\n        }\n      }\n      const enc_c = c1 * (24 * 24) + c2 * 24 + c3\n      let e1 = 0, e2 = 0, e3 = 0\n      for (let i = 0; i < 12; i++) {\n          switch (cube.ep[i]) {\n              case 5 : e1 = i * 2 + cube.eo[i]; break;\n              case 7 : e2 = i * 2 + cube.eo[i]; break;\n              case 11 : e3 = i * 2 + cube.eo[i]; break;\n          }\n      }\n      const enc_e = e1 * (24 * 24) + e2 * 24 + e3\n      return enc_c + csize * enc_e\n    }\n\n    function encode_back(cube:CubieCube) {\n        let c1 = 0, c2 = 0, c3 = 0\n        for (let i = 0; i < 8; i++) {\n          switch (cube.cp[i]) {\n              case 4 : c1 = i * 3 + cube.co[i]; break\n              case 5 : c2 = i * 3 + cube.co[i]; break\n              case 6 : c3 = i * 3 + cube.co[i]; break\n          }\n        }\n        const enc_c = c1 * (24 * 24) + c2 * 24 + c3\n        let e1 = 0, e2 = 0, e3 = 0\n        for (let i = 0; i < 12; i++) {\n            switch (cube.ep[i]) {\n                case 5 : e1 = i * 2 + cube.eo[i]; break;\n                case 7 : e2 = i * 2 + cube.eo[i]; break;\n                case 10 : e3 = i * 2 + cube.eo[i]; break;\n            }\n        }\n        const enc_e = e1 * (24 * 24) + e2 * 24 + e3\n        return enc_c + csize * enc_e\n    }\n\n    const moves = [[]]//, Move.parse(\"L R'\"), Move.parse(\"L' R\"), Move.parse(\"L2 R2\")]\n    const solved_states = moves.map( (move : Move[]) => new CubieCube().apply(move) )\n\n    //const moveset : Move[] = [\"U\", \"U2\", \"U'\", \"F\", \"F2\", \"F'\", \"R\", \"R2\", \"R'\",\n    //\"r\", \"r2\", \"r'\", \"D\", \"D2\", \"D'\", \"M\", \"M'\", \"M2\", \"B\", \"B'\", \"B2\"].map(s => Move.all[s])\n\n    const moveset = htm_rwm\n\n    return [\n        fbdrPrunerConfigGen(max_depth),\n        {\n            size,\n            encode: (is_front ? encode_front : encode_back),\n            solved_states,\n            max_depth,\n            moveset,\n            name: \"liness-\" + (is_front ? \"front\" : \"back\")\n        },\n    ]\n}\n\n// let fbssPrunerConfigsAuto = (is_front: boolean) => [\n//     prunerFactory({\n//         corner: is_front ? [I,I,I,I,S,S,I,S]: [I,I,I,I,S,S,S,I],\n//         edge:   [I,I,I,I,I,I,I,I,I,I,I,I],\n//         center: [I,I,I,I,I,I],\n//         solved_states: [\"id\"],\n//         moveset: htm_rwm,\n//         max_depth: 5,\n//         name: \"fbss-corner\"\n//     }),\n//     prunerFactory({\n//         corner: [I,I,I,I,I,I,I,I],\n//         edge:   [I,I,I,I,I,S,I,S,S,S,is_front ? I : S,is_front ? S : I],\n//         center: [I,I,I,I,I,I],\n//         solved_states: [\"id\"],\n//         moveset: htm_rwm,\n//         max_depth: 5,\n//         name: \"fbss-edge\"\n//     }),\n// ]\n\nlet fbssPrunerConfigs = fbssPrunerConfigsManual\n\nlet lsePrunerConfig : PrunerConfig = function() {\n    const size = Math.pow(12, 6) * 4 * 4 / 2 // TODO: optimize this plz\n    const edge_encode = [0, 1, 2, 3, 4, -1, 5, -1, -1, -1, -1, -1];\n    function encode(cube:CubieCube) {\n      let enc = [0, 0, 0, 0, 0, 0]\n      for (let i = 0; i < 12; i++) {\n        let idx = edge_encode[cube.ep[i]];\n        if (idx > 0) {\n            enc[idx] = edge_encode[i] * 2 + cube.eo[i];\n        }\n      }\n      let edge_enc = 0;\n      for (let i = 0; i < 6; i++) {\n        edge_enc = edge_enc * 12 + enc[i];\n      }\n      return edge_enc * 4 * 4 + cube.tp[0] * 4 + cube.cp[0]// center[0] and cp[0] must be (0-3)\n    }\n\n    const moves = [Move.all[\"id\"]]\n    const solved_states = moves.map( m => new CubieCube().apply(m))\n\n    const max_depth = 7\n    const moveset = [\"U\", \"U'\", \"U2\", \"M'\", \"M\", \"M2\"]\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset,\n        name: \"lse\"\n    }\n}()\n\nfunction eolrPrunerConfig(center_flag: number, barbie_mode?: string): PrunerConfig {\n    const size = 6 * 6 * Math.pow(2, 6) * 4 * 2 // TODO: optimize this plz\n\n    const edge_encode = [0, 1, 0, 2, 0, -1, 0, -1, -1, -1, -1, -1];\n    const edge_idx = [0, 1, 2, 3, 4, -1, 5, -1, -1, -1, -1, -1];\n    function encode(cube:CubieCube) {\n      let eo = 0, ep = 0\n      for (let i = 0; i < 12; i++) {\n        let idx = edge_encode[cube.ep[i]];\n        if (idx >= 0) {\n            eo = eo * 2 + cube.eo[i]\n        }\n        if (idx > 0) {\n            ep += Math.pow(6, idx - 1) * edge_idx[i]\n        }\n      }\n      // make no distinction between centers M2 apart\n      return (eo * 36 + ep) * 4 * 2 + ~~(cube.tp[0] / 2) * 4 + cube.cp[0]// center[0] and cp[0] must be (0-3)\n    }\n\n    const moves_ac = cartesianProduct( [\"U'\", \"U\"], [\"M2\"], [\"\", \"U\", \"U'\", \"U2\"] ).map(x => x.join(\" \"))\n    const moves_mc = cartesianProduct( [\"M'\"], [\"U\", \"U'\"], [\"M2\"], [\"\", \"U\", \"U'\", \"U2\"]).map(x => x.join(\" \"))\n    let moves: string[] = []\n    if (center_flag & 0x01) moves = moves.concat(moves_ac)\n    if (center_flag & 0x10) moves = moves.concat(moves_mc)\n\n    const barb_moves_ac = [\"U\", \"U'\"]\n    const barb_moves_mc = [\"M U\", \"M U'\"]\n    let barb_moves: string[] = []\n    if (center_flag & 0x01) barb_moves = barb_moves.concat(barb_moves_ac)\n    if (center_flag & 0x10) barb_moves = barb_moves.concat(barb_moves_mc)\n\n    const pre_moves = barbie_mode === \"barbie\" ? barb_moves :\n        (barbie_mode === \"ab4c\" ? [\"id\"] : moves)\n\n    const solved_states = pre_moves.map( m => new CubieCube().apply(m))\n\n    const max_depth = 20\n    const moveset = [\"U\", \"U'\", \"U2\", \"M'\", \"M\", \"M2\"]\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset,\n        name: \"eolr-\" + center_flag + \"-\" + barbie_mode\n    }\n}\n\nlet eodmPrunerConfig : PrunerConfig = (function(){\n    const size = 6 * 6 * Math.pow(2, 6) * 4\n\n    const edge_encode = [0, 0, 0, 0, 1, -1, 2, -1, -1, -1, -1, -1];\n    const edge_idx = [0, 1, 2, 3, 4, -1, 5, -1, -1, -1, -1, -1];\n    function encode(cube:CubieCube) {\n      let eo = 0, ep = 0\n      for (let i = 0; i < 12; i++) {\n        let idx = edge_encode[cube.ep[i]];\n        if (idx >= 0) {\n            eo = eo * 2 + cube.eo[i]\n        }\n        if (idx > 0) {\n            ep += Math.pow(6, idx - 1) * edge_idx[i]\n        }\n      }\n      // make no distinction between centers M2 apart\n      return (eo * 36 + ep) * 4 + cube.tp[0]\n    }\n\n    const solved_states = [new CubieCube()]\n    const max_depth = 20\n    const moveset = [\"U\", \"U'\", \"U2\", \"M'\", \"M\", \"M2\"]\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset,\n        name: \"eodm\"\n    }\n})()\n\nlet centerPrunerConfig : PrunerConfig = (function(){\n    const size = 6 * 6\n    const solved_states = [new CubieCube()]\n    const max_depth = 3\n    const moveset = xyz\n    function encode(cube:CubieCube) {\n        return cube.tp[0] * 6 + cube.tp[2]; // UD FB LR\n    }\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset,\n        name: \"center\"\n    }\n})()\n\nexport { fbdrPrunerConfig, fsPrunerConfig, fsDrPrunerConfig, fsPseudoPrunerConfig, fELineP1PrunerConfig, sbPrunerConfig, ssPrunerConfig, ssDpPrunerConfig,\n    fbPrunerConfig, fbAtDLPrunerConfig, fbAtBLPrunerConfig, lsePrunerConfig, eolrPrunerConfig,\n    prunerFactory, fbssPrunerConfigs, lpSbPrunerConfigs, eodmPrunerConfig, centerPrunerConfig }","import {initialize, solve as min2phaseSolve, Min2PhaseCube} from \"./min2phase.js\"\nimport { CubieCube } from \"../CubeLib\";\n\nexport {initialize}\n\nfunction toMin2Phase(state: CubieCube): Min2PhaseCube {\n  // Note: this is its own inverse.\n  // const conjugate = {\n  //   EDGE: { permutation: [ 1, 0, 3, 2, 5, 4, 7, 6, 8, 9, 11, 10 ],\n  //           orientation: [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ] },\n  //   CORNER: { permutation: [ 0, 3, 2, 1, 4, 5, 6, 7 ],\n  //             orientation: [ 0, 0, 0, 0, 0, 0, 0, 0 ] },\n  //   CENTER: { permutation: [ 0, 1, 2, 3, 4, 5 ],\n  //             orientation: [ 0, 0, 0, 0, 0, 0 ] }\n  // };\n  // const pseudo = Combine(def, Combine(def, conjugate, Invert(def, state)), conjugate);\n\n  return {\n    cp: state.cp,\n    co: state.co,\n    ep: state.ep,\n    eo: state.eo\n  }\n}\n\nexport function solve(state: CubieCube): string {\n  return min2phaseSolve(toMin2Phase(state));\n}\n","import { CubieCube, Move, MoveSeq } from './CubeLib';\nimport { arrayEqual } from './Math';\n\nimport { PrunerT, fbdrPrunerConfig, fbssPrunerConfigs, fsPrunerConfig, fsDrPrunerConfig, fsPseudoPrunerConfig, fELineP1PrunerConfig, sbPrunerConfig, ssPrunerConfig, ssDpPrunerConfig, fbPrunerConfig, lsePrunerConfig, PrunerConfig, eolrPrunerConfig, lpSbPrunerConfigs, fbAtDLPrunerConfig, fbAtBLPrunerConfig, eodmPrunerConfig, centerPrunerConfig } from './Pruner';\n\nimport {initialize as min2phase_init, solve as min2phase_solve} from \"../lib/min2phase/min2phase-wrapper\"\nimport { __DEV__ } from '../settings';\n\nimport { CachedPruner } from './CachedSolver';\n\ntype SolverConfig = {\n    is_solved: (cube : CubieCube) => boolean,\n    moveset: Move[],\n    pruners: PrunerT[],\n    pruneSeenEncodings?: boolean\n}\n\ntype Accumulator = {\n    solutions: MoveSeq[],\n    capacity: number\n}\n\nexport type SolverT = {\n    solve: (cube : CubieCube, l : number, r : number, c : number) => MoveSeq[],\n    is_solved: (cube : CubieCube) => boolean,\n    getPruners: () => PrunerT[]\n}\n\n\nfunction Solver(config: SolverConfig) : SolverT{\n    const MAX_STATE_COUNT = 3000000\n    let { moveset, is_solved, pruners } = config\n    let state_count = 0, prune_count = 0;\n    let accum : Accumulator\n    let max_depth : number\n    let min_depth : number\n\n    enum SState {\n        CONTINUE,\n        STOP\n    };\n\n    function solve_depth(cube: CubieCube, min_depth_: number, max_depth_: number, accum_: Accumulator) {\n        accum = accum_\n        max_depth = max_depth_\n        min_depth = min_depth_\n        state_count = 0\n        prune_count = 0\n        search(cube, 0, [])\n        return accum\n    }\n\n    let nextMoves : {[move: string] : Move[] }= Object.create({})\n    function generateNextMoveTable() {\n        function getAvailableMove(name : string) {\n            switch (name[0]) {\n                case \"U\": return moveset.filter(k => k.name[0] !== \"U\" && k.name[0] !== \"u\");\n                case \"u\": return moveset.filter(k => k.name[0] !== \"u\");\n                case \"D\": return moveset.filter(k => k.name[0] !== \"U\" && k.name[0] !== \"D\");\n                case \"R\": {\n                    let base = moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"r\");\n                    // we want to represent all Rr's as RM's. This demands M&r to always be enabled together.\n                    if (name === \"R\") return base.filter(k => k.name !== \"M'\")\n                    if (name === \"R'\") return base.filter(k => k.name !== \"M\")\n                    if (name === \"R2\") return base.filter(k => k.name !== \"M2\")\n                    return base\n                }\n                case \"L\": return moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"M\" && k.name[0] !== \"L\" && k.name[0] !== \"r\");\n                case \"r\": return moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"M\" && k.name[0] !== \"L\" && k.name[0] !== \"r\");\n                case \"M\": return moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"M\" && k.name[0] !== \"L\" && k.name[0] !== \"r\");\n                // f precede F. f'F represented as S'. S' must be standalone (no F/f/S allowed in its neighbor)\n                case \"F\": return moveset.filter(k => k.name[0] !== \"F\" && k.name[0] !== \"f\" && k.name[0] !== \"S\");\n                case \"f\": {\n                    const base = moveset.filter(k => k.name[0] !== \"S\" && k.name[0] !== \"f\")\n                    if (name === \"f'\") return base.filter(k => k.name !== \"F\")\n                    else if (name === \"f\") return base.filter(k => k.name !== \"F'\")\n                    else if (name === \"f2\") return base.filter(k => k.name !== \"F2\")\n                    else return base\n                }\n                case \"S\": return moveset.filter(k => k.name[0] !== \"F\" && k.name[0] !== \"B\" && k.name[0] !== \"S\" && k.name[0] !== \"f\");\n                case \"B\": return moveset.filter(k => k.name[0] !== \"F\" && k.name[0] !== \"B\");\n\n                case \"E\": return moveset.filter(k => k.name[0] !== \"U\" && k.name[0] !== \"D\" && k.name[0] !== \"E\");\n                default: return moveset\n            }\n        }\n        for (let move of moveset) {\n            nextMoves[move.name] = getAvailableMove(move.name)\n        }\n    }\n    generateNextMoveTable()\n\n    function expand(cube: CubieCube, depth: number, solution: Move[]) : SState{\n        const availableMoves : Move[] = solution.length > 0 ? nextMoves[solution[solution.length - 1].name] : moveset\n        let seen_encodings : Set<BigInt|number> | null = null\n        let prune = config.pruneSeenEncodings\n        if (prune) {\n            seen_encodings = new Set()\n            if (pruners.length === 1)\n                seen_encodings.add(pruners[0].encode(cube))\n            else  {\n                let n = BigInt(pruners[0].encode(cube)) * BigInt(pruners[1].size) + BigInt(pruners[1].encode(cube))\n                seen_encodings.add(n)\n            }\n        }\n        for (let move of availableMoves) {\n            let new_cube = cube.apply_one(move)\n            let enc = (pruners.length === 1) ? pruners[0].encode(new_cube) :\n                BigInt(pruners[0].encode(new_cube)) * BigInt(pruners[1].size) + BigInt(pruners[1].encode(new_cube))\n\n            if (seen_encodings == null || !seen_encodings.has(enc)) {\n                seen_encodings?.add(enc)\n                solution.push(move)\n                let st : SState = search(new_cube, depth + 1, solution)\n                solution.pop()\n                if (st === SState.STOP) {\n                    return SState.STOP\n                }\n            }\n        }\n        return SState.CONTINUE\n    }\n\n    function try_push(solution: Move[], depth: number) {\n        if (depth < min_depth) return SState.CONTINUE\n        if (accum.solutions.length < accum.capacity) {\n            let flag = true\n            for (let sol of accum.solutions) {\n                if (arrayEqual(sol.moves, solution)) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                accum.solutions.push(new MoveSeq([...solution]))\n            }\n        }\n\n        if (accum.solutions.length === accum.capacity) {\n            return SState.STOP\n        } else {\n            return SState.CONTINUE\n        }\n    }\n\n    function search(cube: CubieCube, depth: number, solution: Move[]) : SState {\n        state_count++;\n        if (state_count > MAX_STATE_COUNT) {\n            return SState.STOP\n        }\n        if (is_solved(cube)) {\n            return try_push(solution, depth)\n        } else {\n            if (depth >= max_depth) return SState.CONTINUE;\n            let d = Math.max(...pruners.map(p => p.query(cube)))\n            if (d + depth > max_depth) {\n                prune_count++;\n                return SState.CONTINUE\n            } else {\n                return expand(cube, depth, solution)\n            }\n        }\n    }\n\n    function solve(cube: CubieCube, depth_l: number, depth_r: number, capacity: number) {\n        let accum : Accumulator = {\n            solutions: [],\n            capacity\n        }\n        for (let i = depth_l; i <= depth_r; i++) {\n            accum = solve_depth(cube, depth_l, i, accum)\n            if (accum.solutions.length === accum.capacity || state_count >= MAX_STATE_COUNT) {\n                break;\n            }\n        }\n        if (__DEV__) console.log(`Number of states = ${state_count}, pruned = ${prune_count}`);\n        return accum.solutions\n    }\n\n    function getPruners() {\n        return pruners\n    }\n    return { solve, is_solved, getPruners }\n};\n\nfunction solverFactory(prunerConfig: PrunerConfig) {\n    let pruner = CachedPruner.get(prunerConfig) //Pruner(prunerConfig)\n    pruner.init()\n\n    let is_solved = (cube: CubieCube) => pruner.query(cube) === 0;\n\n    let config = {\n        is_solved,\n        moveset: prunerConfig.moveset.map(s => Move.all[s]),\n        pruners: [pruner],\n        pruneSeenEncodings: true\n    }\n\n    let solver = Solver(config)\n    return solver\n}\n\nexport function solverFactory2(prunerConfigs: PrunerConfig[]) {\n    let pruners = prunerConfigs.map(pc => {\n        return CachedPruner.get(pc)\n    })\n    pruners.forEach(p => p.init())\n    //let solvedEncodings = prunerConfig.solved_states.map(s => prunerConfig.encode(s))\n    let is_solved = (cube: CubieCube) => pruners.every(p => p.query(cube) === 0)\n\n    let config : SolverConfig = {\n        is_solved,\n        moveset: prunerConfigs[0].moveset.map(s => Move.all[s]),\n        pruners,\n        pruneSeenEncodings: true\n    }\n    let solver = Solver(config)\n    return solver\n}\n\n\nlet FbSolver = () => solverFactory(fbPrunerConfig)\n\nlet FbSolverAtDL = () => solverFactory(fbAtDLPrunerConfig)\n\nlet FbSolverAtBL = () => solverFactory(fbAtBLPrunerConfig)\n\nlet FbdrSolver = () => solverFactory(fbdrPrunerConfig)\n\nlet SsSolver = (is_front: boolean) => solverFactory(ssPrunerConfig(is_front))\n\nlet SsDpSolver = (is_front: boolean) => solverFactory(ssDpPrunerConfig(is_front))\n\n// hand-crafted encoders are much faster though...\nlet FbssSolver =  (is_front: boolean) => solverFactory2(fbssPrunerConfigs(is_front))\n\nlet LpsbSolver = (is_front: boolean) => solverFactory2(lpSbPrunerConfigs(is_front))\nlet SbSolver = () => solverFactory(sbPrunerConfig)\n\nlet FsSolver = (is_front: boolean) => solverFactory(fsPrunerConfig(is_front))\nlet FsPseudoSolver = (is_front: boolean) => solverFactory(fsPseudoPrunerConfig(is_front))\nlet FELineP1Solver = (is_front: boolean) => solverFactory(fELineP1PrunerConfig(is_front))\nlet FsDrSolver = (is_front: boolean) => solverFactory(fsDrPrunerConfig(is_front))\n\nlet LSESolver = () => solverFactory(lsePrunerConfig)\n\nlet EOLRSolver = (center_flag: number, barbie_mode?: string) =>\n    solverFactory(eolrPrunerConfig(center_flag, barbie_mode))\n\nlet EOdMSolver = () => solverFactory(eodmPrunerConfig)\n\nlet CenterSolver = () => solverFactory(centerPrunerConfig)\n\nlet Min2PhaseSolver : () => SolverT = function() {\n    // polyfill for min2phase\n\n    min2phase_init();\n    function solve(cube : CubieCube, l : number, r : number, c : number) {\n        console.assert(arrayEqual(cube.tp, new CubieCube().tp), \"Cube center is not solved: \" + cube.tp)\n        const transformed_cube = cube.to_cstimer_cube()\n        console.assert( transformed_cube.is_solveable(), \"Cube must be solveable\")\n        let solution = min2phase_solve(transformed_cube);\n        return [ new MoveSeq(solution).inv() ]\n    }\n    function is_solved(cube: CubieCube) {\n        return true\n    }\n    function getPruners() {\n        return []\n    }\n    return {\n        solve,\n        is_solved,\n        getPruners\n    }\n}\n\n\n\nexport { FbdrSolver, FbSolver, FbSolverAtDL, FbSolverAtBL, SbSolver, FbssSolver, FsSolver, FsDrSolver, FsPseudoSolver, FELineP1Solver, SsSolver, SsDpSolver, Min2PhaseSolver, LSESolver, EOLRSolver, LpsbSolver, EOdMSolver, CenterSolver }","import { Pruner, PrunerConfig, PrunerT } from './Pruner';\nimport { FbdrSolver, SolverT, FsSolver, FsDrSolver, FsPseudoSolver, FELineP1Solver, SsSolver, SsDpSolver, SbSolver, FbSolver, FbSolverAtBL, FbSolverAtDL, FbssSolver, LpsbSolver, Min2PhaseSolver, LSESolver, EOLRSolver, EOdMSolver, CenterSolver} from './Solver';\n\nlet all_solvers = [\n\"fbdr\",\"fb\", \"fs-front\", \"fs-back\", \"ss-front\", \"ss-back\", \"min2phase\",\n\"fsdr-front\", \"fsdr-back\",\n\"lse\", \"eolrac\", \"eolrmc\", \"eolr\", \"eolrac-b\", \"eolrmc-b\", \"eolr-b\", \"sb\", \"eodm\" ]\n\nlet CachedPruner = function() {\n    let cache : Map<string, PrunerT> = new Map()\n    function get(pc: PrunerConfig) {\n        let pcs = JSON.stringify(pc)\n        if (!cache.has(pcs)) {\n            let pruner = Pruner(pc)\n            cache.set(pcs, pruner)\n            return pruner\n        } else {\n            return cache.get(pcs) as PrunerT\n        }\n    }\n    return { get }\n}()\n\nlet CachedSolver = function() {\n    let cache : Map<string, SolverT> = new Map()\n    function get(s: string) {\n        if (!cache.has(s)) {\n            switch (s) {\n                case \"fbdr\": cache.set(s, FbdrSolver()); break\n                case \"fb\": cache.set(s, FbSolver()); break\n                case \"fb@dl\": cache.set(s, FbSolverAtDL()); break\n                case \"fb@bl\": cache.set(s, FbSolverAtBL()); break\n                case \"fs-front\": cache.set(s, FsSolver(true)); break\n                case \"fs-back\": cache.set(s, FsSolver(false)); break\n                case \"fs-pseudo-front\": cache.set(s, FsPseudoSolver(true)); break\n                case \"fs-pseudo-back\": cache.set(s, FsPseudoSolver(false)); break\n                case \"felinep1-front\": cache.set(s, FELineP1Solver(true)); break\n                case \"felinep1-back\": cache.set(s, FELineP1Solver(false)); break\n                case \"fsdr-front\": cache.set(s, FsDrSolver(true)); break\n                case \"fsdr-back\": cache.set(s, FsDrSolver(false)); break\n                case \"ss-front\": cache.set(s, SsSolver(true)); break\n                case \"ss-back\": cache.set(s, SsSolver(false)); break\n                case \"ssdp-front\": cache.set(s, SsDpSolver(true)); break\n                case \"ssdp-back\": cache.set(s, SsDpSolver(false)); break\n                case \"fbss-front\": cache.set(s, FbssSolver(true)); break\n                case \"fbss-back\": cache.set(s,FbssSolver(false)); break\n                case \"lpsb-front\": cache.set(s,LpsbSolver(true)); break\n                case \"lpsb-back\": cache.set(s,LpsbSolver(false)); break\n                case \"sb\": cache.set(s, SbSolver()); break\n\n                case \"min2phase\": cache.set(s, Min2PhaseSolver()); break\n                case \"lse\": cache.set(s, LSESolver()); break\n                case \"lse-ab4c\": cache.set(s, EOLRSolver(0x01, \"ab4c\")); break\n                case \"eolrac\": cache.set(s, EOLRSolver(0x01)); break\n                case \"eolrmc\": cache.set(s, EOLRSolver(0x10)); break\n                case \"eolr\": cache.set(s, EOLRSolver(0x11)); break\n                case \"eolrac-b\": cache.set(s, EOLRSolver(0x01, \"barbie\")); break\n                case \"eolrmc-b\": cache.set(s, EOLRSolver(0x10, \"barbie\")); break\n                case \"eolr-b\": cache.set(s, EOLRSolver(0x11, \"barbie\")); break\n                case \"eodm\" : cache.set(s, EOdMSolver()); break\n\n                case \"center\": cache.set(s, CenterSolver()); break\n            }\n        }\n        return cache.get(s) as SolverT\n    }\n    return {get}\n}()\n\nexport {CachedSolver, CachedPruner, all_solvers}","import React from 'react';\nimport makeStyles from '@mui/styles/makeStyles';\n\nimport {\n  Button, IconButton, DialogContent, TextField, DialogContentText\n} from '@mui/material';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport { Table, Paper, TableBody, TableCell, TableHead, TableRow } from '@mui/material';\n\nimport PlaylistPlayIcon from '@mui/icons-material/PlaylistPlay';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport AddIcon from '@mui/icons-material/Add';\nimport { AppState, Action, FavCase } from '../Types';\nimport { all_solvers } from '../lib/CachedSolver';\n\n\nconst useStyles = makeStyles(theme => ({\n  table: {\n    width: '100%',\n    minWidth: 200,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport function warnDialog(props: { confirm: () => void} ) {\n\n}\n\nfunction parseAddString(state: AppState, s : string) : [ FavCase[], boolean] {\n  const res : FavCase[] = []\n\n  const allSolvers = new Set(all_solvers);\n  for (const line of s.split('\\n')) {\n    let cols = line.split(',')\n    if (cols.length !== 2) continue\n    let solver = cols[0].trim().split(\"|\")\n    let setup = cols[1].trim()\n\n    if (solver.every(x => allSolvers.has(x))) {\n      let case_ : FavCase = {\n        mode: state.mode,\n        solver,\n        setup\n      }\n      res.push(case_)\n    }\n  }\n  if (res.length > 0) return [res, true]\n  else return [ [], false]\n}\n\nexport default function FavListView(props: { state: AppState, dispatch: React.Dispatch<Action> }) {\n  const {state, dispatch} = props\n  const classes = useStyles();\n  const favList = state.favList.filter(c => c.mode === state.mode)\n\n  const play = (i: number) => {\n    dispatch({ type: \"favList\", content: [ favList[i] ], action: \"replay\" })\n  }\n  const remove = () => {\n    if (dialogID >= 0 && dialogID < favList.length)\n    dispatch({ type: \"favList\", content: [ favList[dialogID] ], action: \"remove\" })\n  }\n  const [ dialogID, setDialogID ] = React.useState(-1)\n\n  const handleClose = () => setDialogID(-1)\n  const handleRemove = () => { remove(); setDialogID(-1); }\n  const dialogDelete = (<Dialog open={dialogID >= 0} onClose={handleClose} >\n    <DialogTitle id=\"alert-dialog-title\">{\"Delete this alg from favorites?\"}</DialogTitle>\n    <DialogActions>\n      <Button onClick={handleClose} color=\"primary\">\n        No\n    </Button>\n      <Button onClick={handleRemove} color=\"primary\" autoFocus>\n        Yes\n    </Button>\n    </DialogActions>\n  </Dialog>)\n\n  const [ addDialogOpen, setAddDialogOpen ] = React.useState(false)\n  const [ addString, setAddString ] = React.useState(\"\")\n  const handleAdd = () => setAddDialogOpen(true)\n  const handleAddClose = () => setAddDialogOpen(false)\n  const handleAddSuccess = () => {\n    let [res, status] = parseAddString(state, addString)\n    if (status) {\n      dispatch({ type: \"favList\", content: res, action: \"add\" })\n    }\n    handleAddClose()\n  }\n  const handleTextChange = (event: { target: { value: React.SetStateAction<string>; }; }) => {\n    setAddString(event.target.value)\n  }\n  const dialogAdd = <Dialog open={addDialogOpen} onClose={handleAddClose} aria-labelledby=\"form-dialog-title\">\n    <DialogTitle id=\"form-dialog-title\">Add New Cases</DialogTitle>\n    <DialogContent>\n      <DialogContentText>\n        Input your cases here. (one per line) <br></br>\n        Format: [category], [setup algorithm].\n        category := fb | fbdr | ss-front | ss-back\n      </DialogContentText>\n      <TextField\n        autoFocus\n        multiline\n        margin=\"dense\"\n        id=\"name\"\n        fullWidth\n        onChange={handleTextChange}\n        onKeyDown={ (event) => { event.stopPropagation() } }\n      />\n    </DialogContent>\n    <DialogActions>\n      <Button onClick={handleAddClose} color=\"primary\">\n        Cancel\n    </Button>\n      <Button onClick={handleAddSuccess} color=\"primary\">\n        Add All\n    </Button>\n    </DialogActions>\n  </Dialog>\n\n\n  return (\n    <div>\n    {dialogDelete}\n    {dialogAdd}\n    <Paper>\n      <Table className={classes.table} size=\"small\" >\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\"> Scramble </TableCell>\n            <TableCell align=\"center\" rowSpan={1}>\n              <IconButton   onClick={handleAdd} component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                <AddIcon />\n              </IconButton>\n              \n            {/* <IconButton component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                <FileCopyIcon />\n              </IconButton> */}\n             </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {favList.map((value, i) => {\n            //const labelId = `favlist-label-${i}`;\n            return (\n              <TableRow key={i}>\n                {/* <TableCell align=\"center\" >\n                  {/* padding=checkbox <Checkbox></Checkbox> */}\n\n                <TableCell align=\"center\">\n                { value.solver.join(\"|\") + \",\" + value.setup }\n                </TableCell>\n                <TableCell align=\"center\">\n                  <IconButton onFocus={(e: { target: { blur: () => void; }; }) => e.target.blur() } onClick={() => play(i)}\n                  component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                    <PlaylistPlayIcon />\n                  </IconButton>\n\n                  <IconButton onFocus={(e: { target: { blur: () => void; }; }) => e.target.blur() } onClick={() => setDialogID(i)}\n                  component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                    <DeleteOutlineIcon />\n                  </IconButton>\n\n                </TableCell>\n              </TableRow>\n            )\n          })}</TableBody>\n      </Table>\n    </Paper>\n    </div>\n  )\n}","import React from \"react\";\n\nimport makeStyles from '@mui/styles/makeStyles';\nimport Toolbar from '@mui/material/Toolbar';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\n\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport InfoIcon from '@mui/icons-material/Info';\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport Brightness6Icon from '@mui/icons-material/Brightness6';\nimport IconButton from \"@mui/material/IconButton\";\nimport { SelectChangeEvent } from '@mui/material/Select';\nimport { tab_modes } from \"./AppView\";\n\nimport { theme } from '../theme';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nconst useStyles = makeStyles(theme => {\n    let is_bright = theme.palette.primary.main === '#556cd6';\n    return ({\n    page: {\n      backgroundColor: theme.palette.background.default\n    },\n    container: {\n      display: \"flex\"\n    },\n    icon: {\n      minWidth: 0\n    },\n    root: {\n      display: \"flex\"\n    },\n    bar: {\n      backgroundColor: is_bright ? theme.palette.primary.main : '#6e728a', // ,\n      color: theme.palette.background.paper,\n      //borderRadius: \"5px\"\n      display: \"flex\",\n      flexWrap: \"nowrap\",\n      justifyContent: \"space-between\",\n    },\n    select: {\n      backgroundColor: is_bright ? \"#657ce9\" : \"#9095b2\", //9297b3\", //9FA4C2\",\n      color: theme.palette.background.paper,\n      paddingLeft: 25,\n      marginRight: 5,\n      marginLeft: 15,\n      height: 60,\n      fontWeight: 400,\n      fontSize: \"1.0rem\",\n      paddingTop: 6,\n      paddingBottom: 7,\n      [theme.breakpoints.down('sm')]: {\n        paddingLeft: 15,\n        marginRight: -5,\n        marginLeft: 10,\n        fontSize: \"0.9rem\",\n      },\n      [theme.breakpoints.down(400)]: {\n        maxWidth: 160,\n      }\n      //borderBottom: \"1px solid \" + theme.palette.background.default,\n    }\n})})\n\n\nfunction TopBarView(props: { value: number, onChange: (x: number) => void,\n    toggleFav: () => void, toggleBright: () => void, handleInfoOpen: () => void } )\n{\n    let classes = useStyles()\n    let { value, onChange, toggleFav, toggleBright, handleInfoOpen } = props\n    let value_str = tab_modes[value][1] || \"\"\n    let handleChange = (event: SelectChangeEvent<String>) =>  {\n        let tab_idx = tab_modes.findIndex(x => x[1] === (event.target.value as string))\n        onChange(tab_idx)\n        //\n    }\n    const is_sm = useMediaQuery(theme.breakpoints.down('sm'));\n    return (\n        <div>\n            <Box boxShadow={4} >\n            <Toolbar className={classes.bar} >\n            <Typography style={{wordWrap: \"break-word\", fontSize: \"0.9rem\", fontFamily: \"Public Sans\"}} >\n              {is_sm ? \"Roux 🐱\" : \"Roux Trainer\"}\n            </Typography>\n            <Box paddingX={is_sm ? 0: 0.5}/>\n            <Box>\n                <Select\n                     fullWidth\n                     value={value_str}\n                     className={classes.select}\n                     onChange={handleChange}\n                     onFocus={(e) => e.target.blur()}\n                     variant=\"standard\"\n                >\n                    { tab_modes.map( (s, i) => \n                      <MenuItem key={i} value={s[1]} sx={{mx: 1.5}} style={{fontSize: \"1.1rem\", marginBottom: 5}}>\n                        {is_sm ? s[2] : s[1]}\n                      </MenuItem> \n                    )}\n                </Select>\n            </Box>\n            <Box style={{flexGrow: 10}}> </Box>\n            <Box>\n              <IconButton onClick={toggleFav} size={is_sm ? \"small\" : \"large\"}>\n                  <BookmarkIcon />\n              </IconButton>\n              <IconButton onClick={toggleBright} size={is_sm ? \"small\" : \"large\"}>\n                  <Brightness6Icon/>\n              </IconButton>\n              <IconButton onClick={handleInfoOpen} size={is_sm ? \"small\" : \"large\"}>\n                  <InfoIcon />\n              </IconButton>\n            </Box>\n            </Toolbar>\n            </Box>\n        </div>\n    );\n}\n\nexport default TopBarView;","import { CubieCube, MoveSeq } from \"./CubeLib\";\nimport two_gram_meter from './two_gram_v1.json'\nexport abstract class Evaluator {\n    abstract evaluate(moves: MoveSeq) : number;\n    abstract name : string;\n}\nexport class SeqEvaluator extends Evaluator {\n    name = \"sequential\";\n    static moveCost_gen() {\n        let pairs: [string, number][] = [\n            [\"U\", 0.8], [\"U'\", 0.8], [\"U2\", 1.0],\n            [\"R\", 0.8], [\"R'\", 0.8], [\"R2\", 1.2],\n            [\"r\", 1], [\"r'\", 1], [\"r2\", 1.3],\n            [\"L\", 1], [\"L'\", 1], [\"L2\", 1.4],\n            [\"F\", 1.4], [\"F'\", 1.4], [\"F2\", 1.8],\n            [\"f\", 1.4], [\"f'\", 1.4], [\"f2\", 1.8],\n            [\"B\", 1.6], [\"B'\", 1.6], [\"B2\", 2.0],\n            [\"D\", 1.3], [\"D'\", 1.3], [\"D2\", 1.6],\n            [\"M\", 1.5], [\"M'\", 1.2], [\"M2\", 1.6],\n            [\"S\", 3.0], [\"S'\", 1.3], [\"S2\", 2.0],\n            [\"E\", 1.5], [\"E'\", 1.5], [\"E2\", 2.4],\n        ];\n        let costMap = new Map(pairs);\n        return costMap;\n    }\n    static moveCost = SeqEvaluator.moveCost_gen();\n\n    evaluate(moves: MoveSeq) {\n        let sum = 0;\n        for (let m of moves.moves) {\n            const value = (SeqEvaluator.moveCost.get(m.name)) || 1.4;\n            sum += value;\n        }\n        // 090822: solutions should be primarily sorted by HTM to guarantee that an optimal solution can always be returned by the solver\n        return moves.moves.length * 100 + sum;\n    }\n\n}\n\nexport class QTMEvaluator extends Evaluator {\n    name = \"qtm\";\n    evaluate(moves: MoveSeq) {\n        let sum = 0;\n        for (let m of moves.moves) {\n            sum += m.name[1] === \"2\" ? 2 : 1;\n        }\n        return sum * 100 + moves.moves.length;\n    }\n}\n\nexport class RawEvaluator extends Evaluator {\n    name = \"raw\";\n    evaluate(moves: MoveSeq) {\n        return moves.moves.length;\n    }\n}\n\n\nexport class TwoGramEvaluator extends Evaluator {\n    name = \"two-gram\";\n    static meter = two_gram_meter as {[s: string]: string};\n    evaluate(moves_input: MoveSeq) {\n        let score = 0\n        let moves = [\"\", ...moves_input.moves.map(x => x.name), \"\"]\n        for (let i =0; i < moves.length - 1; i++) {\n            let two_gram = moves[i] + moves[i + 1]\n            let curr_score = Number.parseFloat(TwoGramEvaluator.meter[two_gram])\n            if (Number.isNaN(curr_score)) {\n                curr_score = 0.3;\n            }\n            score += curr_score;\n        }\n        return score\n    }\n}\n\n// support right-hand heavy for now only\nenum DPGrip {\n    HOME = 0,\n    R_AWAY,\n    Rp_AWAY,\n    R2_AWAY,\n    DEAD_END\n};\nexport class DPEvaluator extends Evaluator {\n    name = \"dp\";\n    \n    static moveCost_gen() {\n        const HI = 10\n        // TODO: Add combo move + regripk some might be fast\n        let pairs: {[move: string]: number[]} = {\n            // array representing cost of performing move at grip \n            // easiest quarter moves are evaluated at 1 (RUFBDrM'), harder at 1.5 (M), \n               // forced ones at 3\n            // easiest double moves as 1.5, harder ones at 2(M2), forced at 2.5\n            // RH quarter grip in the direction of R at 3\n            // RH quarter grip in the direction of R' at 3\n            // RH quarter grip in the direction of R2 at 4\n            // HI means cost is too high (i.e. regrip is needed)\n\n            // TODO: add \"end state\"\n            \"U\":  [1, 2, HI, HI],\n            \"U'\": [1, 1, 1, 1],\n            \"U2\": [1.5, 1.5, 1.5, 1.5],\n            \"R\":  [1, 1, 1, HI],\n            \"R'\": [1, 1, 1, HI],\n            \"R2\": [1.5, 1.5, 1.5, 1.5],\n            \"F\":  [2.5, HI, 1, HI],\n            \"F'\": [1, 1.5, 1, HI],\n            \"F2\": [HI, 2, 2, HI],\n            \"D\":  [1, 1, 1, HI],\n            \"D'\": [1, 2, 1, HI],\n            \"D2\": [1.5, 1.5, 1.5, HI],\n            \"B\":  [HI, 1, 3, HI],\n            \"B'\": [3, 1.5, 1, HI],\n            \"B2\": [4, 2, 2, HI],\n            \"r\":  [1, 1, 1, HI],\n            \"r'\": [1, 1, 1, HI],\n            \"r2\": [1.5, HI, 1.5, HI],\n            \"M\":  [1, 2, 2, HI],\n            \"M'\": [1, 1.5, 1.5, 2],\n            \"M2\": [1.5, 2, 2, 3],\n        };\n        return pairs\n    }\n    static moveCost = DPEvaluator.moveCost_gen();\n    static moveTransition_gen(): {[key: string]: number[]}{\n        let {R_AWAY, R2_AWAY, HOME, Rp_AWAY, DEAD_END} = DPGrip\n        return {\n            //     HOME  ,  R_AWAY , Rp_AWAY ,  R2_AWAY\n            \"R\":  [R_AWAY,  R2_AWAY, HOME    , DEAD_END],\n            \"R'\": [Rp_AWAY, HOME   , DEAD_END,  R_AWAY ],\n            \"R2\": [R2_AWAY, Rp_AWAY,R_AWAY,  HOME ],\n\n            \"r\":  [R_AWAY,  R2_AWAY, HOME    , DEAD_END],\n            \"r'\": [Rp_AWAY, HOME   , DEAD_END,  R_AWAY ],\n            \"r2\": [R2_AWAY, Rp_AWAY,R_AWAY,  HOME ],\n        }\n    }\n    static moveTransition = DPEvaluator.moveTransition_gen();\n\n    static regripCost_gen() {\n        const HI = 10\n        let pairs: number[][] = [\n            // HOME\n            [0, 2, 2, 3],\n            // R AWAY\n            [1.5, 0, 2, 2],\n            // R' AWAY\n            [1.5, 3, 0, HI],\n            // R2 AWAY\n            [3, 2, HI, 0]\n        ]\n        return pairs\n    }\n    static regripCost = DPEvaluator.regripCost_gen();\n\n    evaluate(moves_input: MoveSeq) {\n        return this.evaluate_with_plan(moves_input).cost\n    }\n    evaluate_with_plan(moves_input: MoveSeq) {\n        // allow \n        const HI = 1e5\n        const allow_any_start = true\n        const len = moves_input.moves.length\n        const DP = Array(len + 1).fill(null).map(() => [HI, HI, HI, HI])\n        const DP_path = Array(len + 1).fill(null).map(() => Array(4).fill(null).map(() => [-1, -1]))\n\n        const regripCost = DPEvaluator.regripCost\n        const moveCost = DPEvaluator.moveCost\n        const moveTransition = DPEvaluator.moveTransition\n        if (allow_any_start) {\n            DP[0] = [0, 0, 0, HI]\n        } else {\n            DP[0] = [0, HI, HI, HI] \n        }\n        for (let i = 0; i < len; i++) {\n            const move = moves_input.moves[i].name\n            for (let prev_grip = 0; prev_grip < 4; prev_grip++) {\n                for (let shifted_grip = 0; shifted_grip < 4; shifted_grip++) {\n                    const cur_scheme = DP[i][prev_grip] + regripCost[prev_grip][shifted_grip] + moveCost[move][shifted_grip]\n                    const cur_grip = moveTransition[move] ? moveTransition[move][shifted_grip] : shifted_grip\n                    if (cur_grip === DPGrip.DEAD_END) continue\n                    if (cur_scheme < DP[i+1][cur_grip]) {\n                        DP[i+1][cur_grip] = cur_scheme\n                        DP_path[i+1][cur_grip] = [prev_grip, shifted_grip]\n                    }\n                }\n            }\n        }\n        // assume not take account cost of readjuting to home grip at the end\n        // Now, find optimal plan\n        let optimal_cost = HI\n        let optimal_ending_grip = -1\n        for (let grip = 0; grip < 4; grip++) {\n            if (DP[len][grip] < optimal_cost) {\n                optimal_cost = DP[len][grip]\n                optimal_ending_grip = grip\n            }\n        }\n        let current_grip = optimal_ending_grip\n        let optimal_plan: [number, number][] = [[current_grip, current_grip]]\n        for (let i = len; i >= 1; i--) {\n            const [previous_grip, previous_shifted_grip] = DP_path[i][current_grip]\n            optimal_plan.push([previous_grip, previous_shifted_grip])\n            current_grip = previous_grip\n        }\n        optimal_plan.reverse()\n\n        let grip_str = [\n            \"HOME\", \"R GRIP\", \"R' GRIP\", \"R2 GRIP\"\n        ]\n        let desc = `start from ${grip_str[optimal_plan[0][0]]}` \n        let current_segment : string[] = []\n        for (let i = 0; i < len; i++) {\n            let [g1, g2] = optimal_plan[i]\n            let move = moves_input.moves[i].name\n            if (g1 === g2) current_segment.push(move)\n            else {\n                desc += `, do ${current_segment.join(\" \")}, regrip to ${grip_str[g2]}`\n                current_segment = [move]\n            }\n        }\n        if (current_segment.length) desc += `, do ${current_segment.join(\" \")}`\n        desc += `, end in ${grip_str[optimal_plan[len][0]]}`\n        return {\n            alg: moves_input.toString(),\n            cost: optimal_cost,\n            //plan: optimal_plan,\n            desc: desc\n        }\n    }\n}\n\n\n\nexport class MovementEvaluator extends Evaluator {\n    name = \"movement\";\n    evaluate(moves_input: MoveSeq) {\n        let cube = new CubieCube()\n        let moves = moves_input.inv().moves\n        //let fb_corners = [4, 5]\n        //let fb_edges = [5, 8, 9]\n        let movement = 0\n        for (let i = 0; i < moves.length - 1; i++) {\n            let cube1 = cube.apply_one(moves[i])\n            let stationary = 0\n            for (let j = 0; j < 8; j++) {\n                if ((cube.cp[j] === 4 || cube.cp[j] === 5) && (cube.cp[j] === cube1.cp[j])) {\n                    stationary++\n                }\n            }\n            for (let j = 0; j < 12; j++) {\n                if ((cube.ep[j] === 5 || cube.ep[j] === 8 || cube.ep[j] === 9) && (cube.ep[j] === cube1.ep[j])) {\n                    stationary++\n                }\n            }\n            if (moves[i].name[1] === \"2\") {\n                movement += 2 * (5 - stationary);\n            } else {\n                movement += 5 - stationary;\n            }\n            cube = cube1\n        }\n        return movement\n    }\n}\n//ames: [\"sequential\", \"two-gram\", \"QTM\", \"default\"],\nexport function getEvaluator(s: string) {\n    switch (s) {\n        case \"Default\": return new SeqEvaluator();\n        case \"two-gram\": return new TwoGramEvaluator();\n        case \"QTM\": return new QTMEvaluator();\n        case \"dp\": return new DPEvaluator();\n        case \"movement\": return new MovementEvaluator();\n        case \"raw\": return new RawEvaluator(); \n        default :\n            return new SeqEvaluator();\n    }\n} \n","import { CubeUtil, CubieCube, Mask, Move, MoveSeq } from './CubeLib';\nimport { CachedSolver } from '../lib/CachedSolver';\nimport { getEvaluator } from '../lib/Evaluator';\n\nexport type fbStageT = \"fb\" | \"fs\" | \"pseudo-fs\" | \"fs-combo\" | \"felinep1\"\n\nexport type AnalyzerState = {\n    scramble: string,\n    post_scramble: string, // the part of solution leading up to the stage under analysis\n    full_solution: SolutionDesc[],\n    stage: string,\n    orientation: string,\n    pre_orientation: string,\n    num_solution: number,\n    fb_stage: fbStageT\n    show_mode: string, //\"foreach\" | \"combined\"\n    hide_solutions: boolean\n}\nexport let initialState : AnalyzerState = {\n    scramble: \"\",\n    post_scramble: \"\",\n    full_solution: [],\n    stage: \"fb\",\n    orientation: \"x2y\",\n    pre_orientation: \"\",\n    num_solution: 1,\n    fb_stage: \"fb\",\n    show_mode: \"foreach\",\n    hide_solutions: true\n}\n\nexport type SolverConfig = {\n    premoves?: string[],\n    num_solution: number,\n    upper_limit: number,\n    lower_limit?: number,\n    evaluator?: string\n  }\n\nexport type SolutionDesc = {\n    solution: MoveSeq,\n    premove: string,\n    score: number,\n    orientation?: string,\n    stage: string,\n    fb_tag?: string\n}\n\nfunction is_fb_solved(cube: CubieCube, oris: MoveSeq[]) {\n    for (let ori of oris) {\n        let cube1 = cube.changeBasis(ori).apply(ori.inv())\n        if (CubeUtil.is_solved(cube1, Mask.fb_mask)) return ori\n    }\n    return null\n}\n\n\n\nexport function analyze_roux_solve(cube: CubieCube, solve: MoveSeq) {\n    //todo: break up half turns to detect cancellation in between stages\n    let oris = get_oris(\"cn\").map(m => new MoveSeq(m))\n    let pres = [\"\", \"x\", \"x'\", \"x2\"].map(m => new MoveSeq(m))\n    const defaultSolution = {\n        solution: [], premove: \"\", orientation: \"\", stage: \"\", score: 0\n    }\n    // figure out which fb gets solved first\n    let stages = [\"fb\", \"ss\", \"sp\", \"cmll\", \"lse\"]\n    let solution : SolutionDesc[] = [];\n    let current_moves : Move[] = []\n    let stage_idx = 0\n    let getMasksForStage = (s: string) => {\n        switch (s) {\n            case \"ss\": return [Mask.ss_front_mask, Mask.ss_back_mask]\n            case \"sp\": return [Mask.sb_mask]\n            case \"cmll\": return [Mask.cmll_mask]\n            case \"lse\": return [Mask.solved_mask]\n            default: return [Mask.solved_mask]\n        }\n    }\n\n    let moves = [ Move.all[\"id\"], ...solve.moves]\n    for (let move of moves) {\n        cube = cube.apply(move)\n        if (move.name !== \"id\") current_moves.push(move)\n\n        if (stage_idx === 0) {\n            let res = is_fb_solved(cube, oris)\n            if (res !== null) {\n                let orientation = res\n                solution.push({ ...defaultSolution,\n                    solution: new MoveSeq(current_moves),\n                    orientation: orientation.moves.join(\"\"),\n                    stage: \"fb\"\n                })\n                stage_idx++\n                current_moves = []\n                cube = cube.changeBasis(orientation).apply(orientation.inv())\n            }\n        }\n        else if (stage_idx !== 3) {\n            let stage = stages[stage_idx]\n            let masks = getMasksForStage(stage)\n            if (masks.some(mask => CubeUtil.is_solved(cube, mask))) {\n                solution.push({ ...defaultSolution,\n                    solution: new MoveSeq(current_moves),\n                    stage\n                })\n                stage_idx++\n                current_moves = []\n            }\n        } else {\n            if (CubeUtil.is_cmll_solved(cube)) {\n                solution.push({ ...defaultSolution,\n                    solution: new MoveSeq(current_moves),\n                    stage: \"cmll\"\n                })\n                stage_idx++\n                current_moves = []\n            }\n        }\n        if (stage_idx >= stages.length) break\n    }\n    if (current_moves.length > 0) {\n        solution.push({ ...defaultSolution,\n            solution: new MoveSeq(current_moves),\n            stage: \"unknown\"\n        })\n    }\n    return solution\n}\n\nfunction solve(solver_str: string, cube: CubieCube, config: SolverConfig) {\n    const solver = CachedSolver.get(solver_str)\n    let { premoves, num_solution, upper_limit } = config\n    let ev = getEvaluator(config.evaluator || \"sequential\")\n    let solver_num_solution = (num_solution < 10) ? 10 : num_solution\n    let solutions = (premoves || [\"\"]).map(pm =>\n        solver.solve(cube.apply(pm), 0, upper_limit, solver_num_solution)\n            .map(x => ({premove: pm, solution: x, score: ev.evaluate(x)}))\n    ).flat()\n    return solutions.sort( (x, y) => x.score - y.score).slice(0, num_solution)\n}\n\n\nconst get_oris = (ori: string, preori?: string) => {\n    let oris : string[] = []\n    if (ori === \"x2y\") {\n        oris = (preori === \"\") ? [\"\", \"y\", \"y'\", \"y2\", \"x2\", \"x2y\", \"x2y'\", \"x2y2\"] :\n        (preori === \"x\") ? [\"x\", \"xy\", \"xy'\", \"xy2\", \"x'\", \"x'y\", \"x'y'\", \"x'y2\"] :\n        [\"z\", \"zy\", \"zy'\", \"zy2\", \"z'\", \"z'y\", \"z'y'\", \"z'y2\"]\n\n    } else if (ori === \"cn\") {\n        oris = [\"\", \"y\", \"y'\", \"y2\", \"x2\", \"x2y\", \"x2y'\", \"x2y2\",\n                \"x\", \"xy\", \"xy'\", \"xy2\", \"x'\", \"x'y\", \"x'y'\", \"x'y2\",\n                \"z\", \"zy\", \"zy'\", \"zy2\", \"z'\", \"z'y\", \"z'y'\", \"z'y2\"]\n    }\n    return oris\n}\nfunction analyze_fb(state: AnalyzerState, cube: CubieCube): SolutionDesc[] {\n    let config : SolverConfig = {\n        premoves: [\"\", \"x\", \"x'\", \"x2\"],\n        num_solution: state.num_solution,\n        upper_limit: 9\n    }\n    let oris = get_oris(state.orientation, state.pre_orientation)\n\n    let solutions : SolutionDesc[] = []\n    if (state.fb_stage === \"fb\") {\n        solutions = oris.map(ori => solve(\"fb\", cube.changeBasis(new MoveSeq(ori)), config).map(sol => ({\n        ...sol, orientation: ori, stage: \"fb\"\n        })).sort( (x, y) => x.score - y.score)).flat()\n    } else {\n        const fb_stage_solvers : Record<fbStageT, string[]>= {\n            \"fb\": [\"fb\"],\n            \"fs\": [\"fs-front\", \"fs-back\"],\n            \"pseudo-fs\": [\"fs-pseudo-front\", \"fs-pseudo-back\"],\n            \"felinep1\": [\"felinep1-front\", \"felinep1-back\"],\n            \"fs-combo\": [\"fs-front\", \"fs-back\", \"fs-pseudo-front\", \"fs-pseudo-back\", \"felinep1-front\", \"felinep1-back\"],\n        }\n        const needs_fb_tag = state.fb_stage === \"fs-combo\"\n        // label the fb_tag if we are in fs-combo mode\n        const fb_tag : Record<string, string> = {\n            \"fs-pseudo-front\": \"Ps\",\n            \"fs-pseudo-back\": \"Ps\",\n            \"felinep1-front\": \"Line\",\n            \"felinep1-back\": \"Line\",\n            \"fs-front\": \"FS\",\n            \"fs-back\": \"FS\",\n            \"fb\": \"FB\"\n        }\n        const solvers = fb_stage_solvers[state.fb_stage]\n\n        solutions = oris\n            .map(ori =>\n                solvers\n                    .map(s => solve(s, cube.changeBasis(new MoveSeq(ori)), config)\n                        .map(sol => ({\n                            ...sol,\n                            orientation: ori,\n                            fb_tag: fb_tag[s],\n                            stage: \"fb\"\n                        })))\n                    .flat()\n                    .sort((x, y) => x.score - y.score)\n            )\n            .flat()\n    }\n\n    return solutions\n}\n\nfunction analyze_ss(state: AnalyzerState, cube: CubieCube): SolutionDesc[] {\n    let config : SolverConfig = {\n        num_solution: state.num_solution,\n        upper_limit: 15\n    }\n    let solutions = [\"ss-front\", \"ss-back\"].map(name => solve(name, cube, config).map(sol => ({\n        ...sol, stage: name\n    })).sort( (x, y) => x.score - y.score)).flat()\n    return solutions\n}\n\nfunction analyze_sp(state: AnalyzerState, cube: CubieCube): SolutionDesc[] {\n    let config : SolverConfig = {\n        num_solution: state.num_solution,\n        upper_limit: 10\n    }\n    let solutions = solve(\"sb\", cube, config).map(sol => ({\n        ...sol, stage: \"sp\"\n    })).sort( (x, y) => x.score - y.score)\n\n    return solutions\n}\n\nfunction analyze_lse(state: AnalyzerState, cube: CubieCube): SolutionDesc[] {\n    let config : SolverConfig = {\n        num_solution: state.num_solution,\n        upper_limit: 20\n    }\n    let solutions = solve(\"lse\", cube, config).map(sol => ({\n        ...sol, stage: \"lse\"\n    })).sort( (x, y) => x.score - y.score)\n\n    return solutions\n}\n\n\nexport function analyze(state: AnalyzerState) {\n    let cube = new CubieCube().apply(state.scramble).apply(state.post_scramble)\n    if (state.stage === \"fb\") return analyze_fb(state, cube)\n    else {\n        let ori = new MoveSeq((state.full_solution[0]?.orientation) || \"\")\n        cube = cube.changeBasis(ori).apply(ori.inv())\n        if (state.stage === \"ss\") return analyze_ss(state, cube)\n        else if (state.stage === \"sp\") return analyze_sp(state, cube)\n        else if (state.stage === \"lse\") return analyze_lse(state, cube)\n    }\n    return []\n}","import React, { Fragment } from 'react'\n\nimport CubeSim from './CubeSim'\nimport { Button, Typography, useTheme, FormControl } from '@mui/material';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Divider from '@mui/material/Divider';\n\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\n\nimport { CubeUtil, CubieCube, FaceletCube, Mask, MoveSeq } from '../lib/CubeLib';\n\nimport { AppState, Action} from \"../Types\";\nimport 'typeface-roboto-mono';\nimport { Face, Typ } from '../lib/Defs';\n\nimport { SelectChangeEvent } from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\n\nimport { AnalyzerState, SolutionDesc, initialState, analyze_roux_solve, fbStageT } from '../lib/Analyzer';\n\nimport { useAnalyzer } from \"../lib/Hooks\";\n\nimport InputLabel from '@mui/material/InputLabel';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormHelperText from '@mui/material/FormHelperText';\n\nimport Chip from '@mui/material/Chip';\nimport { CachedSolver } from '../lib/CachedSolver';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport EditIcon from '@mui/icons-material/Edit';\n\nimport SearchIcon from '@mui/icons-material/Search';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nimport { ColorScheme } from '../lib/CubeLib';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      paddingTop: theme.spacing(0),\n      paddingBottom: theme.spacing(0),\n      backgroundColor: theme.palette.background.default,\n      transition: \"all .5s ease-in-out\"\n    },\n    button: {\n      width: \"100%\",\n    },\n    paper: {\n      padding: theme.spacing(3),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n      marginBottom: 3,\n      borderRadius: 0\n    },\n    paper2: {\n      paddingLeft: theme.spacing(3),\n      paddingTop: theme.spacing(2),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n      marginBottom: 3,\n      borderRadius: 0\n    },\n    canvasPaper: {\n      padding: theme.spacing(0),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    infoColumn: {\n      color: theme.palette.background.paper\n    },\n    scrambleColumn: {\n      paddingLeft: theme.spacing(3)\n    },\n    textColumn: {\n      // color: \"black\",\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 138\n      },\n    },\n    setup: {\n      whiteSpace: 'pre-line',\n      fontSize: \"1.4rem\",\n      fontWeight:500,\n      [theme.breakpoints.down('sm')]: {\n      fontSize: \"1.0rem\",\n      fontWeight: 500\n      },\n  },\n    condGap: {\n    },\n    fgap: {\n      flexShrink: 100, flexBasis: \"1.5rem\", minWidth: \"1.5em\",\n      [theme.breakpoints.down('sm')]: {\n        flexBasis: \"1.0rem\",\n        minWidth: \"0.4rem\"\n      }\n    },\n    fixedHeight: {\n      height: 250,\n    },\n    title : {\n        color: theme.palette.text.disabled,\n        fontWeight: 500,\n        borderBottom: \"3px solid\",\n    },\n    title1 : {\n      fontWeight: 500,\n      marginTop: 7,\n      border: \"1px solid\",\n      borderRadius: 4,\n      fontSize: \"0.8rem\"\n   },\n    stage: {\n      paddingTop: 5,\n      paddingLeft: 5,\n    },\n    configItem: {\n      paddingRight: 15\n    },\n    stageText: {\n      color: theme.palette.text.primary,\n      textTransform: \"none\"\n    },\n    sourceIcon : {\n        color: theme.palette.secondary.main,\n        fontSize: 15,\n        padding: 0\n    },\n    sourceIconWrap : {\n        //border: \"1px solid \" + theme.palette.text.disabled,\n        //borderRadius: 3\n    },\n    fab: {\n      position: 'absolute',\n      top: theme.spacing(7),\n      left: theme.spacing(2),\n    },\n    prompt: {\n      color: theme.palette.text.secondary,\n    },\n    formControl: {\n      margin: theme.spacing(0),\n      minWidth: 80,\n      maxWidth: 160,\n    },\n    menu: {\n        '& .MuiMenuItem-root': {\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n        },\n    },\n  }))\n\nconst resetState = (state: AnalyzerState) => {\n  return {\n    ...state,\n    postScramble: \"\",\n    full_solution: [],\n    scramble: \"\",\n    stage: \"fb\"\n  }\n}\nfunction ScrambleView(props: { state: AnalyzerState, setState: (newState: AnalyzerState) => void }) {\n    let { state, setState } = props\n    let classes = useStyles()\n    const theme = useTheme()\n    const isSmallScreen = useMediaQuery(theme.breakpoints.down('sm'))\n    // Add event listeners\n    let [ value, setValue ] = React.useState(state.scramble)\n\n    let onScrambleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setValue(event?.target.value)\n    }\n\n    let handleBegin = () => {\n\n      setState({...resetState(state), scramble: value})\n    }\n    let handleGen = () => {\n      let cube = CubeUtil.get_random_with_mask(Mask.empty_mask)\n      let scramble = CachedSolver.get(\"min2phase\").solve(cube,0,0,0)[0].inv().toString()\n      setState({...resetState(state), scramble})\n      setValue(scramble)\n    }\n\n    return (\n    <Box style={{display: \"flex\"}}>\n\n      <Box style={{display: \"flex\", alignItems: \"center\", flexGrow: 1}}>\n        <TextField\n          size=\"medium\"\n          fullWidth\n          multiline\n          maxRows={3}\n          label={\"Scramble\"}\n          value={value}\n          onChange={onScrambleChange}\n          variant=\"filled\"\n          inputProps={{\n            sx: {fontSize: \"1.2rem\", fontWeight: 500}\n          }}\n        />\n      </Box>\n      <Box style={{}} className={classes.fgap} />\n      <Box sx={{ display: 'flex', flexDirection: isSmallScreen ? 'column' : 'row', gap: isSmallScreen ? 0.5 : 0.5, alignItems: 'stretch' }}>\n        <Button onFocus={(evt) => evt.target.blur() } onClick={handleGen}\n              size=\"medium\" variant=\"contained\" color=\"primary\" >\n                Gen\n        </Button>\n        <Button onFocus={(evt) => evt.target.blur() } onClick={handleBegin}\n              size=\"medium\" variant=\"contained\" color=\"primary\" >\n                GO\n        </Button>\n      </Box>\n    </Box> )\n}\n\nfunction ConfigView(props: { state: AnalyzerState, setState: (newState: AnalyzerState) => void}) {\n  let { state, setState } = props\n  let classes = useStyles()\n\n  const menuProps = {\n    PaperProps: {\n        style: {\n            maxWidth: 160,\n        },\n    },\n    className: classes.menu\n  };\n\n  const selectSx = { fontSize: \"1.0rem\" };\n\n  let fb_ori_str = state.orientation + \",\" + state.pre_orientation\n  let handleFBOri = (event: SelectChangeEvent<String>) => {\n    let value: string[]= (event.target.value).split(\",\")\n    setState({...state, orientation: value[0], pre_orientation: value[1]})\n  }\n  let display_mode_str = state.show_mode\n  let handle_display_mode = (event: SelectChangeEvent<String>) =>  {\n    let value = (event.target.value as string)\n    setState({...state, show_mode: value})\n  }\n  let handle_num_solution = (event: SelectChangeEvent<number>) =>  {\n    let value = Number.parseInt(event.target.value as string)\n    setState({...state, num_solution: value || state.num_solution})\n  }\n  let handle_fb_stage = (event: SelectChangeEvent<fbStageT>) =>  {\n    let value = (event.target.value as fbStageT)\n    setState({...state, fb_stage: value})\n  }\n  let handle_hide_solutions = (event: SelectChangeEvent<String>) =>  {\n    let value = (event.target.value as string)\n    setState({...state, hide_solutions: value === \"true\"})\n  }\n  return (\n  <Box display=\"flex\" flexWrap=\"wrap\" gap={0} sx={{ rowGap: 2}}>\n    <Box className={classes.configItem}>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-helper-label\">FB Orientation</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-helper-label\"\n          id=\"demo-simple-select-helper\"\n          value={fb_ori_str}\n          onChange={handleFBOri}\n          MenuProps={menuProps}\n          sx={selectSx}\n        >\n          <MenuItem value={\"x2y,\"}>x2y on W/Y</MenuItem>\n          <MenuItem value={\"x2y,x\"}>x2y on B/G</MenuItem>\n          <MenuItem value={\"x2y,z\"}>x2y on R/O</MenuItem>\n          <MenuItem value={\"cn,\"}>Color Neutral</MenuItem>\n        </Select>\n        <FormHelperText></FormHelperText>\n      </FormControl>\n    </Box>\n    <Box className={classes.configItem}>\n      <FormControl className={classes.formControl}>\n      <InputLabel id=\"demo-simple-select-helper-label\">Organize</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-helper-label\"\n        id=\"demo-simple-select-helper\"\n        value={display_mode_str}\n        onChange={handle_display_mode}\n        MenuProps={menuProps}\n        sx={selectSx}\n      >\n        <MenuItem value={\"foreach\"}>By FB</MenuItem>\n        <MenuItem value={\"combined\"}>Combined </MenuItem>\n      </Select>\n      <FormHelperText></FormHelperText>\n     </FormControl>\n    </Box>\n    <Box  className={classes.configItem}>\n    <FormControl className={classes.formControl}>\n      <InputLabel id=\"demo-simple-select-helper-label\"># Solutions</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-helper-label\"\n        id=\"demo-simple-select-helper\"\n        value={state.num_solution}\n        onChange={handle_num_solution}\n        MenuProps={menuProps}\n        sx={selectSx}\n      >\n        <MenuItem value={1}>1</MenuItem>\n        <MenuItem value={3}>3 </MenuItem>\n        <MenuItem value={5}>5</MenuItem>\n        <MenuItem value={10}>10 </MenuItem>\n        <MenuItem value={25}>25 </MenuItem>\n      </Select>\n      <FormHelperText></FormHelperText>\n    </FormControl>\n    </Box>\n    <Box  className={classes.configItem}>\n    <FormControl className={classes.formControl}>\n      <InputLabel id=\"demo-simple-select-helper-label\">FB Stage</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-helper-label\"\n        id=\"demo-simple-select-helper\"\n        value={state.fb_stage}\n        onChange={handle_fb_stage}\n        MenuProps={menuProps}\n        sx={selectSx}\n      >\n        <MenuItem value={\"fb\"}>FB</MenuItem>\n        <MenuItem value={\"fs\"}>FS</MenuItem>\n        <MenuItem value={\"pseudo-fs\"}>Pseudo FS</MenuItem>\n        <MenuItem value={\"felinep1\"}>E-Line+1</MenuItem>\n        <MenuItem value={\"fs-combo\"}>FS/Line</MenuItem>\n      </Select>\n      <FormHelperText></FormHelperText>\n    </FormControl>\n    </Box>\n    <Box className={classes.configItem}>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"hide-solutions-label\">Hints?</InputLabel>\n        <Select\n          labelId=\"hide-solutions-label\"\n          id=\"hide-solutions-select\"\n          value={state.hide_solutions.toString()}\n          onChange={handle_hide_solutions}\n          MenuProps={menuProps}\n          sx={selectSx}\n        >\n          <MenuItem value={\"true\"}>Yes</MenuItem>\n          <MenuItem value={\"false\"}>No</MenuItem>\n        </Select>\n        <FormHelperText></FormHelperText>\n      </FormControl>\n    </Box>\n  </Box>)\n}\n\n\nfunction SolutionInputView(props: { state: AnalyzerState, setState: (newState: AnalyzerState) => void}) {\n  let [editing, setEditing] = React.useState(false)\n  let [value, setValue] = React.useState(\"\")\n  let textField = React.useRef<HTMLInputElement | null>(null)\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setValue(event.target.value)\n      event.stopPropagation()\n  }\n  const toggleEdit = () => {\n      setEditing(true)\n  }\n  const handleClose = () => {\n    setEditing(false)\n    let full_solution = analyze_roux_solve(new CubieCube().apply(props.state.scramble), new MoveSeq(value))\n    if ( (full_solution.length > 1) || (full_solution.length === 1 && full_solution[0].solution.moves.length > 0)) {\n      props.setState({...props.state, full_solution})\n    }\n  }\n  //const onEntered = () => {\n  //    textField.current && textField.current.focus()\n  //}\n  return <Box>\n    <Box >\n          <Button variant={editing ? \"contained\" : \"outlined\"}\n              color=\"primary\"\n              size=\"small\"\n              onClick={toggleEdit}\n\n              startIcon={<EditIcon />}\n          >\n              {\"Input Your Solution\"}\n          </Button>\n    </Box>\n\n    <Dialog open={editing}\n            onClose={handleClose}\n            /*onEntered={onEntered}*/\n            maxWidth=\"sm\"\n            fullWidth\n            >\n          <DialogTitle> Input your reconstructed solution </DialogTitle>\n          <DialogContent>\n                <TextField\n                    inputRef={textField}\n                    multiline\n                    size=\"medium\"\n                    fullWidth\n                    maxRows={10}\n                    rows={5}\n                    value={value}\n                    onChange={onChange}\n                    variant=\"outlined\">\n                </TextField>\n          </DialogContent>\n          <DialogActions>\n              <Box padding={1}>\n              <Button onClick={handleClose} color=\"primary\" variant=\"outlined\" fullWidth >\n                  Confirm\n              </Button>\n              </Box>\n          </DialogActions>\n    </Dialog>\n  </Box>\n}\n\n\n// Generic memoization function\nfunction memoize<T, R>(fn: (arg: T) => R): (arg: T) => R {\n    const cache = new Map<string, R>();\n\n    return (arg: T) => {\n        const key = String(arg);\n        if (cache.has(key)) {\n            return cache.get(key)!;\n        }\n\n        const result = fn(arg);\n        cache.set(key, result);\n        return result;\n    };\n}\n\n// The actual rotation shortening function without caching logic\nfunction _shorten_rotation(rotation: string): string {\n    const rotation_inv = new MoveSeq(rotation).inv();\n    const cube = new CubieCube().apply(rotation_inv);\n    const solution = CachedSolver.get(\"center\").solve(cube, 0, 3, 1)[0];\n    return solution.toString();\n}\n\n// Create the memoized version\nexport const get_shortened_rotation = memoize(_shorten_rotation);\n\n// Add this color mapping at the top level\nconst colorMap : { [key: string]: string } = ColorScheme.default_colors;\n/*{ [key: string]: string } = {\n  \"W\": \"#FFFFFF\",\n  \"Y\": \"#FFD500\",\n  \"G\": \"#00B500\",\n  \"B\": \"#0000FF\",\n  \"O\": \"#FF5800\",\n  \"R\": \"#C41E3A\"\n};*/\n\n// Add this component for the color squares\nfunction ColorPair({ colors }: { colors: string[] }) {\n  return (\n    <Box sx={{ display: 'inline-flex', alignItems: 'center', gap: 0.2}}>\n      {colors.map((color, i) => (\n        <Box\n          key={i}\n          sx={{\n            width: '1.0rem',\n            height: '1.1rem',\n            backgroundColor: colorMap[color],\n            border: '1px solid rgba(0,0,0,0.5)',\n            display: 'inline-block'\n          }}\n        />\n      ))}\n    </Box>\n  );\n}\n\n// Modify the _orientation_fb_name function to return colors instead of names\nfunction _orientation_fb_colors(orientation: string): string[] {\n    const cube = new CubieCube().apply(orientation)\n    const dl_d = FaceletCube.color_of_sticker(cube, [5, 0, Typ.E])\n    const dl_l = FaceletCube.color_of_sticker(cube, [5, 1, Typ.E])\n    const color_lookup = [\"W\", \"Y\", \"G\", \"B\", \"O\", \"R\"]\n    return [color_lookup[dl_d], color_lookup[dl_l]]\n}\nexport const get_orientation_fb_colors = memoize(_orientation_fb_colors);\n\nfunction StageSolutionView(props: { solution: SolutionDesc, shortestLength?: number }) {\n  let { solution, stage, premove, orientation, fb_tag } = props.solution\n  let getTags = () => {\n    if (stage === \"fb\") {\n      const colors = get_orientation_fb_colors(orientation || \"\")\n      return [<ColorPair key=\"colors\" colors={colors} />, fb_tag].filter(Boolean)\n    } else if (stage === \"ss-front\" || stage === \"ss-back\"){\n      return [ stage ]\n    } else return []\n  }\n  let tags = getTags()\n  const isShortest = props.shortestLength !== undefined && solution.moves.length === props.shortestLength\n  const shortened_rotation = get_shortened_rotation(orientation + \" \" + premove)\n\n  return (\n    <Box style={{display: \"flex\", marginBottom: \"2px\", alignItems: \"center\"}}>\n      {tags.filter(x=>x).map( (t, i) =>\n        <Chip variant=\"outlined\" size=\"small\" color=\"primary\" label={t} key={i}\n          sx={{ '& .MuiChip-label': { fontSize: '0.9rem', fontWeight: 500, padding: '0 8px',\n                                      minWidth: \"6ch\", textAlign: \"center\",\n                                      display: \"flex\",\n                                      alignItems: \"center\", justifyContent: \"center\" } }} />\n      )}\n      {/* add a little space between the tags and the solution */}\n      <Box style={{width: \".5ch\"}} />\n      <Box style={{marginLeft: 5}}>\n        <Typography sx={{fontSize: \"1.3rem\"}}>\n          {shortened_rotation + \" \" + solution.moves.map(m => m.name).join(\" \")}\n          {isShortest && \" (*)\"}\n        </Typography>\n      </Box>\n    </Box>\n  )\n}\n\n\nfunction StageSolutionListView(props: { solutions: SolutionDesc[], num_to_display: number, state: AnalyzerState, setState: (newState: AnalyzerState) => void} ) {\n  let { solutions, num_to_display, state } = props\n  const [isRevealed, setIsRevealed] = React.useState(!state.hide_solutions)\n\n  // Update isRevealed when hide_solutions changes\n  React.useEffect(() => {\n    setIsRevealed(!state.hide_solutions)\n  }, [state.hide_solutions, solutions])\n\n  // Find the shortest solution by STM length\n  const shortestSolution = solutions.length > 0 ?\n    solutions.reduce((shortest, current) =>\n      current.solution.moves.length < shortest.solution.moves.length ? current : shortest\n    ) : null\n\n  // For hints, generate a reader friendly text framing it as a quiz:\n  // for each shortest solution, parse the tag into the correspnding DL-edge color (we will build a utility function for this)\n  // then for each fb_tag, have a separate line to describe it in the form of \"Can you spot the 3-STM ${fb_tag} solution in Blue-White or Green-Red block?\"\n\n  //TODO; ordering in per-orientation FS-combo mode\n  const handleClick = () => {\n    setIsRevealed(true)\n  }\n\n  const shortest_length = shortestSolution?.solution.moves.length || 0\n  const shortest_solutions = solutions.filter(s => s.solution.moves.length === shortest_length)\n  //console.log(\"shortest solutions\", shortest_solutions)\n  const tag_full_name : Record<string, string> = {\n    \"FS\": \"FS\",\n    \"FB\": \"FB\",\n    \"Ps\": \"Pseudo FS\",\n    \"Line\": \"E-Line + 1c\"\n  }\n  const shortest_solution_tag_names = shortest_solutions.map(s => ({tag: tag_full_name[s.fb_tag || \"FB\"], fb_name: get_orientation_fb_colors(s.orientation || \"\")}))\n  const shortest_tag_names = shortest_solution_tag_names.reduce((acc, curr) => {\n    if (!acc[curr.tag]) { acc[curr.tag] = new Set() }\n    acc[curr.tag].add(curr.fb_name.join(\"-\"))\n    return acc\n  }, {} as Record<string, Set<string>>)\n  const shortest_tag_names_str = Object.entries(shortest_tag_names).map(([tag, fb_names]) => {\n    const colorPairs = [...fb_names].map(name => {\n      const [color1, color2] = name.split(\"-\");\n      return <ColorPair key={name} colors={[color1, color2]} />;\n    });\n\n    return (\n      <React.Fragment key={tag}>\n        <Box sx={{ width: \"100%\", mb: 1 }}>\n          <Typography variant=\"body1\" color=\"text.primary\" sx={{ fontSize: \"1.1rem\", textAlign: \"center\" }} >\n            {`There exists ${shortest_length}-STM ${tag || \"solution\"} in: `}\n          </Typography>\n        </Box>\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2.0, justifyContent: \"center\", mb: 2 }}>\n          {colorPairs}\n        </Box>\n      </React.Fragment>\n    );\n  })\n\n  return (\n    <Box lineHeight={1}>\n      {solutions.length > 0 && (\n        <Box onClick={!isRevealed ? handleClick : undefined} sx={{ cursor: !isRevealed ? 'pointer' : 'default' }}>\n          {!isRevealed ? (\n            <Box sx={{ width: \"100%\" }}>\n              {shortest_tag_names_str}\n              <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mt: 1, fontSize: \"1.0rem\", textAlign: \"center\" }}>\n                (Click to reveal)\n              </Typography>\n            </Box>\n          ) : (\n            <Box>\n              {solutions.slice(0, num_to_display).map((s, i) => (\n                <StageSolutionView\n                  solution={s}\n                  key={i}\n                  shortestLength={shortestSolution?.solution.moves.length}\n                />\n              ))}\n            </Box>\n          )}\n        </Box>\n      )}\n    </Box>\n  )\n}\n\nfunction FullSolutionView(props: { state: AnalyzerState, setState: (newState: AnalyzerState) => void} ) {\n  let { state, setState } = props\n  let classes = useStyles()\n\n  let setStage = (i: number) => () => {\n    setState({...state,\n      stage: state.full_solution[i].stage,\n      post_scramble: state.full_solution.slice(0, i).map(x => x.premove + x.solution.toString()).join(\" \")\n    })\n  }\n  let [show, setShow] = React.useState(-1)\n  let stageView = (sol: SolutionDesc, i: number) => {\n    return (\n      <Box display=\"flex\" key={i} className={classes.stage}\n        onMouseLeave={ () => setShow(-1)} onMouseEnter={() => setShow(i)} onClick={() => setShow(show === i ? -1 : i)}>\n        <Button variant={\"text\"}\n              color=\"primary\"\n              size=\"small\"\n              onClick={setStage(i)}\n              style={{fontSize: \"0.7rem\", marginLeft: 5, border: (show === i) ? \"1px solid\" : \"1px solid rgba(0, 0,0,0)\"\n            }} >\n        <Typography variant=\"subtitle1\" className={classes.stageText}>{sol.solution.toString()} \"//\" {sol.stage}\n        </Typography>\n        <SearchIcon fontSize=\"small\"/>\n        </Button>\n\n      </Box>\n    )\n  }\n  return (\n    <Box paddingBottom={2} lineHeight={1} >\n      <Box>\n        <SolutionInputView state={state} setState={setState}/>\n      </Box>\n      <Box style={{fontFamily: \"Public Sans\"}}>\n        { props.state.full_solution.map( (desc, i) => stageView(desc, i))}\n      </Box>\n    </Box>\n  )\n\n}\n\nfunction AnalyzerView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n    let { state: appState } = props\n\n    const theme = useTheme()\n    let [ state, setState ] = React.useState(initialState)\n\n    let classes = useStyles()\n\n    let mask = Mask.solved_mask\n    let cubieCube = new CubieCube().apply(state.scramble).apply(state.post_scramble)\n    let faceletCube = FaceletCube.from_cubie(cubieCube, mask)\n\n    const analyzerData = useAnalyzer(state)\n\n    let solutions_to_display = analyzerData.isRunning ? [] : (analyzerData.solutions || [])\n    let num_solutions_to_display = solutions_to_display.length\n\n    if (state.show_mode === \"combined\") {\n      solutions_to_display = solutions_to_display.sort( (x, y) => x.score - y.score) //.slice(0, state.num_solution)\n      num_solutions_to_display = state.num_solution\n    } else {\n     /// solutions_to_display = solutions.slice(0, Math.ceil(config.num_solution / oris.length))\n    }\n\n    const gt_md = useMediaQuery(theme.breakpoints.up('md'));\n    const gt_sm = useMediaQuery(theme.breakpoints.up('sm'));\n    const isSmallScreen = useMediaQuery(theme.breakpoints.down('sm'));\n    console.log(\"isSmallScreen\", isSmallScreen, theme.breakpoints)\n    const canvas_wh = (gt_md) ? [400, 350] : (gt_sm) ? [400, 350] : [320, 280]\n\n    const configPanel = (\n      <Paper className={classes.paper} elevation={2}>\n        <ConfigView state={state} setState={setState}/>\n      </Paper>\n    );\n    const inputSolutionPanel = (\n      <Paper className={classes.paper2} elevation={1}>\n      <Box display=\"flex\" >\n        {\n          state.full_solution.length >= 1 ? <>\n            <Box style={{display: \"flex\", flexDirection: \"column\", alignSelf: \"flex-start\"}}>\n              <Box className={classes.title} style={{}}>\n                My Solution\n              </Box>\n            </Box>\n            <Box style={{}} className={classes.fgap} />\n          </>\n        : null\n        }\n\n        <FullSolutionView state={state} setState={setState}/>\n      </Box>\n      </Paper>\n    )\n\n    return (\n    <Box className={classes.container}>\n      <Paper className={classes.paper} elevation={1}>\n        <ScrambleView state={state} setState={setState}/>\n      </Paper>\n\n      {!isSmallScreen && configPanel}\n      {/* {!isSmallScreen && inputSolutionPanel} */}\n\n      <Paper className={ classes.paper}>\n      <Grid container>\n        <Grid item md={6} sm={12} xs={12} className={classes.condGap}>\n          <Box style={{display: \"flex\" }}>\n            <Box display=\"flex\" >\n                <Box style={{display: \"flex\", flexDirection: \"column\", alignSelf: \"flex-start\"}}>\n                  <Box className={classes.title} style={{}}>\n                    Solutions\n                  </Box>\n                  <Box>\n                  <Button className={classes.title1} size=\"small\" variant=\"outlined\" color=\"primary\">\n                    { state.stage }\n                  </Button>\n                  </Box>\n                </Box>\n            </Box>\n            <Box style={{}} className={classes.fgap} />\n            <Box style={{flexGrow: 1}}>\n              <StageSolutionListView solutions={solutions_to_display} num_to_display={num_solutions_to_display} state={state} setState={setState}/>\n            </Box>\n          </Box>\n        </Grid>\n        {/* colorScheme=appState.colorScheme.getColorsForOri(appState.cube.ori)} */}\n        <Grid item md={6} xs={12} style={{display: \"flex\", justifyContent: \"center\"}}>\n          <Box style={{backgroundColor: \"rgba(0, 0, 0, 0)\"}}>\n            <CubeSim\n              width={canvas_wh[0]}\n              height={canvas_wh[1]}\n              cube={faceletCube}\n              colorScheme={appState.colorScheme.getColorsForOri(\"WG\")}\n              hintDistance={ 6 }\n              theme={appState.config.theme.getActiveName()}\n\n              facesToReveal={ [Face.L, Face.B, Face.D]  }\n            />\n          </Box>\n        </Grid>\n      </Grid>\n\n      {/* <Box height={20}/>\n      <Divider/>\n      <Box height={20}/> */}\n      </Paper>\n\n      {isSmallScreen && configPanel}\n      {/* <ColorPanel {...{state: appState, dispatch: appDispatch}} /> */}\n\n    </Box>\n    );\n}\n\n\nexport default AnalyzerView\n\n\n","import React from 'react'\nimport { AppState, Mode, Action } from \"../Types\";\n\nimport { Box, Typography, Button } from '@mui/material';\nimport makeStyles from '@mui/styles/makeStyles';\nimport { Dialog, DialogContent, DialogActions } from '@mui/material';\nimport { Grid, Container } from '@mui/material';\n\nimport { CmllTrainerView, OllcpTrainerView } from './CmllTrainerView';\nimport BlockTrainerView from './BlockTrainerView';\nimport PanoramaView from './PanoramaView';\n\n\nimport FavListView from './FavListView';\nimport TopBarView from './TopBarView';\nimport AnalyzerView from './AnalyzerView';\n\nimport Markdown from 'markdown-to-jsx';\nimport useMediaQuery from '@material-ui/core/useMediaQuery/useMediaQuery';\n\nimport { theme } from '../theme';\n\ninterface TabPanelProps {\n  value: number,\n  index: number,\n  children: any,\n  [key: string]: any\n}\nfunction TabPanel(props: TabPanelProps ) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={0}>{children}</Box>}\n    </Typography>\n  );\n}\nconst useStyles = makeStyles(theme => ({\n  page: {\n    backgroundColor: theme.palette.background.default\n  },\n  container: {\n    display: \"flex\"\n  },\n  icon: {\n    minWidth: 0\n  },\n  root: {\n    display: \"flex\"\n  },\n  bar: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.background.paper,\n    //borderRadius: \"5px\"\n  },\n  select: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.background.paper,\n    borderRadius: 4,\n    border: \"1px solid \" + theme.palette.background.default,\n  }\n}))\n\nexport const tab_modes : [Mode, string, string][] = [\n  [\"fb\", \"First Block (Fixed)\", \"FB (fixed)\"],\n  [\"analyzer\", \"First Block Analyzer (x2y | CN)\", \"FB analyzer (x2y | CN)\"],\n  [\"fs\", \"First Block Square\", \"FB square\"],\n  [\"fsdr\", \"First Block Square + DR edge\", \"FB square + DR\"],\n  [\"fbdr\", \"First Block Last Pair (+ DR edge)\", \"FB last pair (+DR)\"],\n  [\"fbss\", \"First Block Last Pair + Second Square\", \"FB last pair + SS\"],\n  [\"ss\", \"Second Block Square\", \"SB square\"],\n  [\"cmll\", \"CMLL\", \"CMLL\"],\n  //TODO: build this [\"misc-algs\", \"OLLCP\", \"OLLCP\"],\n  [\"4c\", \"LSE 4c\", \"LSE 4c\"],\n  [\"eopair\", \"EOLR / EOLRb\", \"EOLR(b)\"]\n  //[\"tracking\", \"Tracking Trainer (Beta)\", \"Tracking\"]\n]\n\nfunction _getInitialHashLocation() {\n  const default_idx = tab_modes.findIndex(x => x[0] === \"fbdr\")\n  if (window.location.hash) {\n    let idx = tab_modes.findIndex(x => x[0] === window.location.hash.slice(1))\n    if (idx === -1) {\n      window.location.hash = \"\";\n      return default_idx;\n    } else {\n      return idx;\n    }\n  } else {\n    return default_idx\n  }\n}\n\nconst introText = `# Onionhoney's Roux Trainers\n- A trainer collection that caters to all your Roux training needs  ❤️\n- Inspired by http://cubegrass.appspot.com/, but with everything that it is missing.\n\n## Modes supported\n- FB analyzer\n    - Solves for all x2y FBs, and suggests the best FB to start with!\n    - Also suggests the best FS/Pseudo FS/Line to start with!\n    - Can be presented as a 'can you find the x-mover' quiz with solution revealed in the spoiler.\n    - More orientations supported too (CN, blue/green x2y, red/orange x2y)\n- FB last slot (+ DR) trainer\n    - \\`HIGHLY USEFUL\\` if you're learning FB or FB + DR. Get a random scramble, think on your own, and check with our solutions!\n    - **Note**: while I try my best, the solver can still miss out on the best overall solution. So please, consult your human fellows when you're unsure, and always be careful with what you choose to learn.\n- FS/FB/SS trainer\n    - You can specify by piece positions. It seems these modes are pretty useful in providing new insights into blockbuilding  (for us dumb humans).\n- CMLL trainer\n    - Truly random L10P scrambles so you can't tell the cases. You can specify different OCLLs. You can even start with a random SB last pair (to simulate how real recognition works)\n    - Show only the stickers necessary for recognition!\n- LSE trainers (EOLR, 4c)\n    - Good for reviewing EOLR and practicing your 4c recognition method. You can filter by MC/Non-MC cases too.\n\n## Shortcuts\n- Space for the next scramble.\n- Enter to reset the virtual cube to current scramble.\n- Control your cube with cstimer key mapping.\n\n## Functionalities\n- Scrambles are all random state. Solver is Roux-optimized with M and r moves as first-class citizens, with up to 25 different solutions provided.\n\n- You can control the virtual cube with keyboard (CStimer mapping). You can also drag on the cube to change its perspective.\n\n- You can bookmark your favorite cases and these will be saved in your browser.\n\n- You can input your own scrambles as a list and our trainer will drain them one by one!\n\n- Appearance: dark mode enabled.\n\n---\n\n## Version Log\n- (v1.0.0) All work prior to 12/02/2020, which I forgot to version log for.\n- (v1.0.1) 12/02/2020: Add edge position control for FB Last Pair trainer.\n- (v1.1) 12/15/2020: Reworked UI. App bar now features a dropdown menu for selecting the mode. Scramble occupies its own row. Solutions are shown side by side with the sim cube in large screen.\n- (v1.2) 12/17/2020: Add support for scramble input for all modes. Now you can paste in a list of scrambles, and the trainer will consume them one by one in order.\n- (v1.3) 12/20/2020: Solve Analysis Beta is online! It can do the following:\n    - For any random scramble, it'll recommend the best FB solutions over all orientations (e.g. x2y yellow/white).\n    - Given a solve reconstruction, it'll analyze each stage, and compare your solution there with the solver-suggested solutions.\n- (v1.4) 12/23/2020: Refine the appearance of the virtual cube and enable camera control with mouse dragging.\n- (v1.5) 2/18/2021: Introduced Tracking Trainer Beta.\n- Refer to Github page for the full version log: https://github.com/onionhoney/roux-trainers\n\n---\n\nIf you have ideas on how to improve the app just shoot a message and let me know. <3\n`\n\nfunction Intro() {\n  return <Markdown>{introText}</Markdown>\n}\n\n// TODO: Write getter and setter for config items, and also write handlers that map to setters\nfunction AppView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n  //const [locations, setLocations] = React.useState([])\n  let { state, dispatch } = props\n  let classes = useStyles()\n\n  const handleChange = React.useCallback( (newValue:number) => {\n    if (newValue < tab_modes.length) {\n      setValue(newValue)\n      let mode = tab_modes[newValue][0]\n      dispatch({type: \"mode\", content: mode})\n    }\n  }, [dispatch])\n\n  const [ open, setOpen ] = React.useState(false)\n\n  const [value, setValue] = React.useState(_getInitialHashLocation());\n  React.useEffect( () => {\n    dispatch({type: \"mode\", content: tab_modes[_getInitialHashLocation()][0]})\n  }, [dispatch])\n\n  const handleInfoOpen = () => { setOpen(true) }\n  const handleInfoClose = () => { setOpen(false) }\n\n  const toggleBright = () => {\n    const theme_flag = [...state.config.theme.flags]\n    theme_flag[0] = 1 - theme_flag[0]\n    theme_flag[1] = 1 - theme_flag[1]\n    dispatch({ type: \"config\", content: {\n      theme: state.config.theme.setFlags(theme_flag)\n    }})\n  }\n  const toggleFav = () => {\n    setFav(!showFav)\n  }\n\n  const [ showFav, setFav ] = React.useState(false)\n  const createTabPanels = (elements: any[]) => {\n    return <React.Fragment>\n    {\n      elements.map( (el, i) => <TabPanel key={i} value={value} index={i} className={classes.page}>{el}</TabPanel>)\n    }\n    </React.Fragment>\n  }\n  return (\n    <main>\n      <Dialog open={open} onClose={handleInfoClose} >\n      <DialogContent dividers>\n        <Intro></Intro>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"primary\" onClick={handleInfoClose}>\n          Got it!\n        </Button>\n      </DialogActions>\n      </Dialog>\n\n      <TopBarView onChange={handleChange} value={value}\n        handleInfoOpen={handleInfoOpen} toggleBright={toggleBright} toggleFav={toggleFav}\n      />\n\n      <Box paddingY={2} paddingX={0}>\n      <Container maxWidth={showFav ? \"lg\" : \"md\" }>\n\n      {\n      value === -1?\n      (\n      <Grid container className={classes.container} spacing={3}>\n        <Grid item md={12} sm={12} xs={12}>\n        <TabPanel value={value} index={4} className={classes.page}>\n          <PanoramaView {...{state, dispatch}} />\n        </TabPanel>\n        </Grid>\n      </Grid>\n      )\n      :\n      (\n      <Grid container className={classes.container} spacing={ 3}>\n        <Grid item hidden={!showFav} md={4} sm={4} xs={12} >\n        <FavListView {...{state, dispatch}} />\n        </Grid>\n\n        <Grid item md={showFav ? 8 : 12} sm={showFav ? 8 : 12} xs={12}>\n        {\n          createTabPanels([\n            <BlockTrainerView {...{state, dispatch}} />, // fb\n            <AnalyzerView {...{state, dispatch}} />,\n            <BlockTrainerView {...{state, dispatch}} />, // fs\n            <BlockTrainerView {...{state, dispatch}} />, // fsdr\n            <BlockTrainerView {...{state, dispatch}} />, // fbdr\n            <BlockTrainerView {...{state, dispatch}} />, // fbss\n            <BlockTrainerView {...{state, dispatch}} />, // ss\n            <CmllTrainerView {...{state, dispatch}} />,\n            // <OllcpTrainerView {...{state, dispatch}} />,\n            <BlockTrainerView {...{state, dispatch}} />,\n            <BlockTrainerView {...{state, dispatch}} />,\n            /*<TrackerView {...{state, dispatch}} /> */\n          ])\n        }\n\n        </Grid>\n      </Grid>\n      )\n      }\n      </Container></Box>\n    </main>\n  )\n}\nexport default AppView","const version = \"2.3\"\n\nexport {version}","export default class Selector {\n    names: string[];\n    flags: number[];\n    kind: string;\n    label?: string;\n    annotation?: string;\n\n    constructor(config: {names: string[], flags: number[], kind: string, label?: string, annotation? : string}) {\n        const { names, flags, kind, label, annotation } = config\n        this.names = names\n        this.flags = flags\n        this.kind = kind\n        this.label = label\n        this.annotation = annotation\n    }\n\n    getActiveNames() {\n        let ans = []\n        for (let i = 0; i < this.flags.length; i++) {\n            if (this.flags[i] === 1) {\n                ans.push(this.names[i])\n            }\n        }\n        return ans\n    }\n\n    getActiveName() {\n        for (let i = 0; i < this.flags.length; i++) {\n            if (this.flags[i] === 1) {\n                return (this.names[i])\n            }\n        }\n        return \"\"\n    }\n\n    setFlags(newFlags: number[]) {\n        const { names, kind, label } = this\n        return new Selector({names, flags: newFlags, kind, label})\n    }\n}","\nimport { FavCase } from \"./Types\"\nimport Selector from './lib/Selector';\nimport { cmll_algs_raw } from './lib/Algs';\nimport { SliderOpt } from \"./Types\";\n\nexport const initialFavList : FavCase[] = []\n\nexport type Config = {\n    showCube: Selector;\n    theme: Selector;\n    evaluator: Selector;\n    moveCountHint: Selector;\n    fbdrLevelSelector: SliderOpt;\n    fbssLevelSelector: SliderOpt;\n    fbLevelSelector: SliderOpt;\n    fsLevelSelector: SliderOpt;\n    ssLevelSelector: SliderOpt;\n    // lse4cLevelSelector: SliderOpt,\n    // eolrLevelSelector: SliderOpt,\n    cmllSelector: Selector;\n    cmllCaseSelector: Selector;\n    cmllAufSelector: Selector;\n    cmllCubeMaskSelector: Selector;\n    cmll2D3DSelector: Selector;\n    cmll3DFaceSelector: Selector;\n    cmllflat3DFaceSelector: Selector;\n    cmllKataSelector: Selector;\n    cmllBatchModeSelector: Selector;\n    nmcllSelector: Selector;\n    triggerSelector: Selector;\n    hyperOriSelector: Selector;\n    ollcpCaseSelector: Selector;\n    orientationSelector: Selector;\n    fbdrSelector: Selector;\n    fsSelector: Selector;\n    fbdrPosSelector1: Selector;\n    fbdrPosSelector2: Selector;\n    fbdrPosSelector3: Selector;\n    fbssLpSelector: Selector;\n    fbssSsSelector: Selector;\n    ssSelector: Selector;\n    ssEOSelector: Selector;\n    ssPosSelector: Selector;\n    fbOnlySelector: Selector;\n    // fbStratSelector: Selector;\n    fbBasisSelector: Selector;\n    fbdrScrambleSelector: Selector;\n    ssPairOnlySelector: Selector;\n    fbPairSolvedSelector: Selector;\n    solutionNumSelector: Selector;\n    fbPieceSolvedSelector: Selector;\n    lseMCSelector: Selector;\n    lseBarSelector: Selector;\n    lseStageSelector: Selector;\n    lseEOSelector: Selector;\n    lseEOLRMCSelector: Selector;\n    lseBarbieSelector: Selector;\n    lseEOLRScrambleSelector: Selector;\n    obscureNonLRSelector: Selector;\n    obscureStickerWidthSelector: Selector;\n    obscureCornerMaskSelector: Selector;\n};\n\nconst cmll_alg_names = cmll_algs_raw.map(x => x[0])\nconst ollcp_alg_names = cmll_algs_raw.map(x => x[0])\n\nexport const EOLRMode = {\n    NONMC_SHORTER_ONLY: \"Only show cases where non-MC is optimal\",\n    MC_SHORTER_ONLY: \"Only show cases where MC is optimal\",\n    COMBINED: \"Combined\",\n    MC_ONLY: \"Only show MC solutions\",\n    NONMC_ONLY: \"Only show non-MC solutions\"\n}\n\nconst fbPieceSolvedAnnotation = `\nExplanation:\nThese modes apply different constraints on your FB state.\n[Hard] means there's no free pair AND no edges attached to the L center.\n[Hard over x2y] means it's hard for all FBs over the x2y orientations. To see solutions, paste them into the FB analyzer.`\n\nconst initialLevels = {\n    fbdrLevelSelector: ({\n        l: 1, r: 7, label: \"fbdr-level\", value: 0, extend_r: true\n    }),\n    fbssLevelSelector: ({\n        l: 3, r: 9, label: \"fbss-level\", value: 2\n    }),\n    fsLevelSelector: ({\n        l: 1, r: 6, label: \"fs-level\", value: 0\n    }),\n    fbLevelSelector: ({\n        l: 3, r: 8, label: \"fb-level\", value: 2, extend_r: true\n    }),\n    ssLevelSelector: ({\n        l: 1, r: 10, label: \"ss-level\", value: 0\n    }),\n    // lse4cLevelSelector: ({\n    //     l: 1, r: 11, label: \"4c-level\", value: 0\n    // }),\n    // eolrLevelSelector: ({\n    //     l: 1, r: 11, label: \"eolr-level\", value: 0\n    // }),\n}\nexport const initialConfig : Config = (() => {\n    let arr_ori_flag = Array(24).fill(0)\n    arr_ori_flag[7] = 1 // YR\n    return {\n        showCube: new Selector({\n            label: \"Virtual Cube\",\n            names:[\"Show\", \"Hide\"],\n            flags: [1,0],\n            kind: \"virtual-cube\"\n        }),\n        theme: new Selector({\n            names: [\"bright\", \"dark\"],\n            flags: [0, 1],\n            kind: \"theme\"\n        }),\n        evaluator: new Selector({\n            label: \"Solution Sorting Metrics\",\n            names: [\"Default\", \"QTM\"],\n            flags: [1, 0],\n            kind: \"evaluator\"\n        }),\n        moveCountHint: new Selector({\n            label: \"Show Movecount Hint\",\n            names: [\"Show\", \"Hide\"],\n            flags: [1, 0],\n            kind: \"movecount_hint\"\n        }),\n        cmllSelector: new Selector({\n            names: [\"o\", \"s\", \"as\", \"t\", \"l\", \"u\", \"pi\", \"h\"],\n            flags: [1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"cmll\",\n        }),\n        nmcllSelector: new Selector({\n            names: [\"o_1\", \"o_2\", \"s_1\", \"s_2\", \"s_3\", \"as_1\", \"as_2\", \"as_3\", \"t_1\", \"t_2\", \"t_3\",\n                    \"u_1\", \"u_2\", \"u_3\", \"l_1\", \"l_2\", \"l_3\", \"pi_1\", \"pi_2\", \"pi_3\", \"h_1\", \"h_2\", \"h_3\"],\n            flags: Array(23).fill(1),\n            kind: \"nmcll\",\n        }),\n        cmllCaseSelector: new Selector({\n            names: cmll_alg_names,\n            flags: Array(cmll_alg_names.length).fill(1),\n            kind: \"cmll_case\"\n        }),\n        cmllAufSelector: new Selector({\n            names: [\"None\", \"U\", \"U'\", \"U2\"],\n            flags: [1, 1, 1, 1],\n            kind: \"u_auf\"\n        }),\n        //TODO: show L face\n        cmllCubeMaskSelector: new Selector({\n            names: [\"Show\", \"Hide\", \"Hide LSE\"],\n            flags: [1, 0, 0],\n            kind: \"cube_mask\"\n        }),\n        cmll2D3DSelector: new Selector({\n            names: [\"flat3D\", \"3D\", \"2D\"],\n            flags: [1, 0, 0],\n            kind: \"cmll_vis_type\"\n        }),\n        cmll3DFaceSelector: new Selector({\n            names: [\"Show\", \"Hide\"],\n            flags: [0, 1],\n            kind: \"cmll_3d_faces\"\n        }),\n        cmllflat3DFaceSelector: new Selector({\n            names: [\"L\", \"R\"],\n            flags: [0, 1],\n            kind: \"cmll_flat3d_faces\"\n        }),\n        cmllKataSelector: new Selector({\n            names: [\"off\", \"on\"],\n            flags: [1, 0],\n            kind: \"cmll_kata_type\"\n        }),\n        cmllBatchModeSelector: new Selector({\n            names: [\"off\", \"on\"],\n            flags: [1, 0],\n            kind: \"cmll_batch_mode\"\n        }),\n        triggerSelector: new Selector({\n            names: [\"RUR'\", \"RU'R'\", \"R'U'R\", \"R'UR\", \"RU2R'\", \"R'U2R\"],\n            flags: [0, 0, 0, 0, 0, 0],\n            kind: \"trigger\"\n        }),\n        hyperOriSelector: new Selector({\n            names: [\"off\", \"L/R\", \"F/B\"],\n            flags: [1 ,0, 0],\n            kind: \"hyperori\"\n        }),\n        ollcpCaseSelector: new Selector({\n            names: ollcp_alg_names,\n            flags: Array(ollcp_alg_names.length).fill(1),\n            kind: \"ollcp_case\"\n        }),\n        orientationSelector: new Selector({\n            label: \"Color Scheme (U-F)\",\n            names: [\n                \"WG\", \"WB\", \"WO\", \"WR\",\n                \"YG\", \"YB\", \"YO\", \"YR\",\n                \"BW\", \"BY\", \"BO\", \"BR\",\n                \"GW\", \"GY\", \"GO\", \"GR\",\n                \"OW\", \"OY\", \"OB\", \"OG\",\n                \"RW\", \"RY\", \"RB\", \"RG\",\n            ],\n            flags: arr_ori_flag,\n            kind: \"orientation\"\n        }),\n        // fbStratSelector: new Selector({\n        //     label: \"Strategy for solving FB\",\n        //     names: [\"Any\", \"Half-Line\", \"Line\", \"DL\"],\n        //     flags: [1, 0, 0, 0],\n        //     kind: \"fb-strat\"\n        // }),\n        fbBasisSelector: new Selector({\n            label: \"Basis (piece considered solved) for FB. Default is L-center solved.\",\n            names: [\"Default\", \"DL\", \"BL\"],\n            flags: [1, 0, 0],\n            kind: \"fb-basis\"\n        }),\n        fbdrSelector: new Selector({\n            label: \"Position of square\",\n            names: [\"FS at back\", \"FS at front\", \"Either\"],\n            flags: [1, 0, 0],\n            kind: \"fbdr\"\n        }),\n        fbdrScrambleSelector: new Selector({\n            label: \"Type of scramble\",\n            names: [\"Short (Concerning FBDR Pieces only)\", \"Random State (Entire cube, useful for practicing F2B)\"],\n            flags: [1, 0],\n            kind: \"fbdr-scramble\"\n        }),\n        fbOnlySelector: new Selector({\n            label: \"Pieces to solve\",\n            names: [\"FB Last Pair + DR\", \"FB Last Pair Only\"],\n            flags: [0, 1],\n            kind: \"fb-only\"\n        }),\n        fbPairSolvedSelector: new Selector({\n            label: \"Last Pair pattern\",\n            names: [\"Random\", \"Solved\"],\n            flags: [1, 0],\n            kind: \"fb-pair-solved\"\n        }),\n        fbdrPosSelector1: new Selector({\n            label: \"Position of FB edge\",\n            names: [\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n                    \"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n            flags: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"fbdr-position-1\"\n        }),\n        fbdrPosSelector2: new Selector({\n            label: \"Position of FB edge\",\n            names: [\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n                    \"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n            flags: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"fbdr-position-2\"\n        }),\n        fbdrPosSelector3: new Selector({\n            label: \"Position of DR\",\n            names: [\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n                    \"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n            flags: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"fbdr-position-3\"\n        }),\n\n        fsSelector: new Selector({\n            label: \"Position of square\",\n            names: [\"Front FS\", \"Back FS\", \"Both\"],\n            flags: [0, 0, 1],\n            kind: \"fs\"\n        }),\n        ssSelector: new Selector({\n            label: \"Square position\",\n            names: [\"Front SS\", \"Back SS\", \"Both\"],\n            flags: [1, 0, 0],\n            kind: \"ss\"\n        }),\n        ssEOSelector: new Selector({\n            label: \"Orientation of DR\",\n            names: [\"Oriented\", \"Misoriented\", \"Either\"],\n            flags: [1, 0, 0],\n            kind: \"ss-orientation\"\n        }),\n        ssPosSelector: new Selector({\n            label: \"Position of DR\",\n            names: [\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n                    \"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n            flags: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"ss-position\"\n        }),\n        ssPairOnlySelector: new Selector({\n            label: \"Pieces to solve\",\n            names: [\"SS\", \"DR fixed\"],\n            flags: [1, 0],\n            kind: \"sb-pair-only\"\n        }),\n        solutionNumSelector: new Selector({\n            label: \"Number of solutions\",\n            names: [\"1\", \"3\", \"5\", \"10\", \"25\", \"100\"],\n            flags: [0, 0, 1, 0, 0, 0],\n            kind: \"solution-num\"\n        }),\n        fbPieceSolvedSelector: new Selector({\n            label: \"Difficulty\",\n            names: [\"Random\", \"DL Solved\", \"BL Solved\", \"Hard\", \"Hard over x2y (Scramble only)\"],\n            annotation: fbPieceSolvedAnnotation,\n            flags: [1, 0, 0, 0, 0],\n            kind: \"fb-piece-solved\"\n        }),\n        fbssLpSelector: new Selector({\n            label: \"FBLP Position\",\n            names: [\"Front FBLP\", \"Back FBLP\"],\n            flags: [1, 0],\n            kind: \"fbss-lp\"\n        }),\n        fbssSsSelector: new Selector({\n            label: \"SS Position\",\n            names: [\"Front SS\", \"Back SS\" , \"Both\"],\n            flags: [1, 0, 0],\n            kind: \"fbss-ss\"\n        }),\n        lseMCSelector: new Selector({\n            label: \"Center\",\n            names: [\"Aligned\", \"Misaligned\"],\n            flags: [0, 1],\n            kind: \"lse-mc\"\n        }),\n        lseBarSelector: new Selector({\n            label: \"EO Pair\",\n            names: [\"ULUR\", \"UFUB\"],\n            flags: [1, 0],\n            kind: \"lse-bar\"\n        }),\n        lseStageSelector: new Selector({\n            label: \"Stage\",\n            names: [\"4b for MC(1 move EOPair insert)\", \"M2 to 4c\", \"4c\"],\n            flags: [0, 1, 0],\n            kind: \"lse-stage\"\n        }),\n        lseEOSelector: new Selector({\n            label: \"EO\",\n            names: [\"solved\", \"arrow\", \"4/0\", \"2o/0\", \"2a/0\", \"1/1\", \"6flip\", \"2o/2\", \"0/2\", \"2a/2\"],\n            flags: [0, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"lse-eo\"\n        }),\n        lseEOLRMCSelector: new Selector({\n            label: \"Center strategy\",\n            names: [EOLRMode.NONMC_ONLY, EOLRMode.MC_ONLY, EOLRMode.COMBINED, EOLRMode.NONMC_SHORTER_ONLY, EOLRMode.MC_SHORTER_ONLY ],\n            flags: [0, 0, 1, 0, 0],\n            kind: \"lse-eolrmc\"\n        }),\n        lseBarbieSelector: new Selector({\n            label: \"EOLR / EOLRb\",\n            names: [\"EOLR\", \"EOLRb\", \"EOdM\"],\n            flags: [1, 0, 0],\n            kind: \"lse-barbie\"\n        }),\n        lseEOLRScrambleSelector: new Selector({\n            label: \"Type of scramble\",\n            names: [\"Short\", \"Random State\"],\n            flags: [0, 1],\n            kind: \"lse-eolr-scramble\"\n        }),\n        obscureNonLRSelector: new Selector({\n            label: \"Obscure Non-L/R\",\n            names: [\"Off\", \"On\"],\n            flags: [1, 0],\n            kind: \"obscure-non-lr\"\n        }),\n        obscureStickerWidthSelector: new Selector({\n            label: \"Obscured Sticker Width\",\n            names: [\"Thin\", \"Medium\", \"Thick\"],\n            flags: [0, 1, 0],\n            kind: \"obscure-sticker-width\"\n        }),\n        obscureCornerMaskSelector: new Selector({\n            label: \"Full Corner Masking\",\n            names: [\"Off\", \"On\"],\n            flags: [1, 0],\n            kind: \"obscure-corner-mask\"\n        }),\n        ...initialLevels\n    }\n})()\n\n","import { FavCase, Mode, SliderOpt } from \"../Types\"\nimport { version } from \"../Version\"\nimport { initialConfig, initialFavList, Config } from \"../Config\"\nimport Selector from '../lib/Selector';\n\nexport type FavCaseStore = {mode: Mode, setup: string, solver: string }\nlet favListManager = function() {\n    const key = \"fav\"\n    let cache : FavCase[] | null = null\n    let getFavList = () => {\n        if (cache) return cache\n        const item = window.localStorage.getItem(key)\n        const item1 : FavCaseStore[] = item ? JSON.parse(item) : initialFavList\n        const item2 : FavCase[] = item1.map( ({mode, setup, solver}) => ({mode, setup, solver: solver.trim().split(\"|\")}) );\n        return item2\n    }\n    let setFavList = (item : FavCase[]) => {\n        const item1 : FavCaseStore[] = item.map(({mode, setup, solver}) => ({mode, setup, solver: solver.join(\"|\")}) );\n        window.localStorage.setItem(key, JSON.stringify(item1));\n        cache = item\n    }\n    return {\n        getFavList,\n        setFavList\n    }\n}()\n\nlet serializeConfig = (config : Config) => {\n    return JSON.stringify(config)\n}\n\nlet deserializeConfig = (s: string) => {\n    const obj = JSON.parse(s)\n    return Object.fromEntries(Object.entries(obj).map( \n        ([k, v]) => {\n            if (\"names\" in (v as any)) { \n                return [k, new Selector(v as Selector)] \n            } else {\n                return [k, v as SliderOpt]\n            }\n        }) )\n}\n\nlet configManager = function() {\n    const key = \"config\"\n    const versionKey = \"version\"\n    let cache : Config | null = null\n\n    let resetConfig = () => {\n        const item = window.localStorage.getItem(key);\n        const item1 : Partial<Config> = item ? deserializeConfig(item) : initialConfig\n        // let's preserve orientation\n        let config = initialConfig\n        if (item1.orientationSelector) {\n            config = {...initialConfig, orientationSelector: new Selector(item1.orientationSelector) }\n        }\n        window.localStorage.setItem(key, serializeConfig(config));\n        window.localStorage.setItem(versionKey, version)\n\n        return config\n    }\n    let getConfig = () => {\n        if (cache) {\n            return cache\n        }\n        const item = window.localStorage.getItem(key);\n        const vers = window.localStorage.getItem(versionKey)\n\n        const item1 : Partial<Config> = item ? deserializeConfig(item) : initialConfig\n\n        if ( vers !== version) {\n            // version out of date\n            // let's preserve orientation and theme\n            let config = initialConfig\n            if (item1.orientationSelector) {\n                config = {...initialConfig, orientationSelector: new Selector(item1.orientationSelector) }\n            }\n            if (item1.theme) {\n                config = {...config, theme: new Selector(item1.theme)}\n            }\n            window.localStorage.setItem(key, serializeConfig(config));\n            window.localStorage.setItem(versionKey, version)\n\n            return config\n        }\n\n        // If current value is uninitialized we'll initialize it\n        if ( (item1 === null) || (item1 === undefined) || Object.keys(item1).length === 0) {\n            window.localStorage.setItem(key, serializeConfig(initialConfig));\n            return initialConfig\n        }\n        // sometimes we want to append new fields without changing the version. this code handles that.\n        if (Object.keys(item1).length < Object.keys(initialConfig).length) {\n            const item2 = {...initialConfig, ...item1}\n            window.localStorage.setItem(key, serializeConfig(item2));\n            return item2\n        }\n        //console.log(\"config = \", item1)\n\n        cache = item1 as Config\n        return cache\n    }\n\n    let setConfig = (partial: Partial<Config>) => {\n        let newConfig : Config = Object.assign(getConfig(), partial)\n        window.localStorage.setItem(key, serializeConfig(newConfig));\n        cache = newConfig\n    }\n\n    return {\n        getConfig,\n        setConfig,\n        resetConfig\n    }\n}()\n\nlet {getConfig, setConfig, resetConfig} = configManager\nlet getFavList = favListManager.getFavList\nlet setFavList = favListManager.setFavList\n\nexport {\n    getConfig, setConfig, resetConfig, getFavList, setFavList\n}\n","import { AppState, FavCase } from \"../Types\";\nimport { Config } from \"../Config\";\n/* State Manager\n * \"Passively\" updates localstorage in reduce.\n * Action types\n *  - move: respond to cube move\n *  - replay: replay case\n *  - reactToConfig: respond to changes in config\n */\nexport abstract class AbstractStateM {\n    state: AppState;\n    constructor(state: AppState) {\n        this.state = state;\n    }\n    /* when new moves arrive (from virtual cube control) */\n    abstract onMove(s: string): AppState;\n    /* when global config changes */\n    abstract onConfig(conf: Config): AppState;\n    /* when user clicks a button or presses a key */\n    abstract onControl(s: string): AppState;\n    /* when user replays an item from the favlist */\n    onReplay(case_: FavCase): AppState {\n        return this.state;\n    }\n}\n\nexport class StateFactory {\n    static create = (state: AppState) => {\n        let filler = ( (()=>1) as unknown ) as (state: AppState) => AbstractStateM;\n        return filler(state);\n    }\n}","import { AppState, FavCase, SliderOpt } from \"../Types\";\nimport { alg_generator_from_group, CaseDesc } from \"../lib/Algs\";\nimport { Face, Typ, FBpairPosBackFS, FBpairPosFrontFS } from \"../lib/Defs\";\nimport { CubieCube, CubeUtil, Mask, FaceletCube, MoveSeq } from '../lib/CubeLib';\nimport { Evaluator, SeqEvaluator, getEvaluator } from \"../lib/Evaluator\";\nimport { CachedSolver } from \"../lib/CachedSolver\";\nimport { rand_choice, arrayEqual } from '../lib/Math';\nimport { AbstractStateM, StateFactory } from \"./AbstractStateM\";\nimport { Config } from \"../Config\";\n\ntype RandomCubeT = {\n    cube: CubieCube,\n    solvers: string[],\n    ssolver: string,\n    failed?: boolean\n}\n\nexport abstract class BlockTrainerStateM extends AbstractStateM {\n    abstract solverL: number;\n    abstract solverR: number;\n    scrambleMargin: number = 2;\n    scrambleCount: number = 3;\n    algDescWithMoveCount: string = \"\";\n    expansionFactor = 5;\n    premoves: string[] = [\"\"];\n    orientations: string[] = [\"\"];\n    evaluator : Evaluator;\n    levelMaxAttempt = 1000;\n    // [case, solver]\n    abstract getRandomAnyLevel(): RandomCubeT\n    getLevelSelector() : SliderOpt | null {\n        return null\n    }\n    checkLevelConstraint(n: number) : boolean {\n        // default to true\n        let slider = this.getLevelSelector()\n        if (!slider) return true;\n        // default to true\n        // either slider at \"ANY\" or depth must match\n        return ( (slider.value === slider.l - 1) || \n                 (slider.value === n) ||\n                 (slider.value === slider.r && slider.value < n && (!!slider.extend_r)) ||\n                 (slider.value === slider.l && slider.value > n && (!!slider.extend_l))\n               );\n    }\n    levelConstraintOkayWithUpperBound(b: number) : boolean {\n        // default to true\n        let slider = this.getLevelSelector()\n        if (!slider) return true;\n        // default to true\n        // either slider at \"ANY\" or depth must match\n        return ( (slider.value === slider.l - 1) || \n                 (slider.value >= b) ||\n                 (slider.value === slider.r && (!!slider.extend_r))\n               );\n    }\n    getRandom() : RandomCubeT {\n        for (let i = 0; i < this.levelMaxAttempt; i++) {\n            let {cube, solvers, ssolver} = this.getRandomAnyLevel()\n            const premoves = this.premoves || [\"\"]\n            let bound = Math.min(...solvers.map(solver => premoves.map(pm => \n                    CachedSolver.get(solver).getPruners()[0].query(cube.apply(pm)) )).flat())\n            //console.log(\"bound estimate = \", bound, this.getLevelSelector()?.value, this.levelConstraintOkayWithUpperBound(bound))\n            if (!this.levelConstraintOkayWithUpperBound(bound)) {\n                continue;\n            }   \n            let level = Math.min(...solvers.map(solver => premoves.map(pm => \n                    CachedSolver.get(solver).solve(cube.apply(pm), 0, this.solverR, 1)[0].moves.length)).flat())\n            if (this.checkLevelConstraint(level)) {\n                //TODO: add debug mode\n                console.debug(`generated random state after ${i+1} tries.`)\n                return {cube, solvers, ssolver}\n            }\n        }\n        console.log(`failed to generate random state after ${this.levelMaxAttempt} tries`)\n        return {...this.getRandomAnyLevel(), failed: true}\n    }\n\n    constructor(state: AppState) {\n        super(state)\n        // Enable below only when we decide to support evaluator selection\n        //let evalName = this.state.config.evaluator.getActiveName()\n        //this.evaluator = getEvaluator(evalName)\n        this.evaluator = new SeqEvaluator()\n    }\n    _solve_with_solvers(cube: CubieCube, solverNames: string[]): CaseDesc[]{\n        const state = this.state;\n        const totalSolutionCap = 0 | (+(state.config.solutionNumSelector.getActiveName() || 5) * this.expansionFactor);\n        const selectedSolutionCap = +(state.config.solutionNumSelector.getActiveName() || 5);\n        let getDesc = (solverName: string) => {\n            const solver = CachedSolver.get(solverName);\n            const premoves = this.premoves || [\"\"]\n            let solutions = premoves.map(pm =>\n                solver\n                .solve(cube.apply(pm), 0, this.solverR, totalSolutionCap)\n                .map(sol => ({pre: pm, sol: sol, score: this.evaluator.evaluate(sol)}) )).flat()\n            solutions.sort((a, b) => a.score - b.score);\n            const toString = (sol: any) =>\n                (sol.pre === \"\" ? \"\" : \"(\" + sol.pre + \") \") +\n                sol.sol.toString(this.algDescWithMoveCount); // + sol.score.toFixed(2);\n            const algs = solutions.slice(0, selectedSolutionCap).map(toString);\n            let algdesc: CaseDesc = {\n                id: `${solverName}`,\n                algs,\n                kind: `${solverName}`\n            }\n            return algdesc\n        }\n        return solverNames.map(getDesc)\n    }\n\n    _solve(cube: CubieCube, solverNames: string[], options?: {\n        updateSolutionOnly?: boolean, scrambleSolver?: string,\n        scramble?: string,\n    }) {\n        const state = this.state;\n        options = options || {}\n        let algDescs = this._solve_with_solvers(cube, solverNames);\n        let setup : string\n        if (options.scramble) {\n            setup = options.scramble\n        } else if (options.updateSolutionOnly) {\n            setup = this.state.case.desc[0]!.setup!\n        } else {\n            const scramble = options.scrambleSolver === \"min2phase\"?\n            CachedSolver.get(\"min2phase\").solve(cube,0,0,0)[0].inv() :\n            (()=>{\n                const solutionLength = new MoveSeq(algDescs[0].algs[0]).remove_setup().moves.length;\n                //console.log(options)\n                //console.log(\"SOLVING CUBE \", cube)\n                let result = rand_choice(\n                    CachedSolver.get(options.scrambleSolver || solverNames[0])\n                    .solve(cube, Math.min(this.solverR, Math.max(this.solverL, solutionLength + this.scrambleMargin)),\n                        this.solverR, this.scrambleCount || 1))?.inv()\n                //if (result === undefined) {\n                //    result = rand_choice(CachedSolver.get(options.scrambleSolver || solverNames[0])\n                //    .solve(cube, 0, this.solverR, this.scrambleCount || 1)).inv()\n                //}\n                return result\n            })()\n            setup = scramble.toString()\n        }\n        if (algDescs.length === 0) {\n            algDescs = [{\n                id: `min2phase`,\n                algs: [],\n                setup,\n                kind: `min2phase`\n            }];\n        } else {\n            // populate setup into setup\n            algDescs.forEach(algDesc => algDesc.setup = setup);\n        }\n\n        const ori = (options.updateSolutionOnly) ? this.state.cube.ori : alg_generator_from_group(state.config.orientationSelector)().id;\n        const name = options.updateSolutionOnly ? this.state.name : \"hiding\";\n        // console.log(\"algdesc\", algdesc)\n        return {\n            ...state,\n            name: name,\n            cube: {\n                ...state.cube,\n                state: cube,\n                ori\n            },\n            case: {\n                state: new CubieCube().apply(setup),\n                desc: algDescs\n            }\n        };\n    }\n    _updateCase(): AppState {\n        let {cube, solvers: solverNames, ssolver: scrambleSolver, failed} = this.getRandom();\n        let inputScramble : string | undefined = undefined\n        if (this.state.scrambleInput.length > 0) {\n            inputScramble = this.state.scrambleInput[0]\n            cube = new CubieCube().apply(inputScramble)\n        }\n        let state = this._solve(cube, solverNames, {\n            updateSolutionOnly: false,\n            scrambleSolver,\n            scramble: inputScramble\n        });\n        if (inputScramble) {\n            state = {...state, \n                scrambleInput: state.scrambleInput.slice(1)\n            }\n        }\n        state = {...state, cube: {...state.cube, levelSuccess: !failed}}\n        return state\n    }\n    _updateCap(): AppState {\n        const state = this.state;\n        if (state.case.desc.length === 0) {\n            return state;\n        }\n        const [cube, solverNames] = [state.cube.state, state.case.desc!.map(x => x.kind)];\n        return this._solve(cube, solverNames, {\n            updateSolutionOnly:true\n        });\n    }\n    onReplay(case_: FavCase): AppState {\n        const cube = new CubieCube().apply(case_.setup)\n        const state1 = this._solve(cube, case_.solver, {scramble: case_.setup});\n        return {\n            ...state1,\n            mode: case_.mode\n        };\n    }\n    onControl(s: string): AppState {\n        let state = this.state;\n        if (s === \"#space\") {\n            if (state.name === \"revealed\") {\n                return this._updateCase();\n            }\n            else {\n                return {\n                    ...state,\n                    name: \"revealed\"\n                };\n            }\n        }\n        else if (s === \"#enter\") {\n            return {\n                ...state,\n                cube: {\n                    ...state.cube,\n                    state: state.case.state,\n                }\n            };\n        }\n        else {\n            return state;\n        }\n    }\n    onMove(movestr: string): AppState {\n        let state = this.state;\n        let move = new MoveSeq(movestr);\n        let cube = state.cube.state.apply(move);\n        return {\n            ...state,\n            cube: {\n                ...state.cube,\n                state: cube\n            }\n        };\n    }\n    onConfig(conf: Config): AppState {\n        // see if solution cap changed\n        let changed = !arrayEqual(this.state.config.solutionNumSelector.flags, conf.solutionNumSelector.flags);\n        if (changed) {\n            return (StateFactory.create({ ...this.state, config: conf }) as BlockTrainerStateM)._updateCap();\n        }\n        else {\n            return this.state;\n        }\n    }\n}\n// const m_premove = [[], Move.all[\"M\"], Move.all[\"M'\"], Move.all[\"M2\"]];\nexport class FbdrStateM extends BlockTrainerStateM {\n    solverL = 8;\n    solverR = 10;\n    _get_pair_solved_front() {\n        let [cp, co, ep, eo] = rand_choice(FBpairPosBackFS);\n        // for solved back-FS, ignore CP=5 and C=(1,0)\n        // for solved front-FS, ignore CP=4 and C=(0,0)\n        //let mask = Mask.copy(Mask.fs_front_mask)\n        let cube = CubeUtil.get_random_with_mask(Mask.fs_back_mask);\n        for (let i = 0; i < 8; i++) {\n            if (cube.cp[i] === 4) {\n                cube.cp[i] = cube.cp[cp];\n                cube.co[i] = cube.co[cp];\n                cube.cp[cp] = 4;\n                cube.co[cp] = co;\n            }\n        }\n        for (let i = 0; i < 12; i++) {\n            if (cube.ep[i] === 8) {\n                cube.ep[i] = cube.ep[ep];\n                cube.eo[i] = cube.eo[ep];\n                cube.ep[ep] = 8;\n                cube.eo[ep] = eo;\n            }\n        }\n        return cube;\n    }\n    _get_pair_solved_back() {\n        let [cp, co, ep, eo] = rand_choice(FBpairPosFrontFS)\n        //let mask = Mask.copy(Mask.fs_front_mask)\n        let cube = CubeUtil.get_random_with_mask(Mask.fs_front_mask);\n        for (let i = 0; i < 8; i++) {\n            if (cube.cp[i] === 5) {\n                cube.cp[i] = cube.cp[cp];\n                cube.co[i] = cube.co[cp];\n                cube.cp[cp] = 5;\n                cube.co[cp] = co;\n            }\n        }\n        for (let i = 0; i < 12; i++) {\n            if (cube.ep[i] === 9) {\n                cube.ep[i] = cube.ep[ep];\n                cube.eo[i] = cube.eo[ep];\n                cube.ep[ep] = 9;\n                cube.eo[ep] = eo;\n            }\n        }\n        //console.log(\"pair for frontFS\", [cp, co, ep, eo])\n        return cube;\n    }\n    _edge_piece_in_pattern(cube: CubieCube, idx: number, pattern: [number, number][]) {\n        let dr_ep = cube.ep.indexOf(idx);\n        let dr_eo = cube.eo[dr_ep];\n        let good = (pattern.find( ([eo, ep]) => (eo === dr_eo) && (ep === dr_ep)))\n        return good\n    }\n    _get_random_fs_back() {\n        let cube = CubeUtil.get_random_with_mask(Mask.fs_back_mask);\n        for (let i = 0; i < 1000; i++) {\n            if (this._edge_piece_in_pattern(cube, 7, this.allowed_dr) &&\n                this._edge_piece_in_pattern(cube, 8, this.allowed_pedge)) break;\n            cube = CubeUtil.get_random_with_mask(Mask.fs_back_mask);\n        }\n        return cube;\n        //return CubieCube.apply(cube, rand_choice(m_premove));\n    }\n    _get_random_fs_front() {\n        let cube = CubeUtil.get_random_with_mask(Mask.fs_front_mask);\n        for (let i = 0; i < 1000; i++) {\n            if (this._edge_piece_in_pattern(cube, 7, this.allowed_dr) &&\n                this._edge_piece_in_pattern(cube, 9, this.allowed_pedge)) break;\n            cube = CubeUtil.get_random_with_mask(Mask.fs_front_mask);\n        }\n        return cube;;\n        //return CubieCube.apply(cube, rand_choice(m_premove));\n    }\n    edgePositionMap : [number, number][] = [\n        [0, 0], [1, 0],\n        [0, 1], [1, 1],\n        [0, 2], [1, 2],\n        [0, 3], [1, 3],\n        [0, 4], [1, 4],\n        [0, 6], [1, 6],\n        [0, 7], [1, 7],\n        [0, 10], [1, 10],\n        [0, 11], [1, 11]\n    ]\n    allowed_pedge : [number, number][] = []\n    allowed_dr : [number, number][] = []\n    getLevelSelector() {return this.state.config.fbdrLevelSelector}\n    getRandomAnyLevel(): RandomCubeT {\n        const fbOnly = this.state.config.fbOnlySelector.getActiveName() === \"FB Last Pair Only\";\n        const pairSolved = this.state.config.fbPairSolvedSelector.getActiveName() !== \"Random\";\n        const scrambleType = this.state.config.fbdrScrambleSelector.getActiveName() || \"Short\";\n        const useMin2PhaseScramble = !scrambleType.startsWith(\"Short\");\n        const solvers = [fbOnly ? \"fb\" : \"fbdr\"];\n        const ssolver = useMin2PhaseScramble ? \"min2phase\" : solvers[0]\n        let active = this.state.config.fbdrSelector.getActiveNames()[0];\n        //console.log(\"active\", active)\n        this.allowed_pedge = this.state.config.fbdrPosSelector1.flags.map( (value, i) => [value, i])\n            .filter( ([value, i]) => value ).map( ([value, i]) => this.edgePositionMap[i] )\n        this.allowed_dr = this.state.config.fbdrPosSelector3.flags.map( (value, i) => [value, i])\n            .filter( ([value, i]) => value ).map( ([value, i]) => this.edgePositionMap[i] )\n\n        this.solverL = (pairSolved) ? (fbOnly ? 5 : 7) : (fbOnly ? 7 : 8)\n        if (pairSolved) {\n\n        }\n        // decide which random scramble generator to use. but prioritize use input if there's any\n        let cube\n        if (active === \"FS at back\") {\n            cube = (pairSolved) ? this._get_pair_solved_front() : this._get_random_fs_back();\n        }\n        else if (active === \"FS at front\") {\n            cube = (pairSolved) ? this._get_pair_solved_back() : this._get_random_fs_front();\n        }\n        else {\n            cube = (pairSolved) ? \n                   rand_choice([ () => this._get_pair_solved_front(), () => this._get_pair_solved_back()])()\n                   : rand_choice([ () => this._get_random_fs_back(), () => this._get_random_fs_front()])();\n        }\n        return {cube, solvers, ssolver};\n    }\n}\nexport class FbStateM extends BlockTrainerStateM {\n    solverL: number = 8;\n    solverR: number = 11;\n    //premoves = [\"\", \"x\", \"x'\", \"x2\"];\n    premoves = [\"\", \"x\", \"x'\", \"x2\"];\n    levelMaxAttempt = 2000;\n\n    // constructor(state: AppState) {\n    //     super(state)\n    //     //this.evaluator = getEvaluator(\"movement\")\n    // }\n    _find_center_connected_edges(cube: CubieCube, is_l_only: boolean) {\n        let centers = is_l_only ? [ Face.L ] : [ Face.F, Face.B, Face.L, Face.R]\n        let edges = CubeUtil.stickers.filter(c => c[2] === Typ.E && centers.includes(c[3])\n            && FaceletCube.color_of_sticker(cube, [c[0], c[1], c[2]]) === c[3]);\n        return edges;\n    }\n    _get_random(): [CubieCube, string] {\n        let active = this.state.config.fbPieceSolvedSelector.getActiveName();\n        let mask;\n        if (active === \"Random\")\n            mask = Mask.empty_mask;\n        else if (active === \"DL Solved\")\n            mask = Mask.dl_solved_mask;\n        else if (active === \"BL Solved\")\n            mask = Mask.bl_solved_mask;\n        //else if (active === \"BL Pair Solved\")\n        //    mask = Mask.bl_pair_solved_mask;\n        else if (active === \"Zhouheng Variant\")\n            mask = Mask.zhouheng_mask;\n        else\n            mask = Mask.empty_mask;\n        let cube = CubeUtil.get_random_with_mask(mask);\n        let basis = this.state.config.fbBasisSelector.getActiveName();\n        cube = (basis === \"Default\") ? cube\n              : (basis === \"DL\") ? CubeUtil.rebase_to_edge(cube, 5)[0]\n              : CubeUtil.rebase_to_edge(cube, 9)[0] // BL\n\n        let solver = (basis === \"Default\") ? \"fb\"\n                     : (basis === \"DL\") ? \"fb@dl\" \n                     : \"fb@bl\";\n\n        if (basis === \"Default\") {\n            this.premoves = [\"\", \"x\", \"x'\", \"x2\"]\n        } else {\n            this.premoves = [\"\"]\n        }\n        // if (active === \"Zhouheng Variant\") {\n        //     // B F'\n        //     cube = cube.apply(\"B F'\");\n        //     solver = \"fbdr\";\n        // }\n        const hard_str = \"Hard\";\n        const g_hard_str = \"Hard over x2y (Scramble only)\"\n        if (active === g_hard_str) {\n            solver = \"min2phase\";\n        }\n        if (active !== hard_str && active !== g_hard_str) {\n            return [cube, solver];\n        }\n        let n = 0;\n        let is_l_only = active === hard_str\n        while (true) {\n            let pairs = CubeUtil.find_pairs(cube);\n            let cc_edges = this._find_center_connected_edges(cube, is_l_only);\n            // n++;\n            if (pairs.length === 0 && cc_edges.length === 0) {\n                //console.log(\"Successful after \" + n + \" tries \");\n                return [cube, solver];\n            }\n            cube = CubeUtil.get_random_with_mask(Mask.empty_mask);\n        }\n    }\n    getLevelSelector() {return this.state.config.fbLevelSelector}\n    getRandomAnyLevel() {\n        let [cube, solver] = this._get_random();\n        return {cube, solvers: solver === \"min2phase\" ? [] : [solver], ssolver: solver};\n    }\n}\n\n\nexport class FsStateM extends BlockTrainerStateM {\n    solverL = 7;\n    solverR = 11;\n    premoves = [\"\", \"x\", \"x'\", \"x2\"];\n    levelMaxAttempt = 2000;\n\n    getLevelSelector() {return this.state.config.fsLevelSelector}\n    getRandomAnyLevel() {\n        let cube = CubeUtil.get_random_with_mask(Mask.empty_mask);\n        let name = this.state.config.fsSelector.getActiveName()\n        if (name === \"Front FS\") {\n            return {cube, solvers: [\"fs-front\"], ssolver: \"fb\"}\n        } else if (name === \"Back FS\") {\n            return {cube, solvers: [\"fs-back\"], ssolver: \"fb\"}\n        } else {\n            return {cube, solvers: [\"fs-front\", \"fs-back\"], ssolver: \"fb\"}\n        }\n    }\n}\n\nexport class FsDrStateM extends BlockTrainerStateM {\n    solverL = 7;\n    solverR = 11;\n    premoves = [\"\", \"x\", \"x'\", \"x2\"];\n    levelMaxAttempt = 1000;\n\n    getLevelSelector() {return this.state.config.fsLevelSelector}\n    getRandomAnyLevel() {\n        let cube = CubeUtil.get_random_with_mask(Mask.empty_mask);\n        let name = this.state.config.fsSelector.getActiveName()\n        if (name === \"Front FS\") {\n            return {cube, solvers: [\"fsdr-front\"], ssolver: \"fbdr\"}\n        } else if (name === \"Back FS\") {\n            return {cube, solvers: [\"fsdr-back\"], ssolver: \"fbdr\"}\n        } else {\n            return {cube, solvers: [\"fsdr-front\", \"fsdr-back\"], ssolver: \"fbdr\"}\n        }\n    }\n}\n\n\nexport class FbssStateM extends BlockTrainerStateM {\n    solverL = 8;\n    solverR = 12;\n    expansionFactor = 5;\n    levelMaxAttempt = 500;\n\n    getLevelSelector() {return this.state.config.fbssLevelSelector}\n    getRandom() {\n        let ls = this.getLevelSelector()\n        this.levelMaxAttempt = (ls.value <= 4) ? 1500 : 500;\n        return super.getRandom()\n    }\n    getRandomAnyLevel() {\n        let lp_option = this.state.config.fbssLpSelector.getActiveName()\n        let ss_option = this.state.config.fbssSsSelector.getActiveName()\n        let cube, solvers, ssolver\n        // [\"Front SS\", \"Back SS\" , \"Both\"]\n        let lp_is_front = (lp_option === \"Front FBLP\")\n        let randomMask = lp_is_front ? Mask.fs_back_mask : Mask.fs_front_mask\n        cube = CubeUtil.get_random_with_mask(randomMask)\n\n        if (ss_option === \"Front SS\") {\n            solvers = [\"fbss-front\"];\n            ssolver = \"fbss-front\"\n        } else if (ss_option === \"Back SS\") {\n            solvers = [\"fbss-back\"];\n            ssolver = \"fbss-back\"\n        } else {\n            solvers = [\"fbss-front\", \"fbss-back\"];\n            ssolver = lp_is_front ? \"lpsb-front\" : \"lpsb-back\" //(\"min2phase\"\n        }\n        return {cube, solvers, ssolver};\n    }\n}","import { CubieCube, CubeUtil, Mask } from '../lib/CubeLib';\nimport { BlockTrainerStateM } from \"./BlockTrainerStateM\";\n\nexport class SsStateM extends BlockTrainerStateM {\n    scrambleMargin = 1;\n    solverL = 8;\n    solverR = 14;\n    levelMaxAttempt = 3000;\n\n    _get_random_fb(allowed_dr_eo_ep: [number, number][]) {\n        let active = this.state.config.ssPairOnlySelector.getActiveName();\n        let mask = (active === \"DR fixed\") ? Mask.fbdr_mask : Mask.fb_mask;\n        let cube: CubieCube;\n        while (true) {\n            cube = CubeUtil.get_random_with_mask(mask);\n            if (active === \"DR fixed\")\n                break;\n            let ep = cube.ep.indexOf(7);\n            let eo = cube.eo[ep];\n            if (allowed_dr_eo_ep.find(([eo_, ep_]) => (eo === eo_) && (ep === ep_))) {\n                break;\n            }\n        }\n        return cube;\n    }\n    getLevelSelector() { return this.state.config.ssLevelSelector; }\n    getRandomAnyLevel() {\n        let active = this.state.config.ssSelector.getActiveNames()[0];\n        const drOPPositionMap: [number, number][] = [\n            [0, 0], [1, 0],\n            [0, 1], [1, 1],\n            [0, 2], [1, 2],\n            [0, 3], [1, 3],\n            [0, 4], [1, 4],\n            [0, 6], [1, 6],\n            [0, 7], [1, 7],\n            [0, 10], [1, 10],\n            [0, 11], [1, 11]\n        ];\n        //[\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n        //\"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n        let allowed_dr_eo_ep_patterns = this.state.config.ssPosSelector.flags.map((value, i) => [value, i])\n            .filter(([value, i]) => value).map(([value, i]) => drOPPositionMap[i]);\n        let cube = this._get_random_fb(allowed_dr_eo_ep_patterns);\n        let solvers, ssolver;\n        let solverMode = this.state.config.ssPairOnlySelector.getActiveName();\n        let pre = solverMode === \"D-Pair only\" ? \"ssdp\" : \"ss\"\n        if (active === \"Front SS\") {\n            ssolver = pre + \"-front\";\n            solvers = [ssolver];\n        }\n        else if (active === \"Back SS\") {\n            ssolver = pre + \"-back\";\n            solvers = [ssolver];\n        }\n        else {\n            solvers = [pre + \"-front\", pre + \"-back\"];\n            ssolver = \"sb\";\n        }\n        return { cube, solvers, ssolver };\n    }\n}\n\nexport class SsDPairStateM extends BlockTrainerStateM {\n    scrambleMargin = 1;\n    solverL = 8;\n    solverR = 14;\n    levelMaxAttempt = 3000;\n\n    _get_random_fb(allowed_dr_eo_ep: [number, number][]) {\n        let active = this.state.config.ssPairOnlySelector.getActiveName();\n        let mask = (active === \"SS\") ? Mask.fb_mask : Mask.fbdr_mask;\n        let cube: CubieCube;\n        while (true) {\n            cube = CubeUtil.get_random_with_mask(mask);\n            if (active !== \"SS\")\n                break;\n            let ep = cube.ep.indexOf(7);\n            let eo = cube.eo[ep];\n            if (allowed_dr_eo_ep.find(([eo_, ep_]) => (eo === eo_) && (ep === ep_))) {\n                break;\n            }\n        }\n        return cube;\n    }\n    getLevelSelector() { return this.state.config.ssLevelSelector; }\n    getRandomAnyLevel() {\n        let active = this.state.config.ssSelector.getActiveNames()[0];\n        const drPositionMap: [number, number][] = [\n            [0, 0], [1, 0],\n            [0, 1], [1, 1],\n            [0, 2], [1, 2],\n            [0, 3], [1, 3],\n            [0, 4], [1, 4],\n            [0, 6], [1, 6],\n            [0, 7], [1, 7],\n            [0, 10], [1, 10],\n            [0, 11], [1, 11]\n        ];\n        let allowed_dr_eo_ep_patterns = this.state.config.ssPosSelector.flags.map((value, i) => [value, i])\n            .filter(([value, i]) => value).map(([value, i]) => drPositionMap[i]);\n        let cube = this._get_random_fb(allowed_dr_eo_ep_patterns);\n        let solvers, ssolver;\n        if (active === \"Front SS\") {\n            solvers = [\"ss-front\"];\n            ssolver = \"ss-front\";\n        }\n        else if (active === \"Back SS\") {\n            solvers = [\"ss-back\"];\n            ssolver = \"ss-back\";\n        }\n        else {\n            solvers = [\"ss-front\", \"ss-back\"];\n            ssolver = \"sb\";\n        }\n        return { cube, solvers, ssolver };\n    }\n}\n\n","\nimport { BlockTrainerStateM } from \"./BlockTrainerStateM\";\nimport { Mask, CubeUtil, CubieCube, Move } from \"../lib/CubeLib\";\nimport { rand_choice } from \"../lib/Math\";\nimport { CachedSolver } from \"../lib/CachedSolver\";\nimport { EOLRMode } from \"../Config\";\n\nexport class LSEStateM extends BlockTrainerStateM {\n    solverL = 5;\n    solverR = 20;\n    scrambleCount = 3;\n    algDescWithMoveCount = \"STM\";\n    getRandomAnyLevel() {\n        /*\n        LSE Modes:\n        pure 4c (UFUB/ULUR, MC/NC)\n        M2 to 4c (same as above)\n        */\n\n        let bars = this.state.config.lseBarSelector.getActiveName()\n\n        let cube = CubeUtil.get_random_with_mask(Mask.lse_4c_mask);\n\n        let move = new Move().from_cube(cube, \"\")\n\n        if (bars === \"UFUB\") {\n            cube = new CubieCube().apply(rand_choice([\"U\", \"U\"])).apply(move)\n        } else {\n            cube = new CubieCube().apply(move)\n        }\n\n        let is_mc = this.state.config.lseMCSelector.getActiveName() === \"Misaligned\";\n        let lse_premove = is_mc ? [Move.all[\"M\"], Move.all[\"M'\"]] : [ [], Move.all[\"M2\"] ]\n        cube = cube.apply(rand_choice(lse_premove))\n\n        let stage = this.state.config.lseStageSelector.getActiveName()\n        let solvers = [\"lse\"]\n        let ssolver = \"lse\"\n        if (stage === \"M2 to 4c\")  {\n            cube = cube.apply(rand_choice([\"U M2\", \"U' M2\"])).apply(rand_choice([\"U\", \"U'\", \"U2\", \"id\"]))\n            return {cube, solvers, ssolver}\n        } else if (stage.startsWith(\"4b for MC\")) {\n            cube = cube.apply(rand_choice([\"U M2\", \"U' M2\"])).apply(rand_choice([\"U\", \"U'\", \"U2\", \"id\"]))\n            cube = cube.apply(rand_choice([\"M\", \"M'\"]))\n            cube = cube.apply(rand_choice([\"U\", \"U'\", \"U2\", \"id\"]))\n            return {cube, solvers, ssolver}\n        } else {\n            return {cube, solvers, ssolver}\n        }\n    }\n}\n\nconst lseEODef = [\n    {kind: \"solved\", eo: [0,0,0,0,0,0]},\n    {kind: \"arrow\", eo: [1,1,0,1,1,0]},\n    {kind: \"arrow\", eo: [0,1,1,1,0,1]},\n    {kind: \"4/0\", eo: [1,1,1,1,0,0]},\n    {kind: \"2o/0\", eo: [1,0,1,0,0,0]},\n    {kind: \"2a/0\", eo: [1,1,0,0,0,0]},\n    {kind: \"1/1\", eo: [1,0,0,0,0,1]},\n    {kind: \"1/1\", eo: [0,0,1,0,1,0]},\n    {kind: \"6flip\", eo: [1,1,1,1,1,1]},\n    {kind: \"2o/2\", eo: [0,1,0,1,1,1]},\n    {kind: \"0/2\", eo: [0,0,0,0,1,1]},\n    {kind: \"2a/2\", eo: [0,1,1,0,1,1]},\n]\nconst lseEODefLookup = function() {\n    let map = Object.assign({});\n    lseEODef.forEach( (def) => {\n        map[def.eo.toString()] = def.kind\n    })\n    return map\n}();\n\nexport class EOLRStateM extends BlockTrainerStateM {\n    solverL = 5;\n    solverR = 20;\n    scrambleCount = 3;\n    algDescWithMoveCount = \"STM\";\n\n    _getEOType(cube: CubieCube) {\n        for (let i = 0; i < 4; i++) {\n            let eo_arr = cube.eo.slice(0, 5)\n            eo_arr.push(cube.eo[6])\n            let eo = (lseEODefLookup[eo_arr.toString()])\n            if (eo) {\n\n                console.log(eo, eo_arr)\n                return eo;\n            }\n            cube = cube.apply(\"U\")\n        }\n        return \"Error\"\n    }\n\n    getRandomAnyLevel() {\n        /*\n        LSE Modes:\n        pure 4c (UFUB/ULUR, MC/NC)\n        M2 to 4c (same as above)\n        */\n\n        let targetEO = rand_choice(this.state.config.lseEOSelector.getActiveNames())\n\n        let cube: CubieCube\n        let count = 0;\n        let eolrMCMode = this.state.config.lseEOLRMCSelector.getActiveName()\n        let compare = eolrMCMode === EOLRMode.NONMC_SHORTER_ONLY || eolrMCMode === EOLRMode.MC_SHORTER_ONLY\n        let useBarbie = this.state.config.lseBarbieSelector.getActiveName() === \"EOLRb\"\n        let eodmMode = this.state.config.lseBarbieSelector.getActiveName() === \"EOdM\"\n        let useFullScramble = this.state.config.lseEOLRScrambleSelector.getActiveName() === \"Random State\"\n\n        while (true) {\n            cube = CubeUtil.get_random_with_mask(Mask.lse_mask);\n            cube = cube.apply(rand_choice([\"id\", \"M2\"]))\n            console.log(\"targetEO\", targetEO)\n\n            if (count++ > 1000) {\n                console.log(\"something wrong\")\n                break\n            }\n\n\n            if (this._getEOType(cube) !== targetEO)\n                continue\n            if (compare) {\n                let acSolver = useBarbie ? \"eolrac-b\" : \"eolrac\"\n                let mcSolver = useBarbie ? \"eolrmc-b\" : \"eolrmc\"\n                let acLength = CachedSolver.get(acSolver).solve(cube, 0, 20, 1)[0].moves.length\n                let mcLength = CachedSolver.get(mcSolver).solve(cube, 0, 20, 1)[0].moves.length\n                if ( eolrMCMode === EOLRMode.NONMC_SHORTER_ONLY && acLength > mcLength ) continue\n                if ( eolrMCMode === EOLRMode.MC_SHORTER_ONLY && mcLength > acLength ) continue\n            }\n            break\n        }\n\n        const ssolver = (useFullScramble || eodmMode) ? \"lse\" : \"lse-ab4c\";\n        let solver : string\n        switch (eolrMCMode) {\n            case EOLRMode.NONMC_ONLY: solver = useBarbie ? \"eolrac-b\" : \"eolrac\"; break;\n            case EOLRMode.MC_ONLY: solver = useBarbie ? \"eolrmc-b\" : \"eolrmc\"; break;\n            case EOLRMode.COMBINED: solver = useBarbie ? \"eolr-b\" : \"eolr\"; break;\n            case EOLRMode.NONMC_SHORTER_ONLY:\n            case EOLRMode.MC_SHORTER_ONLY: solver = useBarbie ? \"eolr-b\" : \"eolr\"; break;\n            default: solver = \"eolr\";\n        }\n\n        // in case of EOdM, override all of above\n        if (eodmMode) {\n            solver = \"eodm\"\n        }\n\n        return {cube, solvers: [solver], ssolver}\n    }\n}\n","import { AppState, BatchState, CaseState, StateT  } from \"../Types\";\nimport { Config } from '../Config';\nimport { alg_generator_from_group, alg_generator_from_cases, CaseDesc, createAlg, alg_generator_from_cases_contain} from \"../lib/Algs\";\nimport { CubieCube, Move, CubeUtil, MoveSeq } from '../lib/CubeLib';\nimport { AbstractStateM } from \"./AbstractStateM\";\nimport {initialize as min2phase_init, solve as min2phase_solve} from \"../lib/min2phase/min2phase-wrapper\"\nimport { arrayEqual, rand_choice } from \"../lib/Math\";\n\nexport abstract class CmllStateM extends AbstractStateM {\n    _get2PhaseSolution(cube: CubieCube): CaseDesc {\n        // Aha! f = g(b) but you modified b later, and f won't update!\n\n        let m2_away = false\n        if (cube.tp[0] !== 0) {\n            m2_away = true\n            cube = cube.apply(\"M2\")\n        }\n        console.assert(arrayEqual(cube.tp, new CubieCube().tp))\n\n        const transformed_cube = cube.to_cstimer_cube()\n        console.assert( transformed_cube.is_solveable(), \"Cube must be solveable\")\n        min2phase_init();\n        let solution = min2phase_solve(transformed_cube);\n        if (m2_away) {\n            solution += \" M2\"\n        }\n        const algDesc: CaseDesc = createAlg(\"scramble\", solution, \"scramble\")\n        console.log(solution);\n        return algDesc;\n    }\n\n    _generateSingleCmllCase(batch_mode: boolean = false): CaseState {\n        let state = this.state;\n        let { config } = state;\n        let { cmllCaseSelector, triggerSelector, cmllAufSelector, nmcllSelector, hyperOriSelector } = config;\n\n        const isHyperOri = hyperOriSelector.getActiveName() !== \"off\" ;\n        const isHyperOriFB = hyperOriSelector.getActiveName() !== \"F/B\" ;\n        let generator = (() => {\n            if (!isHyperOri) {\n                return alg_generator_from_cases(cmllCaseSelector.kind, cmllCaseSelector.getActiveNames());\n            } else {\n                return alg_generator_from_cases_contain(nmcllSelector.kind, nmcllSelector.getActiveNames().map(x => `nmcll-${x}`))\n            }\n        })();\n        let trig_generator = batch_mode ? () => createAlg(\"None\", \"\", \"trigger\") : alg_generator_from_group(triggerSelector);\n        let u_auf_generator =alg_generator_from_group(cmllAufSelector);\n        let post_auf_generator = () => {\n            const choices = (isHyperOriFB) ? [\"U\", \"U'\"] : [\"\", \"U2\"]\n            return rand_choice(choices)\n        }\n        let trigger_alg: CaseDesc = trig_generator();\n        let cmll_alg: CaseDesc = generator();\n        let u_auf_alg: CaseDesc = u_auf_generator();\n        let post_auf_alg = post_auf_generator();\n        let alg_str = trigger_alg.algs[0] + \" \" + u_auf_alg.algs[0] + \" \" + cmll_alg.algs[0] + post_auf_alg;\n        let moves: Move[] = new MoveSeq(alg_str).inv().moves;\n\n        let lse_cube: CubieCube\n        while (true) {\n            lse_cube = CubeUtil.get_random_lse().apply(moves)\n            if (lse_cube.is_solveable()) {\n                break;\n            }\n        }\n        let solution = batch_mode ? createAlg(\"none\", \"\", \"scramble\") : this._get2PhaseSolution(lse_cube);\n\n        return {\n            state: lse_cube,\n            desc: [trigger_alg, u_auf_alg, cmll_alg, solution]\n        }\n    }\n\n    _generateCase(): AppState {\n        let state = this.state;\n        let { orientationSelector } = state.config;\n        let ori_generator = alg_generator_from_group(orientationSelector);\n\n        let ori: string = ori_generator().id;\n        let case_ = this._generateSingleCmllCase();\n\n        //console.log(\"current ori selector's ori \", ori)\n        return ({\n            ...state,\n            name: \"solving\",\n            cube: {\n                state: case_.state,\n                ori,\n                history: [],\n                levelSuccess: true\n            },\n            case: case_\n        });\n    }\n    _generateBatch(batchSize: number = 6): BatchState {\n        // Start from solved CMLL cube\n        let cases: CaseState[] = [];\n        let cube = new CubieCube();\n        let algs: string[] = [];\n\n        // Generate N-1 random CMLL cases\n        for (let i = 0; i < batchSize - 1; i++) {\n            let caseDesc = this._generateSingleCmllCase(true);\n            algs.push(caseDesc.desc[1].algs[0] + \" \" + caseDesc.desc[2].algs[0]);\n            caseDesc.desc[3] = createAlg(\"none\", `${i+1} / ${batchSize}`, \"scramble\");\n            cases.push(caseDesc);\n        }\n        let totalAlg = algs.join(\" \");\n        cube = cube.apply(totalAlg);\n        let finalCaseDesc = {state: cube, desc: []}\n        cases.push(finalCaseDesc);\n        console.log(\"batch cases\", cases);\n        return { cases, index: 0 };\n    }\n\n    onControl(s: string): AppState {\n        let state = this.state;\n        let batchMode = state.config.cmllBatchModeSelector.getActiveName() === \"on\";\n        let getBatchStateAtIndex = (state: AppState, nextIndex: number) : AppState => {\n            // Advance to next case in batch\n            //let { orientationSelector } = state.config;\n            //let ori_generator = alg_generator_from_group(orientationSelector);\n            //let ori: string = ori_generator().id;\n            if (!state.batch) {\n                return state;\n            } else {\n                return ({\n                    ...state,\n                    batch: { ...state.batch, index: nextIndex },\n                    name: \"solving\",\n                    cube: {\n                        state: state.batch?.cases[nextIndex].state,\n                        ori: state.cube.ori,\n                        history: [],\n                        levelSuccess: true\n                    },\n                    case: state.batch?.cases[nextIndex]\n                });\n            }\n        }\n        if (s === \"#space\") {\n            // SCRAMBLE\n            // enter cleared solving state based on selection\n            if (batchMode) {\n                if (!state.batch || state.batch.index >= state.batch.cases.length - 1) {\n                    // Generate new batch\n                    let batch = this._generateBatch();\n                    let { orientationSelector } = state.config;\n                    let ori_generator = alg_generator_from_group(orientationSelector);\n                    let ori: string = ori_generator().id;\n\n                    return ({\n                        ...state,\n                        batch,\n                        name: \"solving\",\n                        cube: {\n                            state: batch.cases[0].state,\n                            ori,\n                            history: [],\n                            levelSuccess: true\n                        },\n                        case: batch.cases[0]\n                    });\n                } else {\n                    let nextIndex = state.batch.index + 1;\n                    return getBatchStateAtIndex(state, nextIndex);\n                }\n            } else {\n                // Single case mode\n                return this._generateCase();\n            }\n        }\n        // support navigation in batch mode by arrow key <- and ->\n        else if ((s === \"#left\") || (s === \"#right\")) {\n            if (state.batch) {\n                let shift = s === \"#left\" ? -1 : 1;\n                let nextIndex = Math.max(0, state.batch.index + shift);\n                if (nextIndex >= state.batch.cases.length) {\n                    nextIndex = state.batch.cases.length - 1; // stay at end\n                }\n                return getBatchStateAtIndex(state, nextIndex);\n            } else {\n                return state;\n            }\n        }\n        else if (s === \"#enter\") {\n            // REDO\n            return ({\n                ...state,\n                name: \"solving\",\n                cube: {\n                    ...state.cube,\n                    state: state.case.state,\n                    history: []\n                },\n                case: {\n                    ...state.case,\n                }\n            });\n        }\n        else {\n            throw new Error(\"Unrecognized control code\");\n        }\n    }\n    onConfig(conf: Config): AppState {\n        return this.state;\n    }\n}\nexport class CmllSolvingStateM extends CmllStateM {\n    onMove(move: string): AppState {\n        let state = this.state;\n        let moves = new MoveSeq(move).moves;\n        if (moves.length > 0) {\n            let move = moves[0];\n            let cube = state.cube.state.apply(move);\n            let cmll_solved = CubeUtil.is_cmll_solved(cube);\n            let newState: StateT = cmll_solved ? \"solved\" : \"solving\";\n            return ({\n                ...state,\n                cube: {\n                    ...state.cube,\n                    state: state.cube.state.apply(move),\n                    history: [...state.cube.history, move],\n                },\n                name: newState\n            });\n        }\n        else {\n            // Nothing to apply\n            return state;\n        }\n    }\n}\nexport class CmllSolvedStateM extends CmllStateM {\n    onMove(move: string): AppState {\n        return this.state;\n    }\n}\n\n\nexport abstract class OllcpStateM extends AbstractStateM {\n    _get2PhaseSolution(cube: CubieCube): CaseDesc {\n        // Aha! f = g(b) but you modified b later, and f won't update!\n\n        let m2_away = false\n        if (cube.tp[0] !== 0) {\n            m2_away = true\n            cube = cube.apply(\"M2\")\n        }\n        console.assert(arrayEqual(cube.tp, new CubieCube().tp))\n\n        const transformed_cube = cube.to_cstimer_cube()\n        console.assert( transformed_cube.is_solveable(), \"Cube must be solveable\")\n        min2phase_init();\n        let solution = min2phase_solve(transformed_cube);\n        if (m2_away) {\n            solution += \" M2\"\n        }\n        const algDesc: CaseDesc = createAlg(\"scramble\", solution, \"scramble\")\n        console.log(solution);\n        return algDesc;\n    }\n    _generateCase(): AppState {\n        let state = this.state;\n        let { config } = state;\n        let { cmllCaseSelector, triggerSelector, cmllAufSelector, orientationSelector, nmcllSelector, hyperOriSelector } = config;\n\n        const isHyperOri = hyperOriSelector.getActiveName() !== \"off\" ;\n        const isHyperOriFB = hyperOriSelector.getActiveName() !== \"F/B\" ;\n        let generator = alg_generator_from_cases(cmllCaseSelector.kind, cmllCaseSelector.getActiveNames());\n        let trig_generator = alg_generator_from_group(triggerSelector);\n        let u_auf_generator =alg_generator_from_group(cmllAufSelector);\n        let ori_generator = alg_generator_from_group(orientationSelector);\n        let post_auf_generator = () => {\n            const choices = (isHyperOriFB) ? [\"U\", \"U'\"] : [\"\", \"U2\"]\n            return rand_choice(choices)\n        }\n        let trigger_alg: CaseDesc = trig_generator();\n        let cmll_alg: CaseDesc = generator();\n        let u_auf_alg: CaseDesc = u_auf_generator();\n        let post_auf_alg = post_auf_generator();\n        let alg_str = trigger_alg.algs + \" \" + u_auf_alg.algs + \" \" + cmll_alg.algs + post_auf_alg;\n        let moves: Move[] = new MoveSeq(alg_str).inv().moves;\n\n        let lse_cube: CubieCube\n        while (true) {\n            lse_cube = CubeUtil.get_random_lse().apply(moves)\n            if (lse_cube.is_solveable()) {\n                break;\n            }\n        }\n        let solution = this._get2PhaseSolution(lse_cube);\n        // ori based on ...?\n        let ori: string = ori_generator().id;\n        //console.log(\"current ori selector's ori \", ori)\n        return ({\n            ...state,\n            name: \"solving\",\n            cube: {\n                state: lse_cube,\n                ori,\n                history: [],\n                levelSuccess: true\n            },\n            case: {\n                state: lse_cube,\n                desc: [trigger_alg, u_auf_alg, cmll_alg, solution]\n            },\n        });\n    }\n    onControl(s: string): AppState {\n        let state = this.state;\n        if (s === \"#space\") {\n            // SCRAMBLE\n            // enter cleared solving state based on selection\n            return this._generateCase();\n        }\n        else if (s === \"#enter\") {\n            // REDO\n            return ({\n                ...state,\n                name: \"solving\",\n                cube: {\n                    ...state.cube,\n                    state: state.case.state,\n                    history: []\n                },\n                case: {\n                    ...state.case,\n                }\n            });\n        }\n        else {\n            throw new Error(\"Unrecognized control code\");\n        }\n    }\n    onConfig(conf: Config): AppState {\n        return this.state;\n    }\n}\n\nexport class OllcpSolvingStateM extends OllcpStateM {\n    onMove(move: string): AppState {\n        let state = this.state;\n        let moves = new MoveSeq(move).moves;\n        if (moves.length > 0) {\n            let move = moves[0];\n            let cube = state.cube.state.apply(move);\n            // TODO: fix this\n            let cmll_solved = CubeUtil.is_cmll_solved(cube);\n            let newState: StateT = cmll_solved ? \"solved\" : \"solving\";\n            return ({\n                ...state,\n                cube: {\n                    ...state.cube,\n                    state: state.cube.state.apply(move),\n                    history: [...state.cube.history, move],\n                },\n                name: newState\n            });\n        }\n        else {\n            // Nothing to apply\n            return state;\n        }\n    }\n}\nexport class OllcpSolvedStateM extends OllcpStateM {\n    onMove(move: string): AppState {\n        return this.state;\n    }\n}\n","import { StateFactory} from './AbstractStateM';\nimport { AppState, Mode } from '../Types';\nimport { FbdrStateM, FbStateM, FsStateM, FsDrStateM, FbssStateM} from './BlockTrainerStateM';\nimport { SsStateM } from './SsStateM';\nimport { LSEStateM, EOLRStateM } from './LSETrainerStateM';\nimport { CmllSolvingStateM, CmllSolvedStateM } from './CmllStateM';\n\nStateFactory.create = function(state: AppState) {\n        let mode: Mode = state.mode;\n        switch (mode) {\n            case \"fbdr\":\n                return new FbdrStateM(state);\n            case \"ss\":\n                return new SsStateM(state);\n            case \"fbss\":\n                return new FbssStateM(state);\n            case \"fs\":\n                return new FsStateM(state);\n            case \"fsdr\":\n                return new FsDrStateM(state);\n            case \"fb\":\n                return new FbStateM(state);\n            case \"cmll\":{\n                switch (state.name) {\n                    case \"solving\": return new CmllSolvingStateM(state);\n                    case \"solved\": return new CmllSolvedStateM(state);\n                    default: throw new Error(\"impossible\");\n                }\n            }\n            case \"misc-algs\":{\n                switch (state.name) {\n                    case \"solving\": return new CmllSolvingStateM(state);\n                    case \"solved\": return new CmllSolvedStateM(state);\n                    default: throw new Error(\"impossible\");\n                }\n            }\n            case \"4c\":\n                return new LSEStateM(state);\n            case \"eopair\":\n                return new EOLRStateM(state);\n            case \"experimental\":\n                return new FbStateM(state);\n            case \"analyzer\":\n                return new FbStateM(state)\n            case \"tracking\":\n                return new FbStateM(state)\n        }\n        ;\n    }\n\nexport { StateFactory };","import { Action } from \"./Types\";\n\nconst defaultKeyMapping : { [key: string]: string } = {\n    \"I\": \"R\",\n    \"K\": \"R'\",\n    \"W\": \"B\",\n    \"O\": \"B'\",\n    \"S\": \"D\",\n    \"L\": \"D'\",\n    \"D\": \"L\",\n    \"E\": \"L'\",\n    \"J\": \"U\",\n    \"F\": \"U'\",\n    \"H\": \"F\",\n    \"G\": \"F'\",\n    \";\": \"y\",\n    \"A\": \"y'\",\n    \"U\": \"r\",\n    \"R\": \"l'\",\n    \"M\": \"r'\",\n    \"V\": \"l\",\n    \"T\": \"x\",\n    \"Y\": \"x\",\n    \"N\": \"x'\",\n    \"B\": \"x'\",\n    \".\": \"M'\",\n    \"X\": \"M'\",\n    \"5\": \"M\",\n    \"6\": \"M\",\n    \"P\": \"z\",\n    \"Q\": \"z'\",\n    \"Z\": \"d\",\n    \"C\": \"u'\",\n    \",\": \"u\",\n    \"/\": \"d'\",\n    \"ENTER\": \"#enter\",\n    \" \": \"#space\",\n    \"ARROWLEFT\": \"#left\",\n    \"ARROWRIGHT\": \"#right\"\n  }\n\n\nconst lseKeyMapping : { [key: string]: string } = {\n    \"I\": \"M'\",\n    \"E\": \"M'\",\n    \"K\": \"M\",\n    \"D\": \"M\",\n    \"J\": \"U\",\n    \"F\": \"U'\",\n    \"S\": \"E'\",\n    \"L\": \"E\",\n    \"ENTER\": \"#enter\",\n    \" \": \"#space\",\n    \"ARROWLEFT\": \"#left\",\n    \"ARROWRIGHT\": \"#right\"\n};\n\n\nexport abstract class KeyMapping {\n    abstract handle(evt: KeyboardEvent, dispatch: React.Dispatch<Action>) : void;\n}\n\nexport class DefaultKeyMapping extends KeyMapping {\n    handle(evt: KeyboardEvent, dispatch: React.Dispatch<Action>) {\n        // do nothing if modifier key is pressed\n        if (evt.altKey || evt.ctrlKey || evt.metaKey) return;\n        let key = evt.key.toUpperCase();\n        if (defaultKeyMapping.hasOwnProperty(key)) {\n            dispatch({\n              type: \"key\", content: defaultKeyMapping[key]\n            });\n        }\n    }\n}\n\nexport class LSEKeyMapping {\n    handle(evt: KeyboardEvent, dispatch: React.Dispatch<Action>) {\n        // do nothing if modifier key is pressed\n        if (evt.altKey || evt.ctrlKey || evt.metaKey) return;\n        let key = evt.key.toUpperCase();\n        if (lseKeyMapping.hasOwnProperty(key)) {\n            dispatch({\n              type: \"key\", content: lseKeyMapping[key]\n            });\n        }\n    }\n}","import { AppState, StateT, Mode } from \"../Types\";\nimport { CubieCube, ColorScheme } from '../lib/CubeLib';\nimport { getConfig, getFavList } from '../lib/LocalStorage';\nimport { DefaultKeyMapping, LSEKeyMapping } from \"../KeyMapping\";\n\n\nexport const getInitialState = (mode?: Mode): AppState => {\n    mode = mode || \"fbdr\";\n    let initialStateName: StateT = function () {\n        switch (mode) {\n            case \"cmll\":\n            case \"misc-algs\":\n                return \"solved\";\n            case \"fbdr\":\n            case \"ss\":\n            case \"fb\":\n            case \"4c\":\n            case \"eopair\":\n            case \"fbss\":\n            case \"fs\":\n            case \"fsdr\":\n                return \"revealed\";\n            case \"experimental\":\n                return \"revealed\";\n            case \"analyzer\":\n            case \"tracking\":\n                return \"revealed\"\n        }\n    }();\n    let ori = getConfig().orientationSelector.getActiveName() || \"YR\";\n    return {\n        name: initialStateName,\n        mode,\n        scrambleInput: [],\n        cube: {\n            state: new CubieCube(),\n            ori,\n            history: [],\n            levelSuccess: true,\n        },\n        case: {\n            state: new CubieCube(),\n            desc: []\n        },\n        prev: null,\n        batch: null,\n        config: getConfig(),\n        favList: getFavList(),\n        keyMapping: (mode === \"4c\" || mode === \"eopair\") ? new LSEKeyMapping() : new DefaultKeyMapping(),\n        colorScheme: new ColorScheme()\n    };\n};\n","\nimport { AppState, Action, FavListAction } from \"../Types\"\nimport { Config } from '../Config';\n\nimport { setConfig, setFavList} from '../lib/LocalStorage';\nimport { StateFactory } from \"./StateFactory\";\nimport { arrayEqual } from \"../lib/Math\";\nimport { getInitialState } from \"./InitialState\";\nimport ReactGA from 'react-ga';\n\nexport { getInitialState }\nfunction reduceByFavlist(state: AppState, action: FavListAction) {\n    let favList = state.favList;\n\n    switch (action.action) {\n        case \"add\":\n            favList = [...action.content, ...favList]\n            setFavList(favList)\n            break;\n        case \"remove\": {\n        // only remove one at a time for now\n            const rem = action.content[0]\n            favList = favList.filter((value) => {\n                return !(value.mode === rem.mode && value.setup === rem.setup && arrayEqual(value.solver, rem.solver))\n            })\n            setFavList(favList)\n            break;\n        };\n        case \"replay\": {\n            return StateFactory.create(state).onReplay(action.content[0])\n        }\n    }\n    return {\n        ...state,\n        favList\n    }\n}\n\nexport function reducer(state: AppState, action: Action): AppState {\n    // todo: cache values based on this\n    // console.log(\"prev state\", state)\n    switch (action.type) {\n        case \"key\": {\n            let newState = reduceByKey(state, action.content)\n            return newState\n        };\n        case \"config\": {\n            // LESSON: Object.assign is dangerous\n            let newConfig = {...state.config, ...action.content}\n\n            // enforce constraints across selectors\n            //if (newConfig.fbPairSolvedSelector.flags[1] === 1) {\n            //    newConfig.fbdrSelector.flags = [1, 0, 0]\n            //}\n            setConfig(newConfig)\n            let newState = reduceByConfig(state, newConfig)\n            return {\n                ...newState,\n                config: newConfig\n            }\n        };\n        case \"mode\": {\n            let mode = action.content\n            if (window.location.hash !== mode) {\n                ReactGA.pageview(mode);\n            }\n            window.location.hash = mode\n            \n            state = getInitialState(mode)\n            return state\n        };\n        case \"scrambleInput\":\n            return {\n                ...state,\n                scrambleInput: action.content\n            }\n        case \"favList\":\n            return reduceByFavlist(state, action)\n        case \"colorScheme\":\n            return {\n                ...state,\n                colorScheme: state.colorScheme.set(action.content)\n            }\n        case \"custom\":\n            return action.content(state)\n        default:\n            return state\n        }\n}\n\n\nfunction reduceByKey(state: AppState, code: string): AppState {\n    if (code === \"\") return state;\n\n    const stateM = StateFactory.create(state)\n    // case match on kind of operation\n    if (code[0] === \"#\") {\n        return stateM.onControl(code)\n    } else {\n        return stateM.onMove(code)\n    }\n}\nfunction reduceByConfig(state: AppState, conf: Config): AppState {\n    const stateM = StateFactory.create(state)\n    // case match on kind of operation\n    return stateM.onConfig(conf)\n}","import React from 'react'\nimport AppView from \"../components/AppView\"\nimport { reducer } from '../reducers/Reducer'\nimport { getInitialState } from \"../reducers/InitialState\";\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { ThemeProvider, Theme, StyledEngineProvider } from '@mui/material/styles';\nimport { theme, themeDark } from '../theme';\nimport \"typeface-roboto\";\nimport \"fontsource-public-sans\";\nimport { resetConfig } from '../lib/LocalStorage';\n\n\ndeclare module '@mui/styles/defaultTheme' {\n  // eslint-disable-next-line @typescript-eslint/no-empty-interface\n  interface DefaultTheme extends Theme {}\n}\n\nwindow.addEventListener('keypress', function(e) {\n  if(e.keyCode === 32 && e.target === document.body) {\n    e.preventDefault();\n  }\n  if (e.altKey && e.ctrlKey && e.key === \"r\") {\n    resetConfig()\n    console.log(\"config reset\")\n  }\n});\n\nfunction App(props: {}) {\n  const [state, dispatch] = React.useReducer( reducer, getInitialState() )\n\n  const appTheme = state.config.theme.getActiveName() === \"bright\" ? theme : themeDark\n  return (\n    <StyledEngineProvider injectFirst>\n      <ThemeProvider theme={appTheme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <AppView state={state} dispatch={dispatch} />\n      </ThemeProvider>\n    </StyledEngineProvider>\n  );\n}\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport ReactGA from 'react-ga';\n\nif (process.env.NODE_ENV === 'production') {\n  ReactGA.initialize('UA-209793005-2', );\n} else {\n  console.log(\"In dev/test mode now, won't send GA\")\n}\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root'),\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* eslint-disable */\nfunction createArray(length) {\n\tconst arr = Array(length);\n\tfor (var i=0; i<length; i++) {\n\t\tarr[i] = 0;\n\t}\n\treturn arr;\n}\n\nfunction createArrays(length1, length2) {\n\tconst arr = Array(length1);\n\tfor (var i=0; i<length1; i++) {\n\t\tarr[i] = Array(length2);\n\t\tfor (var j=0; j<length2; j++) {\n\t\t\tarr[i][j] = 0;\n\t\t}\n\t}\n\treturn arr;\n}\n\nfunction bitOdd(i) {\n\ti ^= i >>> 1;\n\ti ^= i >>> 2;\n\ti ^= i >>> 4;\n\ti ^= i >>> 8;\n\treturn i & 1;\n}\n\nfunction bitCount(i) {\n\ti = i - ((i >>> 1) & 0x55555555);\n\ti = (i & 0x33333333) + ((i >>> 2) & 0x33333333);\n\treturn (i + (i >>> 8) + (i >>> 4)) & 0x0f;\n}\n\nfunction get4Parity(idx) {\n\tvar p = 0;\n\tfor (var i=2; i>=0; i--) {\n\t\tp += idx % (4-i);\n\t\tidx = ~~(idx / (4-i));\n\t}\n\tp &= 1;\n\treturn p;\n}\n\nfunction get8Parity(idx) {\n\tvar p = 0;\n\tfor (var i=6; i>=0; i--) {\n\t\tp += idx % (8-i);\n\t\tidx = ~~(idx / (8-i));\n\t}\n\tp &= 1;\n\treturn p;\n}\n\nfunction get12Parity(idx) {\n\tvar p = 0;\n\tfor (var i=10; i>=0; i--) {\n\t\tp += idx % (12-i);\n\t\tidx = ~~(idx / (12-i));\n\t}\n\tp &= 1;\n\treturn p;\n}\n\n\nfunction binarySearch(arr, key) {\n\tvar length = arr.length;\n\tif (key <= arr[length-1]) {\n\t\tvar l = 0;\n\t\tvar r = length-1;\n\t\twhile (l <= r) {\n\t\t\tvar mid = (l+r)>>>1;\n\t\t\tvar val = arr[mid];\n\t\t\tif (key > val) {\n\t\t\t\tl = mid + 1;\n\t\t\t} else if (key < val) {\n\t\t\t\tr = mid - 1;\n\t\t\t} else {\n\t\t\t\treturn (mid);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0xffff;\n}\n\nvar fact = [1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800, 479001600];\nvar perm3 = [[11, 10, 9], [10, 11, 9], [11, 9, 10], [9, 11, 10], [10, 9, 11], [9, 10, 11]];\nvar ud2std = [0, 1, 2, 4, 7, 9, 10, 11, 13, 16];\nvar std2ud = createArray(18);\nvar Cnk = createArrays(12, 13);\nvar move2str = [\"U \", \"U2\", \"U'\", \"R \", \"R2\", \"R'\", \"F \", \"F2\", \"F'\", \"D \", \"D2\", \"D'\", \"L \", \"L2\", \"L'\", \"B \", \"B2\", \"B'\"];\nvar urfMove = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15,16,17], \n\t\t\t\t\t\t\t\t\t\t\t[6, 7, 8, 0, 1, 2, 3, 4, 5,15,16,17, 9,10,11,12,13,14],\n\t\t\t\t\t\t\t\t\t\t\t[3, 4, 5, 6, 7, 8, 0, 1, 2,12,13,14,15,16,17, 9,10,11],\n\t\t\t\t\t\t\t\t\t\t\t[2, 1, 0, 5, 4, 3, 8, 7, 6,11,10, 9,14,13,12,17,16,15], \n\t\t\t\t\t\t\t\t\t\t\t[8, 7, 6, 2, 1, 0, 5, 4, 3,17,16,15,11,10, 9,14,13,12],\n\t\t\t\t\t\t\t\t\t\t\t[5, 4, 3, 8, 7, 6, 2, 1, 0,14,13,12,17,16,15,11,10, 9]];\nfor (var i=0; i<12; i++) {\n\tCnk[i][0] = 1;\n\tCnk[i][i] = 1;\n\tCnk[i][i+1] = 0;\n\tfor (var j=1; j<i; j++) {\n\t\tCnk[i][j] = (Cnk[i-1][j-1] + Cnk[i-1][j]);\n\t}\n}\nfor (var i=0; i<10; i++) {\n\tstd2ud[ud2std[i]] = i;\n}\n\nvar ckmv = Array(19);//new boolean[19][18];\nvar ckmv2 = Array(11);//new boolean[11][10];\nckmv[18] = Array(18);\nckmv2[10] = Array(10);\nfor (var i=0; i<18; i++) {\n\tckmv[i] = Array(18);\n\tfor (var j=0; j<18; j++) {\n\t\tckmv[i][j] = (~~(i/3) == ~~(j/3)) || ((~~(i/3)%3 == ~~(j/3)%3) && (i>=j));\n\t}\n\tckmv[18][i] = false;\n}\nfor (var i=0; i<10; i++) {\n\tckmv2[i] = Array(10);\n\tfor (var j=0; j<10; j++) {\n\t\tckmv2[i][j] = ckmv[ud2std[i]][ud2std[j]];\n\t}\n\tckmv2[10][i] = false;\n}\n\n\n//********************************************************************************//\n\nfunction CubieCube() {\n\tthis.cp = [0, 1, 2, 3, 4, 5, 6, 7];\n\tthis.co = [0, 0, 0, 0, 0, 0, 0, 0];\n\tthis.ep = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n\tthis.eo = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\tthis.getFlip = function getFlip() {\n\t\tvar idx = 0;\n\t\tfor (var i=0; i<11; i++) {\n\t\t\tidx |= this.eo[i] << i;\n\t\t}\n\t\treturn idx;\n\t}\n\t\n\tthis.getFlipSym = function getFlipSym() {\n\t\tif (FlipR2S != 0) {\n\t\t\treturn FlipR2S[this.getFlip()];\n\t\t}\n\t\tfor (var k=0; k<16; k+=2) {\n\t\t\tEdgeConjugate(this, SymInv[k], temps);\n\t\t\tvar idx = binarySearch(FlipS2R, temps.getFlip());\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 3) | (k >>> 1));\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tthis.setFlip = function setFlip(idx) {\n\t\tthis.eo[11] = bitOdd(idx);\n\t\tfor (var i=0; i<11; i++) {\n\t\t\tthis.eo[i] = idx & 1;\n\t\t\tidx >>>= 1;\n\t\t}\n\t}\n\t\n\tthis.getTwist = function getTwist() {\n\t\tvar idx = 0;\n\t\tfor (var i=0; i<7; i++) {\n\t\t\tidx *= 3;\n\t\t\tidx += this.co[i];\n\t\t}\n\t\treturn idx;\n\t}\n\t\n\tthis.getTwistSym = function getTwistSym() {\n\t\tif (TwistR2S != null) {\n\t\t\treturn TwistR2S[this.getTwist()];\n\t\t}\n\t\tfor (var k=0; k<16; k+=2) {\n\t\t\tCornConjugate(this, SymInv[k], temps);\n\t\t\tlet idx = binarySearch(TwistS2R, temps.getTwist());\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 3) | (k >>> 1));\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\n\tthis.setTwist = function setTwist(idx) {\n\t\tvar twst = 0;\n\t\tfor (var i=6; i>=0; i--) {\n\t\t\ttwst += this.co[i] = idx % 3;\n\t\t\tidx = ~~(idx/3);\n\t\t}\n\t\tthis.co[7] = (15 - twst) % 3;\n\t}\n\t\n\tthis.getUDSlice = function getUDSlice() {\n\t\tvar idx = 0;\n\t\tvar r = 4;\n\t\tfor (var i=0; i<12; i++) {\n\t\t\tif (this.ep[i] >= 8) {\n\t\t\t\tidx += Cnk[11-i][r];\n\t\t\t\tr--;\n\t\t\t}\n\t\t}\n\t\treturn idx;\n\t}\n\n\tthis.setUDSlice = function setUDSlice(idx) {\n\t\tvar r = 4;\n\t\tfor (var i=0; i<12; i++) {\n\t\t\tif (idx >= Cnk[11-i][r]) {\n\t\t\t\tidx -= Cnk[11-i][r];\n\t\t\t\tr--;\n\t\t\t\tthis.ep[i] = (11-r);\n\t\t\t} else {\n\t\t\t\tthis.ep[i] = (i+r-4);\n\t\t\t}\n\t\t}\n\t}\n\tthis.getMPerm = function getMPerm() {\n\t\tvar m = (1 << this.ep[11]);\t\t\n\t\tvar idx = 0;\n\t\tfor (var i=10; i>=8; --i) {\n\t\t\tvar t = 1 << this.ep[i];\n\t\t\tidx += bitCount(m & (t - 1)) * fact[11-i];\n\t\t\tm |= t;\n\t\t}\n\t\treturn idx;\n\t}\t\n\tthis.setMPerm = function setMPerm(idx) {\n\t\tthis.ep[11] = 8;\n\t\tfor (var i=10; i>=8; i--) {\n\t\t\tthis.ep[i] = (idx % (12-i) + 8);\n\t\t\tidx = ~~(idx / (12-i));\n\t\t\tfor (var j=i+1; j<12; j++) {\n\t\t\t\tif (this.ep[j] >= this.ep[i])\n\t\t\t\t\tthis.ep[j]++;\n\t\t\t}\n\t\t}\t\n\t}\n\t\n\tthis.getMid3 = function getMid3() {\n\t\tvar idxA = 0;\n\t\tvar idxB = 0;\n\t\tvar mask = 0;\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (this.ep[i] >= 9) {\n\t\t\t\tidxA += Cnk[i][r--];\n\t\t\t\tvar t = 1 << this.ep[i];\n\t\t\t\tidxB += bitCount(mask & (t - 1)) * fact[2-r];\n\t\t\t\tmask |= t;\n\t\t\t}\n\t\t}\n\t\treturn (idxA * 6 + idxB);\n\t}\n\t\n\tthis.setMid3 = function setMid3(idxA) {\n\t\tvar edge = perm3[idxA % 6];\n\t\tidxA = ~~(idxA / 6);\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (idxA >= Cnk[i][r]) {\n\t\t\t\tidxA -= Cnk[i][r--];\n\t\t\t\tthis.ep[i] = edge[2-r];\n\t\t\t} else {\n\t\t\t\tthis.ep[i] = (8-i+r);\n\t\t\t}\n\t\t}\t\n\t}\n\t\n\tthis.getURtoUL = function getURtoUL() {\n\t\tvar idxA = 0;\n\t\tvar idxB = 0;\n\t\tvar mask = 0;\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (this.ep[i] <= 2) {\n\t\t\t\tidxA += Cnk[i][r--];\n\t\t\t\tvar t = 1 << this.ep[i];\n\t\t\t\tidxB += bitCount(mask & (t - 1)) * fact[2-r];\n\t\t\t\tmask |= t;\n\t\t\t}\n\t\t}\n\t\treturn (idxA * 6 + idxB);\t\n\t}\n\n\tthis.getDRtoDL = function getDRtoDL() {\n\t\tvar idxA = 0;\n\t\tvar idxB = 0;\n\t\tvar mask = 0;\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (4 <= this.ep[i] && this.ep[i] <= 6) {\n\t\t\t\tidxA += Cnk[i][r--];\n\t\t\t\tvar t = 1 << this.ep[i];\n\t\t\t\tidxB += bitCount(mask & (t - 1)) * fact[2-r];\n\t\t\t\tmask |= t;\n\t\t\t}\n\t\t}\n\t\treturn (idxA * 6 + idxB);\t\n\t}\t\n\n\tthis.setEdgePerm = function setEdgePerm(idx) {\n\t\tthis.ep[11] = 0;\n\t\tfor (var i=10; i>=0; i--) {\n\t\t\tthis.ep[i] = (idx % (12-i));\n\t\t\tidx = ~~(idx/(12-i));\n\t\t\tfor (var j=i+1; j<12; j++) {\n\t\t\t\tif (this.ep[j] >= this.ep[i])\n\t\t\t\t\tthis.ep[j]++;\n\t\t\t}\n\t\t}\t\t\t\n\t}\n\t\n\tthis.getEdgePerm = function getEdgePerm() {\n\t\tvar m = (1 << this.ep[11]);\t\t\n\t\tvar idx = 0;\n\t\tfor (var i=10; i>=0; --i) {\n\t\t\tvar t = 1 << this.ep[i];\n\t\t\tidx += bitCount(m & (t - 1)) * fact[11-i];\n\t\t\tm |= t;\n\t\t}\n\t\treturn idx;\t\t\n\t}\n\n\tthis.getCPermSym = function getCPermSym() {\n\t\tif (EPermR2S != null) {\n\t\t\tvar idx = EPermR2S[get8Perm(this.cp)];\n\t\t\tidx ^= e2c[idx&0x0f];\n\t\t\treturn idx;\n\t\t}\n\t\tfor (var k=0; k<16; k++) {\n\t\t\tCornConjugate(this, SymInv[k], temps);\n\t\t\tvar idx = binarySearch(CPermS2R, get8Perm(temps.cp));\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 4) | k);\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\t\n\tthis.getEPermSym = function getEPermSym() {\t\n\t\tif (EPermR2S != null) {\n\t\t\treturn EPermR2S[get8Perm(this.ep)];\n\t\t}\n\t\tfor (var k=0; k<16; k++) {\n\t\t\tEdgeConjugate(this, SymInv[k], temps);\n\t\t\tvar idx = binarySearch(EPermS2R, get8Perm(temps.ep));\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 4) | k);\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\t\n\n\tthis.URFConjugate = function URFConjugate() {\n\t\tCornMult(urf2, this, temps);\n\t\tCornMult(temps, urf1, this);\t\t\n\t\tEdgeMult(urf2, this, temps);\n\t\tEdgeMult(temps, urf1, this);\t\t    \t\t\n\t}\n\t\n\tthis.invCubieCube = function invCubieCube() {\n\t\tfor (var edge=0; edge<12; edge++)\n\t\t\ttemps.ep[this.ep[edge]] = edge;\n\t\tfor (var edge=0; edge<12; edge++)\n\t\t\ttemps.eo[edge] = this.eo[temps.ep[edge]];\n\t\tfor (var corn=0; corn<8; corn++)\n\t\t\ttemps.cp[this.cp[corn]] = corn;\n\t\tfor (var corn=0; corn<8; corn++) {\n\t\t\tvar ori = this.co[temps.cp[corn]];\n\t\t\ttemps.co[corn] = -ori;\n\t\t\tif (temps.co[corn] < 0)\n\t\t\t\ttemps.co[corn] += 3;\n\t\t}\n\t\tthis.copy(temps);\n\t}\n\n\n\tthis.init = function init(cperm, twist, eperm, flip) {\n\t\tset8Perm(this.cp, cperm);\n\t\tthis.setTwist(twist);\n\t\tthis.setEdgePerm(eperm);\n\t\tthis.setFlip(flip);\n\t}\n\t\n\tthis.copy = function copy(c) {\n\t\tfor (var i=0; i<8; i++) {\n\t\t\tthis.cp[i] = c.cp[i];\n\t\t\tthis.co[i] = c.co[i];\n\t\t}\n\t\tfor (var i = 0; i < 12; i++) {\n\t\t\tthis.ep[i] = c.ep[i];\n\t\t\tthis.eo[i] = c.eo[i];\n\t\t}\n\t}\n}\n\nconst cctemp = new CubieCube();\nconst temps = new CubieCube();\n\nfunction set8Perm(arr, idx) {\n\tvar val = 0x76543210;\n\tfor (var i=0; i<7; i++) {\n\t\tvar p = fact[7-i];\n\t\tvar v = ~~(idx / p);\n\t\tidx %= p;\n\t\tv <<= 2;\n\t\tarr[i] = ((val >> v) & 7);\n\t\tvar m = (1 << v) - 1;\n\t\tval = (val & m) + ((val >> 4) & ~m);\n\t}\n\tarr[7] = val;\n}\n\nfunction get8Perm(arr) {\n\tvar idx = 0;\n\tvar val = 0x76543210;\n\tfor (var i=0; i<7; i++) {\n\t\tvar v = arr[i] << 2;\n\t\tidx = (8 - i) * idx + ((val >> v) & 7);\n\t\tval -= 0x11111110 << v;\n\t}\n\treturn idx;\t\n}\n\nfunction CornMult(a, b, prod) {\n\tfor (var corn=0; corn<8; corn++) {\n\t\tprod.cp[corn] = a.cp[b.cp[corn]];\n\t\tvar oriA = a.co[b.cp[corn]];\n\t\tvar oriB = b.co[corn];\n\t\tvar ori = oriA;\n\t\tori += (oriA<3) ? oriB : 3-oriB;\n\t\tori %= 3;\n\t\tif (oriA < 3 ^ oriB < 3) {\n\t\t\tori += 3;\n\t\t}\n\t\tprod.co[corn] = ori;\n\t}\n}\t\n\nfunction EdgeMult(a, b, prod) {\n\tfor (var ed=0; ed<12; ed++) {\n\t\tprod.ep[ed] = a.ep[b.ep[ed]];\n\t\tprod.eo[ed] = (b.eo[ed] ^ a.eo[b.ep[ed]]);\n\t}\n}\n\nfunction CornConjugate(a, idx, b) {\n\tCornMult(CubeSym[SymInv[idx]], a, cctemp);\n\tCornMult(cctemp, CubeSym[idx], b);\t\t\n}\n\nfunction EdgeConjugate(a, idx, b) {\n\tEdgeMult(CubeSym[SymInv[idx]], a, cctemp);\n\tEdgeMult(cctemp, CubeSym[idx], b);\t\t\n}\n\nvar CubeSym = Array(16);\nvar moveCube = Array(18);\nvar SymInv = Array(16);\nvar SymMult = Array(16);\nvar SymMove = Array(16);\nvar Sym8Mult = Array(8);\nvar Sym8Move = Array(8);\nvar Sym8MultInv = Array(8);\nvar SymMoveUD = Array(16);\nvar FlipS2R = Array(336);\nvar TwistS2R = Array(324);\nvar CPermS2R = Array(2768);\nvar EPermS2R = CPermS2R;\nvar FlipR2S = Array(2048);\nvar TwistR2S = Array(2187);\nvar EPermR2S = createArray(40320);\nfor (var i=0; i<40320; i++) {\n\tEPermR2S[i] = 0;\n}\nvar MtoEPerm = Array(40320);\nvar merge = Array(56);\nvar e2c = [0, 0, 0, 0, 1, 3, 1, 3, 1, 3, 1, 3, 0, 0, 0, 0];\nconst urf1 = new CubieCube();\nurf1.init(2531, 1373, 67026819, 1877);\nconst urf2 = new CubieCube();\nurf2.init(2089, 1906, 322752913, 255);\n\n\nfunction CubieInit() {\n\tvar mc = Array(6);\n\tmc[0] = new CubieCube();\n\tmc[0].init(15120, 0, 119750400, 0);\n\tmc[1] = new CubieCube();\n\tmc[1].init(21021, 1494, 323403417, 0);\n\tmc[2] = new CubieCube();\n\tmc[2].init(8064, 1236, 29441808, 802);\n\tmc[3] = new CubieCube();\n\tmc[3].init(9, 0, 5880, 0);\n\tmc[4] = new CubieCube();\n\tmc[4].init(1230, 412, 2949660, 0);\n\tmc[5] = new CubieCube();\n\tmc[5].init(224, 137, 328552, 1160);\n\tfor (var m=0; m<6; m++) {\n\t\tmoveCube[m*3] = mc[m];\n\t\tfor (var p=0; p<2; p++) {\n\t\t\tmoveCube[m*3+p+1] = new CubieCube();\n\t\t\tEdgeMult(moveCube[m*3+p], mc[m], moveCube[m*3+p+1]);\n\t\t\tCornMult(moveCube[m*3+p], mc[m], moveCube[m*3+p+1]);\n\t\t}\n\t}\n\tvar c = new CubieCube();\n\tvar d = new CubieCube();\n\tvar temp;\n\tvar f2 = new CubieCube();\n\tf2.init(28783, 0, 259268407, 0);\n\tvar u4 = new CubieCube();\n\tu4.init(15138, 0, 119765538, 1792);\n\tvar lr2 = new CubieCube();\n\tlr2.init(5167, 0, 83473207, 0);\n\tlr2.co = [ 3, 3, 3, 3, 3, 3, 3, 3 ];\n\tfor (var i=0; i<16; i++) {\n\t\tSymMult[i] = Array(16);\n\t\tSymMove[i] = Array(18);\n\t\tSymMoveUD[i] = Array(10);\n\t\tCubeSym[i] = new CubieCube();\n\t\tCubeSym[i].copy(c);\n\t\tCornMult(c, u4, d);\n\t\tEdgeMult(c, u4, d);\n\t\ttemp = d;\td = c;\tc = temp;\n\t\tif (i % 4 == 3) {\n\t\t\tCornMult(c, lr2, d);\n\t\t\tEdgeMult(c, lr2, d);\n\t\t\ttemp = d;\td = c;\tc = temp;\t\t\t\t\n\t\t}\n\t\tif (i % 8 == 7) {\n\t\t\tCornMult(c, f2, d);\n\t\t\tEdgeMult(c, f2, d);\n\t\t\ttemp = d;\td = c;\tc = temp;\n\t\t}\n\t}\n\n\tfor (var j=0; j<16; j++) {\n\t\tfor (var k=0; k<16; k++) {\n\t\t\tCornMult(CubeSym[j], CubeSym[k], c);\n\t\t\tif (c.cp[0] == 0 && c.cp[1] == 1 && c.cp[2] == 2) {\n\t\t\t\tSymInv[j] = k;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tfor (var i=0; i<16; i++) {\n\t\tfor (var j=0; j<16; j++) {\n\t\t\tCornMult(CubeSym[i], CubeSym[j], c);\n\t\t\tfor (var k=0; k<16; k++) {\n\t\t\t\tif (CubeSym[k].cp[0] == c.cp[0] && CubeSym[k].cp[1] == c.cp[1] && CubeSym[k].cp[2] == c.cp[2]) {\n\t\t\t\t\tSymMult[i][j] = k;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (var j=0; j<18; j++) {\n\t\tfor (var s=0; s<16; s++) {\n\t\t\tCornConjugate(moveCube[j], SymInv[s], c);\n\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\tvar found = 1;\n\t\t\t\tfor (var i=0; i<8; i++) {\n\t\t\t\t\tif (c.cp[i] != moveCube[m].cp[i] || c.co[i] != moveCube[m].co[i]) {\n\t\t\t\t\t\tfound = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (found) {\n\t\t\t\t\tSymMove[s][j] = m;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (var j=0; j<10; j++) {\n\t\tfor (var s=0; s<16; s++) {\n\t\t\tSymMoveUD[s][j] = std2ud[SymMove[s][ud2std[j]]];\n\t\t}\n\t}\n\tfor (var j=0; j<8; j++) {\n\t\tSym8Mult[j] = Array(8);\n\t\tSym8Move[j] = Array(18);\n\t\tSym8MultInv[j] = Array(8);\n\t\tfor (var s=0; s<8; s++) {\n\t\t\tSym8Mult[j][s] = (SymMult[j<<1][s<<1]>>>1);\n\t\t}\n\t}\n\tfor (var j=0; j<18; j++) {\n\t\tfor (var s=0; s<8; s++) {\n\t\t\tSym8Move[s][j] = SymMove[s<<1][j];\n\t\t}\n\t}\n\tfor (var j=0; j<8; j++) {\n\t\tfor (var s=0; s<8; s++) {\n\t\t\tSym8MultInv[j][s] = Sym8Mult[j][SymInv[s<<1]>>1];\n\t\t}\n\t}\n\n\tconst occ = new Array(1260);\n\n\tvar count = 0;\n\tfor (var i=0; i<64; occ[i++] = 0);\n\n\tfor (var i=0; i<2048; i++) {\n\t\tif ((occ[i>>>5]&(1<<(i&0x1f))) == 0) {\n\t\t\tc.setFlip(i);\n\t\t\tfor (var s=0; s<16; s+=2) {\n\t\t\t\tEdgeConjugate(c, s, d);\n\t\t\t\tvar idx = d.getFlip();\n\t\t\t\tocc[idx>>>5] |= 1<<(idx&0x1f);\n\t\t\t\tFlipR2S[idx] = ((count << 3) | (s >>> 1));\n\t\t\t}\n\t\t\tFlipS2R[count++] = i;\n\t\t}\n\t}\n//\talert(count);\n\tcount = 0;\n\tfor (var i=0; i<69; occ[i++] = 0);\n\tfor (var i=0; i<2187; i++) {\n\t\tif ((occ[i>>>5]&(1<<(i&0x1f))) == 0) {\n\t\t\tc.setTwist(i);\n\t\t\tfor (var s=0; s<16; s+=2) {\n\t\t\t\tCornConjugate(c, s, d);\n\t\t\t\tvar idx = d.getTwist();\n\t\t\t\tocc[idx>>>5] |= 1<<(idx&0x1f);\n\t\t\t\tTwistR2S[idx] =  ((count << 3) | (s >>> 1));\n\t\t\t}\n\t\t\tTwistS2R[count++] = i;\n\t\t}\n\t}\n//\talert(count);\n\n\tvar mask = Array(56);\n\tfor (var i=0; i<56; i++) {\n\t\tmask[i] = Array(2);\n\t\tmerge[i] = Array(56);\n\t}\n\tfor (var i=0; i<40320; i++) {\n\t\tset8Perm(c.ep, i);\n\t\tvar a = ~~(c.getURtoUL() / 6);\n\t\tvar b = ~~(c.getDRtoDL() / 6);\n\t\tmask[a][b>>>5] |= 1 << (b&0x1f);\n\t}\n\t\n\tfor (var i=0; i<56; i++) {\n\t\tcount = 0;\n\t\tfor (var j=0; j<56; j++) {\n\t\t\tif ((mask[i][j>>>5]&(1<<(j&0x1f))) != 0) {\n\t\t\t\tmerge[i][j] = count++;\n\t\t\t}\n\t\t}\n\t}\n\tcount = 0;\n\tfor (var i=0; i<1260; occ[i++] = 0);\n\tfor (var i=0; i<40320; i++) {\n\t\tif ((occ[i>>>5]&(1<<(i&0x1f))) == 0) {\n\t\t\tset8Perm(c.ep, i);\n\t\t\tfor (var s=0; s<16; s++) {\n\t\t\t\tEdgeConjugate(c, s, d);\n\t\t\t\tvar idx = get8Perm(d.ep);\n\t\t\t\tocc[idx>>>5] |= 1<<(idx&0x1f);\n\t\t\t\tvar a = d.getURtoUL();\n\t\t\t\tvar b = d.getDRtoDL();\n\t\t\t\tvar m = (merge[~~(a/6)][~~(b/6)] * 4032 + a * 12 + b % 6 * 2 + get8Parity(idx));\n\t\t\t\tMtoEPerm[m] = (count << 4 | s);\n\t\t\t\tEPermR2S[idx] = (count << 4 | s);\n\t\t\t}\n\t\t\tEPermS2R[count++] = i;\n\t\t}\n\t}\n}\n\nvar UDSliceMove = Array(495);//new char[495][18];\nvar TwistMove = Array(324);//new char[324][18];\nvar FlipMove = Array(336);//new char[336][18];\nvar UDSliceConj = Array(495);//new char[495][8];\nvar UDSliceTwistPrun = Array(495*324);//new byte[495 * 324];\nvar UDSliceFlipPrun = Array(495*336);//new byte[495 * 336];\n\t\nvar TwistFlipPrun = Array(336*324*8);//new byte[336 * 324 * 8];\n\t\n\t//phase1to2\nvar Mid3Move = Array(1320);//new char[1320][18];\nvar Mid32MPerm = Array(24);//new byte[24];\nvar CParity = Array(87);//new byte[2768/8];\n\n\t//phase2\nvar CPermMove = Array(2768);//new char[2768][18];\nvar EPermMove = Array(2768);//new char[2768][10];\nvar MPermMove = Array(24);//new byte[24][10];\nvar MPermConj = Array(24);//new byte[24][16];\nvar MCPermPrun = Array(24*2768);//new byte[24*2768];\nvar MEPermPrun = Array(24*2768);//new byte[24*2768];\n\n\nfunction CoordInit() {\n\tvar c = new CubieCube();\n\tvar d = new CubieCube();\n\tvar i, j;\n\tfor (i=0; i<2768; i++) {\n\t\tCPermMove[i] = Array(18);\n\t\tset8Perm(c.cp, CPermS2R[i]);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tCornMult(c, moveCube[j], d);\n\t\t\tCPermMove[i][j] = d.getCPermSym();\n\t\t}\n\t}\t\t\n\tfor (i=0; i<2768; i++) {\n\t\tEPermMove[i] = Array(10);\n\t\tset8Perm(c.ep, EPermS2R[i]);\n\t\tfor (j=0; j<10; j++) {\n\t\t\tEdgeMult(c, moveCube[ud2std[j]], d);\n\t\t\tEPermMove[i][j] = d.getEPermSym();\n\t\t}\n\t}\n\tfor (i=0; i<336; i++) {\n\t\tFlipMove[i] = Array(18);\n\t\tc.setFlip(FlipS2R[i]);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tEdgeMult(c, moveCube[j], d);\n\t\t\tFlipMove[i][j] = d.getFlipSym();\n\t\t}\n\t}\n\tfor (i=0; i<324; i++) {\n\t\tTwistMove[i] = Array(18);\n\t\tc.setTwist(TwistS2R[i]);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tCornMult(c, moveCube[j], d);\n\t\t\tTwistMove[i][j] = d.getTwistSym();\n\t\t}\n\t}\n\tfor (i=0; i<495; i++) {\n\t\tUDSliceMove[i] = Array(18);\n\t\tc.setUDSlice(i);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tEdgeMult(c, moveCube[j], d);\n\t\t\tUDSliceMove[i][j] = d.getUDSlice();\n\t\t}\n\t}\n\tfor (i=0; i<495; i++) {\n\t\tUDSliceConj[i] = Array(8);\n\t\tc.setUDSlice(i);\n\t\tfor (j=0; j<16; j+=2) {\n\t\t\tEdgeConjugate(c, SymInv[j], d);\n\t\t\tUDSliceConj[i][j>>>1] = d.getUDSlice();\n\t\t}\n\t}\n\tfor (i=0; i<1320; i++) {\n\t\tMid3Move[i] = Array(18);\n\t\tc.setMid3(i);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tEdgeMult(c, moveCube[j], d);\n\t\t\tMid3Move[i][j] = d.getMid3();\n\t\t}\n\t}\t\n\tfor (i=0; i<24; i++) {\n\t\tc.setMPerm(i);\n\t\tMid32MPerm[c.getMid3() % 24] = i;\n\t}\n\tfor (i=0; i<2768; i++) {\n\t\tCParity[i>>>3] |= (get8Parity(CPermS2R[i])) << (i & 7);\n\t}\n\tfor (i=0; i<24; i++) {\n\t\tMPermMove[i] = Array(10);\n\t\tc.setMPerm(i);\n\t\tfor (j=0; j<10; j++) {\n\t\t\tEdgeMult(c, moveCube[ud2std[j]], d);\n\t\t\tMPermMove[i][j] = d.getMPerm();\n\t\t}\n\t}\t\t\n\tfor (i=0; i<24; i++) {\n\t\tMPermConj[i] = Array(16);\n\t\tc.setMPerm(i);\n\t\tfor (j=0; j<16; j++) {\n\t\t\tEdgeConjugate(c, SymInv[j], d);\n\t\t\tMPermConj[i][j] = d.getMPerm();\n\t\t}\n\t}\n\t\n\tvar SymState = Array(324);\n\tfor (i=0; i<324; i++) {\n\t\tc.setTwist(TwistS2R[i]);\n\t\tfor (var j=0; j<8; j++) {\n\t\t\tCornConjugate(c, j<<1, d);\n\t\t\tif (binarySearch(TwistS2R, d.getTwist()) != 0xffff) {\n\t\t\t\tSymState[i] |= (1 << j);\n\t\t\t}\n\t\t}\n\t}\n\tvar SymStateF = Array(324);\n\tfor (i=0; i<336; i++) {\n\t\tc.setFlip(FlipS2R[i]);\n\t\tfor (var j=0; j<8; j++) {\n\t\t\tEdgeConjugate(c, j<<1, d);\n\t\t\tif (binarySearch(FlipS2R, d.getFlip()) != 0xffff) {\n\t\t\t\tSymStateF[i] |= (1 << j);\n\t\t\t}\n\t\t}\n\t}\t\t\n\tfor (i=0; i<336*324*8; i++) {\n\t\tTwistFlipPrun[i] = -1;\n\t}\n\tfor (i=0; i<8; i++) {\n\t\tTwistFlipPrun[i] = 0;\n\t}\n\tvar depth = 0;\n\tvar done = 8;\n\tvar inv;\n\tvar select;\n\tvar check;\n\t\n\twhile (done < 336*324*8) {\n\t\tinv = depth > 6;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<336*324*8; i++) {\n\t\t\tif (TwistFlipPrun[i] != select)\n\t\t\t\tcontinue;\n\t\t\tvar twist = ~~(i / 2688);\n\t\t\tvar flip = i % 2688;\n\t\t\tvar fsym = i & 7;\n\t\t\tflip >>>= 3;\n\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\tvar twistx = TwistMove[twist][m];\n\t\t\t\tvar tsymx = twistx & 7;\n\t\t\t\ttwistx >>>= 3;\n\t\t\t\tvar flipx = FlipMove[flip][Sym8Move[fsym][m]];\n\t\t\t\tvar fsymx = Sym8MultInv[Sym8Mult[flipx & 7][fsym]][tsymx];\n\t\t\t\tflipx >>>= 3;\n\t\t\t\tvar idx = twistx * 2688 + (flipx << 3 | fsymx);\n\t\t\t\tif (TwistFlipPrun[idx] == check) {\n\t\t\t\t\tdone++;\n\t\t\t\t\tif (inv) {\n\t\t\t\t\t\tTwistFlipPrun[i] = depth;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tTwistFlipPrun[idx] = depth;\n\t\t\t\t\t\tvar sym = SymState[twistx];\n\t\t\t\t\t\tvar symF = SymStateF[flipx];\n\t\t\t\t\t\tif (sym != 1 || symF != 1) {\n\t\t\t\t\t\t\tfor (var j=0; j<8; j++, symF >>= 1) {\n\t\t\t\t\t\t\t\tif ((symF & 1) == 1) {\n\t\t\t\t\t\t\t\t\tvar fsymxx = Sym8MultInv[fsymx][j];\n\t\t\t\t\t\t\t\t\tfor (var k=0; k<8; k++) {\n\t\t\t\t\t\t\t\t\t\tif ((sym & (1 << k)) != 0) {\n\t\t\t\t\t\t\t\t\t\t\tvar idxx = twistx * 2688 + (flipx << 3 | Sym8MultInv[fsymxx][k]);\n\t\t\t\t\t\t\t\t\t\t\tif (TwistFlipPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\t\tTwistFlipPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\n\tfor (i=0; i<495*324; i++) {\n\t\tUDSliceTwistPrun[i] = -1;\n\t}\n\tUDSliceTwistPrun[0] = 0;\n\tdepth = 0;\n\tdone = 1;\n\twhile (done < 495 * 324) {\n\t\tinv = depth > 6;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<495*324; i++) {\n\t\t\tif (UDSliceTwistPrun[i] == select) {\n\t\t\t\tvar slice = i % 495;\n\t\t\t\tvar twist = ~~(i / 495);\n\t\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\t\tvar twistx = TwistMove[twist][m];\n\t\t\t\t\tvar symx = twistx & 7;\n\t\t\t\t\tvar slicex = UDSliceConj[UDSliceMove[slice][m]][symx];\n\t\t\t\t\ttwistx >>>= 3;\n\t\t\t\t\tvar idx = twistx * 495 + slicex;\n\t\t\t\t\tif (UDSliceTwistPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tUDSliceTwistPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tUDSliceTwistPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymState[twistx];\n\t\t\t\t\t\t\tif (sym != 1) {\n\t\t\t\t\t\t\t\tfor (var j=1; j<8; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = twistx * 495 + UDSliceConj[slicex][j];\n\t\t\t\t\t\t\t\t\t\tif (UDSliceTwistPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tUDSliceTwistPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\t\t\n\n\tfor (i=0; i<495*336; i++) {\n\t\tUDSliceFlipPrun[i] = -1;\n\t}\n\tUDSliceFlipPrun[0] = 0;\n\tdepth = 0;\n\tdone = 1;\n\twhile (done < 495 * 336) {\n\t\tinv = depth > 6;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<495*336; i++) {\n\t\t\tif (UDSliceFlipPrun[i] == select) {\n\t\t\t\tvar slice = i % 495;\n\t\t\t\tvar flip = ~~(i / 495);\n\t\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\t\tvar flipx = FlipMove[flip][m];\n\t\t\t\t\tvar symx = flipx & 7;\n\t\t\t\t\tvar slicex = UDSliceConj[UDSliceMove[slice][m]][symx];\n\t\t\t\t\tflipx >>>= 3;\n\t\t\t\t\tvar idx = flipx * 495 + slicex;\n\t\t\t\t\tif (UDSliceFlipPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tUDSliceFlipPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tUDSliceFlipPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymStateF[flipx];\n\t\t\t\t\t\t\tif (sym != 1) {\n\t\t\t\t\t\t\t\tfor (var j=1; j<8; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = flipx * 495 + UDSliceConj[slicex][j];\n\t\t\t\t\t\t\t\t\t\tif (UDSliceFlipPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tUDSliceFlipPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tdepth++;\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\t\n\t\n\tSymState = Array(2768);\n\tfor (i=0; i<2768; i++) {\n\t\tset8Perm(c.ep, EPermS2R[i]);\n\t\tfor (j=1; j<16; j++) {\n\t\t\tEdgeConjugate(c, j, d);\n\t\t\tif (binarySearch(EPermS2R, get8Perm(d.ep)) != 0xffff) {\n\t\t\t\tSymState[i] |= (1 << j);\n\t\t\t}\n\t\t}\n\t}\n\tfor (i=0; i<24*2768; i++) {\n\t\tMEPermPrun[i] = -1;\n\t}\n\tMEPermPrun[0] = 0;\n\twhile (done < 24*2768) {\n\t\tinv = depth > 7;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<24*2768; i++) {\n\t\t\tif (MEPermPrun[i] == select) {\n\t\t\t\tvar mid = i % 24;\n\t\t\t\tvar edge = ~~(i / 24);\n\t\t\t\tfor (var m=0; m<10; m++) {\n\t\t\t\t\tvar edgex = EPermMove[edge][m];\n\t\t\t\t\tvar symx = edgex & 15;\n\t\t\t\t\tvar midx = MPermConj[MPermMove[mid][m]][symx];\n\t\t\t\t\tedgex >>>= 4;\n\t\t\t\t\tvar idx = edgex * 24 + midx;\n\t\t\t\t\tif (MEPermPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tMEPermPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tMEPermPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymState[edgex];\n\t\t\t\t\t\t\tif (sym != 0) {\n\t\t\t\t\t\t\t\tfor (j=1; j<16; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = edgex * 24 + MPermConj[midx][j];\n\t\t\t\t\t\t\t\t\t\tif (MEPermPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tMEPermPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\t\t\n\t\t\n\tfor (i=0; i<24*2768; i++) {\n\t\tMCPermPrun[i] = -1;\n\t}\n\tMCPermPrun[0] = 0;\n\tdepth = 0;\n\tdone = 1;\n\twhile (done < 24*2768) {\n\t\tinv = depth > 7;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<24*2768; i++) {\n\t\t\tif (MCPermPrun[i] == select) {\n\t\t\t\tvar mid = i % 24;\n\t\t\t\tvar corn = ~~(i / 24);\n\t\t\t\tfor (var m=0; m<10; m++) {\n\t\t\t\t\tvar cornx = CPermMove[corn][ud2std[m]];\n\t\t\t\t\tvar symx = (cornx & 15);\n\t\t\t\t\tvar midx = MPermConj[MPermMove[mid][m]][symx];\n\t\t\t\t\tcornx >>>= 4;\n\t\t\t\t\tvar idx = cornx * 24 + midx;\n\t\t\t\t\tif (MCPermPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tMCPermPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tMCPermPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymState[cornx];\n\t\t\t\t\t\t\tif (sym != 0) {\n\t\t\t\t\t\t\t\tfor (j=1; j<16; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = cornx * 24 + MPermConj[midx][j ^ e2c[j]];\n\t\t\t\t\t\t\t\t\t\tif (MCPermPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tMCPermPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\n}\t\t\t\t\t\n\nfunction randomCube() {\n\tvar eperm;\n\tvar cperm;\n\tdo {\n\t\teperm = ~~(Math.random() * 479001600);\n\t\tcperm = ~~(Math.random() * 40320);\n\t} while (((get8Parity(cperm) ^ get12Parity(eperm))) != 0);\n\tvar c = new CubieCube();\n\tc.init(cperm, ~~(Math.random() * 2187), eperm, ~~(Math.random() * 2048));\n\treturn c;\n}\n\nvar move = Array(31);\n\nvar corn = Array(20);\nvar csym = Array(20);\nvar mid3 = Array(20);\nvar e1 = Array(20);\nvar e2 = Array(20);\nvar urfidx;\n\nvar twist = Array(6);\nvar tsym = Array(6);\nvar flip = Array(6);\nvar fsym = Array(6);\nvar slice = Array(6);\nvar corn0 = Array(6);\nvar csym0 = Array(6);\nvar mid30 = Array(6);\nvar e10 = Array(6);\nvar e20 = Array(6);\nvar prun = Array(6);\n\nvar length1 = 0;\nvar maxlength2 = 0;\nvar sol = 999;\nvar valid1 = 0;\nvar valid2 = 0;\nvar solution = \"\";\nvar useSeparator = false;\n\nfunction Solve(c) {\n\tc.temps = new CubieCube();\n\tfor (var i=0; i<6; i++) {\n\t\ttwist[i] = c.getTwistSym();\n\t\ttsym[i] = twist[i] & 7;\n\t\ttwist[i] >>>= 3;\n\t\tflip[i] = c.getFlipSym();\n\t\tfsym[i] = flip[i] & 7;\n\t\tflip[i] >>>= 3;\n\t\tslice[i] = c.getUDSlice();\n\t\tcorn0[i] = c.getCPermSym();\n\t\tcsym0[i] = corn0[i] & 15;\n\t\tcorn0[i] >>>= 4;\n\t\tmid30[i] = c.getMid3();\n\t\te10[i] = c.getURtoUL();\n\t\te20[i] = c.getDRtoDL();\n\t\tprun[i] = Math.max(Math.max(UDSliceTwistPrun[twist[i] * 495 + UDSliceConj[slice[i]][tsym[i]]],\n\t\t\t\t\t\tUDSliceFlipPrun[flip[i] * 495 + UDSliceConj[slice[i]][fsym[i]]]),\n\t\t\t\t\t\tTwistFlipPrun[twist[i] * 2688 + (flip[i] << 3 | Sym8MultInv[fsym[i]][tsym[i]])]);\n\t\tc.URFConjugate();\n\t\tif (i==2) {\n\t\t\tc.invCubieCube();\n\t\t}\n\t}\n\tsolution = null;\n\tsol = 22;\n\tfor (length1=0; length1<sol; length1++) {\n\t\tmaxlength2 = Math.min(sol/2+1, sol-length1);\n\t\tfor (urfidx=0; urfidx<6; urfidx++) {\n\t\t\tcorn[0] = corn0[urfidx];\n\t\t\tcsym[0] = csym0[urfidx];\n\t\t\tmid3[0] = mid30[urfidx];\n\t\t\te1[0] = e10[urfidx];\n\t\t\te2[0] = e20[urfidx];\n\t\t\tif ((prun[urfidx] <= length1)\n\t\t\t\t\t&& phase1(twist[urfidx], tsym[urfidx], flip[urfidx], fsym[urfidx],\n\t\t\t\t\t\t\t\tslice[urfidx], length1, 18)) {\n\t\t\t\tif (solution == null) {\n\t\t\t\t\treturn \"Error 8\";\n\t\t\t\t} else {\n\t\t\t\t\treturn solution;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn \"Error 7\";\n}\n\nfunction phase1(twist, tsym, flip, fsym, slice, maxl, lm) {\n\tif (twist==0 && flip==0 && slice==0 && maxl < 5) {\n\t\treturn maxl == 0 && init2();\n\t}\n\tfor (var m=0; m<18; m++) {\n\t\tif (ckmv[lm][m]) {\n\t\t\tm+=2;\n\t\t\tcontinue;\n\t\t}\n\t\tvar slicex = UDSliceMove[slice][m];\n\t\tvar twistx = TwistMove[twist][Sym8Move[tsym][m]];\n\t\tvar tsymx = Sym8Mult[twistx & 7][tsym];\n\t\ttwistx >>>= 3;\n\t\tif (UDSliceTwistPrun[twistx * 495 + UDSliceConj[slicex][tsymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar flipx = FlipMove[flip][Sym8Move[fsym][m]];\n\t\tvar fsymx = Sym8Mult[flipx & 7][fsym];\n\t\tflipx >>>= 3;\n\t\tif (TwistFlipPrun[twistx * 2688 + (flipx << 3 | Sym8MultInv[fsymx][tsymx])] >= maxl\n\t\t\t\t||UDSliceFlipPrun[flipx * 495 + UDSliceConj[slicex][fsymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tmove[length1-maxl] = m;\n\t\tvalid1 = Math.min(valid1, length1-maxl);\n\t\tif (phase1(twistx, tsymx, flipx, fsymx, slicex, maxl-1, m)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction init2() {\n//\tif (System.currentTimeMillis() > timeOut) {\n//\t\treturn true;\n//\t}\n\tvalid2 = Math.min(valid2, valid1);\n\tfor (var i=valid1; i<length1; i++) {\n\t\tvar m = move[i];\n\t\tcorn[i+1] = CPermMove[corn[i]][SymMove[csym[i]][m]];\n\t\tcsym[i+1] = SymMult[corn[i+1] & 15][csym[i]];\n\t\tcorn[i+1] >>>= 4;\n\t\tmid3[i+1] = Mid3Move[mid3[i]][m];\n\t}\n\tvalid1 = length1;\n\tvar mid = Mid32MPerm[mid3[length1] % 24];\n\tvar prun = MCPermPrun[corn[length1] * 24 + MPermConj[mid][csym[length1]]];\n\tif (prun >= maxlength2) {\n\t\treturn false;\n\t}\n\tfor (var i=valid2; i<length1; i++) {\n\t\te1[i+1] = Mid3Move[e1[i]][move[i]];\n\t\te2[i+1] = Mid3Move[e2[i]][move[i]];\n\t}\n\tvalid2 = length1;\n\tvar cornx = corn[length1];\n\tvar ex = merge[~~(e1[length1]/6)][~~(e2[length1]/6)] * 4032\n\t\t\t\t + e1[length1] * 12 + e2[length1] % 6 * 2 + (((CParity[cornx>>>3]>>>(cornx&7))&1) ^ get4Parity(mid));\n\tvar edge = MtoEPerm[ex];\n\tvar esym = edge & 15;\n\tedge >>>= 4;\n\t\tprun = Math.max(MEPermPrun[edge * 24 + MPermConj[mid][esym]], prun);\n\tif (prun >= maxlength2) {\n\t\treturn false;\n\t}\n\t\tvar lm = length1==0 ? 10 : std2ud[~~(move[length1-1]/3)*3+1];\n\tfor (var i=prun; i<maxlength2; i++) {\n\t\tif (phase2(edge, esym, corn[length1], csym[length1], mid, i, length1, lm)) {\n\t\t\tsol = length1 + i;\n\t\t\tvar sb = \"\";\n\t\t\tvar urf = urfidx;\n//\t\t\tif (inverse) {\n\t\t\t\turf = (urf + 3) % 6;\n//\t\t\t}\n\t\t\tif (urf < 3) {\n\t\t\t\tfor (var s=0; s<length1; s++) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t\tfor (var s=length1; s<sol; s++) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (var s=sol-1; s>=length1; s--) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t\tfor (var s=length1-1; s>=0; s--) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t}\n\t\t\t// sb += \"(\" + sol + \"f)\";\n\t\t\tsolution = sb;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction phase2(edge, esym, corn, csym, mid, maxl, depth, lm) {\n\tif (edge==0 && corn==0 && mid==0) {\n\t\treturn true;\n\t}\n\tfor (var m=0; m<10; m++) {\n\t\tif (ckmv2[lm][m]) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar midx = MPermMove[mid][m];\n\t\tvar edgex = EPermMove[edge][SymMoveUD[esym][m]];\n\t\tvar esymx = SymMult[edgex & 15][esym];\n\t\tedgex >>>= 4;\n\t\tif (MEPermPrun[edgex * 24 + MPermConj[midx][esymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar cornx = CPermMove[corn][SymMove[csym][ud2std[m]]];\n\t\tvar csymx = SymMult[cornx & 15][csym];\n\t\tcornx >>>= 4;\n\t\tif (MCPermPrun[cornx * 24 + MPermConj[midx][csymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tmove[depth] = ud2std[m];\n\t\tif (phase2(edgex, esymx, cornx, csymx, midx, maxl-1, depth+1, m)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nvar initialized = false;\n\nfunction initialize() {\n\tif (initialized) {\n\t\treturn;\n\t}\n\tCubieInit();\n\tCoordInit();\n\tinitialized = true;\n}\n\nfunction solve(c) {\n\tinitialize();\n\tconst cc = new CubieCube();\n\tcc.cp = c.cp;\n\tcc.co = c.co;\n\tcc.ep = c.ep;\n\tcc.eo = c.eo;\n\treturn Solve(cc);\n};\n\nmodule.exports.initialize = initialize;\nmodule.exports.solve = solve;\nmodule.exports.randomCube = randomCube;\n"],"sourceRoot":""}